<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Github | Akshay's Programming Blog]]></title>
  <link href="http://akshayrangnekar.github.io/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://akshayrangnekar.github.io/"/>
  <updated>2014-03-19T23:56:21+00:00</updated>
  <id>http://akshayrangnekar.github.io/</id>
  <author>
    <name><![CDATA[Akshay Rangnekar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Up and Running on AppEngine With Maven, Jersey and Guice - Part 1]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/"/>
    <updated>2014-03-13T17:20:31+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice</id>
    <content type="html"><![CDATA[<p>After 10 years away from proper coding, I&rsquo;m building a new application. I&rsquo;ll talk more about Listerly and some of my design choices at a later time, but this post should help document the process so if anyone else wants this type of a setup it&rsquo;s easy to get going.</p>

<p>This application has many moving pieces, and to make my life easier I&rsquo;m going to have some pretty awesome tools do most of the heavy lifting for me. In no particular order, the key pieces that I&rsquo;ll be using include Google AppEngine (PAAS), maven (build), git/github (source control), Jersey (RESTful services), Guice (dependency injection), Freemarker (templates), Jackson (JSON) and JPA (persistence).</p>

<ul>
<li><a href="/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a> gets you set up with maven and a blank repository on github</li>
<li><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> gets you to the point of having a working web application running locally and deployed on AppEngine.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> adds Jersey and Guice to the mix.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> makes Jersey useful by demonstrating how to use Freemarker and Jackson to return HTML and JSON respectively.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/">Part 5</a> will set up persistence to the Google DataStore using JPA.</li>
</ul>


<!-- more -->


<h2>Create AppEngine Project</h2>

<p>Very simple. Go to <a href="http://appengine.google.com">appengine.google.com</a>. Login, then click &ldquo;Create Application&rdquo;:
<img src="/images/postimages/appengine1.png"></p>

<p>Find a nice identifier is available, and give your application a descriptive name. For the moment, I&rsquo;ve set with the default authentication options, that allows any Google user to authenticate to your app (for the areas that you enable authentication):
<img src="/images/postimages/appengine2.png"></p>

<p>Hopefully that should be all you need to do. Tell Google to go ahead and you should have a blank project ready to go:
<img src="/images/postimages/appengine3.png"></p>

<h2>Install Maven</h2>

<p>First, download Maven from the Apache download site:
```
mbp:~ akshay$ cd Dev/
mbp:Dev akshay$ mkdir lib
mbp:Dev akshay$ cd lib/
mbp:lib akshay$ curl -O <a href="http://apache.mirror.anlx.net/maven/maven-3/3.2.1/binaries/apache-maven-3.2.1-bin.tar.gz">http://apache.mirror.anlx.net/maven/maven-3/3.2.1/binaries/apache-maven-3.2.1-bin.tar.gz</a>
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</p>

<pre><code>                             Dload  Upload   Total   Spent    Left  Speed
</code></pre>

<p>100 6765k  100 6765k    0     0  1757k      0  0:00:03  0:00:03 &mdash;:&mdash;:&mdash; 1756k
mbp:lib akshay$
```</p>

<p>Then unzip the file:
<code>
mbp:lib akshay$ ls
apache-maven-3.2.1-bin.tar.gz
mbp:lib akshay$ tar -xvzf apache-maven-3.2.1-bin.tar.gz
</code></p>

<p>Set some environment variables:
<code>bash
export M2_HOME=/Users/akshay/Dev/lib/apache-maven-3.2.1/
export M2=$M2_HOME/bin
export MAVEN_OPTS="-Xms256m -Xmx512m"
export PATH=$M2:$PATH
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
</code></p>

<p>Check that we&rsquo;re good:
<code>console
mbp:lib akshay$ mvn -version
Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T17:37:52+00:00)
Maven home: /Users/akshay/Dev/lib/apache-maven-3.2.1
Java version: 1.7.0_51, vendor: Oracle Corporation
Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre
Default locale: en_US, platform encoding: UTF-8
OS name: "mac os x", version: "10.9.2", arch: "x86_64", family: "mac"
</code></p>

<h2>Create repository</h2>

<p>Go to GitHub and create a new private repository
<img src="/images/postimages/github-newrepo1.png"></p>

<p>Note I&rsquo;ve asked it to create a README for me so I can clone. Personal preference &ndash; I prefer to <code>clone</code> only rather than <code>init</code>.</p>

<p><img src="/images/postimages/github-newrepo2.png"></p>

<p><img src="/images/postimages/github-newrepo3.png"></p>

<p>Then clone to your local development directory:
<code>
mbp:Dev akshay$ mkdir Listerly
mbp:Dev akshay$ cd Listerly/
mbp:Listerly akshay$ ls
mbp:Listerly akshay$ git clone https://github.com/akshayrangnekar/listerly.git
Cloning into 'listerly'...
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
Checking connectivity... done.
mbp:Listerly akshay$ cd listerly
mbp:listerly akshay$ ls
README.md
mbp:listerly akshay$
</code></p>

<p>That&rsquo;s it for Part 1. In <a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> we&rsquo;ll create a Maven project for AppEngine and a simple dummy servlet.</p>

<p><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Continue &ndash;></a></p>
]]></content>
  </entry>
  
</feed>
