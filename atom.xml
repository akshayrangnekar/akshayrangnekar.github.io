<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Akshay's Programming Blog]]></title>
  <link href="http://akshayrangnekar.github.io/atom.xml" rel="self"/>
  <link href="http://akshayrangnekar.github.io/"/>
  <updated>2014-03-19T23:56:21+00:00</updated>
  <id>http://akshayrangnekar.github.io/</id>
  <author>
    <name><![CDATA[Akshay Rangnekar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Up and Running on AppEngine With Maven, Jersey and Guice - Part 5]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/"/>
    <updated>2014-03-18T18:23:59+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5</id>
    <content type="html"><![CDATA[<p>This is part five of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>

<p><a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> was around getting Jersey set up with JSON and Freemarker. This part works through getting Persistence working with JPA.</p>

<!-- more -->


<h2>Working with the Datastore</h2>

<p>The final part of this tutorial is getting data saved and retrieved from the AppEngine Datastore. There are a number of options for tools to help you do this including the Java Persistence API (JPA), Java Data Objects (JDO), Objectify or the Datastore&rsquo;s Low-level API. For reasons of familiarity I&rsquo;ve chosen to proceed with JPA. There are many discussions out there as to the best option, but the short summary is that it really is dependent on your application and application needs. This was again a fairly complex task to get right, and a big thank you to the author of <a href="http://www.loop81.com/2013/02/gae-google-app-engine-jpa2-maven-and.html">this piece</a> which put me in the right direction.</p>

<p>To get started with JPA the first thing we need is a big bunch of dependencies.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.datanucleus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>datanucleus-api-jpa<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>${datanucleus.jpa.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.datanucleus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>datanucleus-core<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>${datanucleus.jpa.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.google.appengine.orm<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>datanucleus-appengine<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>2.1.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;exclusions&gt;</span>
</span><span class='line'>    <span class="nt">&lt;exclusion&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.datanucleus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>datanucleus-enhancer<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/exclusion&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/exclusions&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>javax.jdo<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>jdo-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>3.0.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.apache.geronimo.specs<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>geronimo-jpa_2.0_spec<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.hibernate<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>hibernate-validator<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>5.1.0.Final<span class="nt">&lt;/version&gt;</span>
</span><span class='line'><span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>The one thing to note is note is that from the AppEngine ORM package, we&rsquo;re excluding the built-in datanucleus enhancer. This is what takes your <code>@Entity</code> annotated classes and adds to them to make them databaseable. Instead we&rsquo;re going to use the <code>maven-datanucleus-plugin</code> to do the enhancement.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.datanucleus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-datanucleus-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>${datanucleus.jpa.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;api&gt;</span>JPA<span class="nt">&lt;/api&gt;</span>
</span><span class='line'>    <span class="nt">&lt;mappingIncludes&gt;</span>**/entities/*.class<span class="nt">&lt;/mappingIncludes&gt;</span>
</span><span class='line'>    <span class="nt">&lt;verbose&gt;</span>true<span class="nt">&lt;/verbose&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.datanucleus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>datanucleus-core<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>${datanucleus.jpa.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;executions&gt;</span>
</span><span class='line'>    <span class="nt">&lt;execution&gt;</span>
</span><span class='line'>      <span class="nt">&lt;phase&gt;</span>compile<span class="nt">&lt;/phase&gt;</span>
</span><span class='line'>      <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>        <span class="nt">&lt;goal&gt;</span>enhance<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/execution&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/executions&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you&rsquo;re working with Eclipse and the m2eclipse plugin, this will work from the command line, but not eclipse. To proceed in Eclipse, configure the m2e plugin to allow execution of the datanucleus plugin.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;pluginManagement&gt;</span>
</span><span class='line'>  <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>org.eclipse.m2e<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>lifecycle-mapping<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>1.0.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>        <span class="nt">&lt;lifecycleMappingMetadata&gt;</span>
</span><span class='line'>          <span class="nt">&lt;pluginExecutions&gt;</span>
</span><span class='line'>            <span class="nt">&lt;pluginExecution&gt;</span>
</span><span class='line'>              <span class="nt">&lt;pluginExecutionFilter&gt;</span>
</span><span class='line'>                <span class="nt">&lt;groupId&gt;</span>org.datanucleus<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;artifactId&gt;</span>maven-datanucleus-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>                <span class="nt">&lt;versionRange&gt;</span>${datanucleus.jpa.version}<span class="nt">&lt;/versionRange&gt;</span>
</span><span class='line'>
</span><span class='line'>                <span class="nt">&lt;goals&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;goal&gt;</span>enhance<span class="nt">&lt;/goal&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/goals&gt;</span>
</span><span class='line'>              <span class="nt">&lt;/pluginExecutionFilter&gt;</span>
</span><span class='line'>
</span><span class='line'>              <span class="nt">&lt;action&gt;</span>
</span><span class='line'>                <span class="nt">&lt;execute</span> <span class="nt">&gt;</span>
</span><span class='line'>                  <span class="nt">&lt;runOnIncremental&gt;</span>false<span class="nt">&lt;/runOnIncremental&gt;</span>
</span><span class='line'>                <span class="nt">&lt;/execute &gt;</span>
</span><span class='line'>              <span class="nt">&lt;/action&gt;</span>
</span><span class='line'>            <span class="nt">&lt;/pluginExecution&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/pluginExecutions&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/lifecycleMappingMetadata&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'><span class="nt">&lt;/pluginManagement&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now if you run the <code>compile</code> goal, you should see log messages indicating that DataNucleus has run. Some of these may appear a little scary, since the logging levels from DataNucleus leave a little to be desired, but look for the message <code>DataNucleus Enhancer completed with success</code> and you should be good.</p>

<p>Now, let&rsquo;s actually give DataNucleus something to do. Here&rsquo;s my incredibly simple test entity.</p>

<figure class='code'><figcaption><span> (SimpleTestEntity.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/5/SimpleTestEntity.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">entities</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">javax</span><span class="o">.</span><span class="na">persistence</span><span class="o">.</span><span class="na">GenerationType</span><span class="o">.</span><span class="na">IDENTITY</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.persistence.Entity</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.persistence.GeneratedValue</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.persistence.Id</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Entity</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleTestEntity</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Id</span>
</span><span class='line'>    <span class="nd">@GeneratedValue</span><span class="o">(</span><span class="n">strategy</span> <span class="o">=</span> <span class="n">IDENTITY</span><span class="o">)</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Long</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">String</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Date</span> <span class="n">creationDate</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Date</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">SimpleTestEntity</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Long</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="n">Long</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Date</span> <span class="nf">getCreationDate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">creationDate</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let&rsquo;s create a new couple of methods in the Resource to exercise this entity &ndash; one to create it, and one to retrieve it from the datastore.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@GET</span>
</span><span class='line'><span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_HTML</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/persist&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Template</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;/foo.ftl&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">persist</span><span class="o">(</span><span class="nd">@QueryParam</span><span class="o">(</span><span class="s">&quot;name&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">name</span><span class="o">,</span> <span class="nd">@QueryParam</span><span class="o">(</span><span class="s">&quot;message&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">message</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>  <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">,</span> <span class="n">name</span><span class="o">);</span>
</span><span class='line'>  <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;bar&quot;</span><span class="o">,</span> <span class="n">message</span><span class="o">);</span>
</span><span class='line'>  <span class="n">SimpleTestEntity</span> <span class="n">ste</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleTestEntity</span><span class="o">();</span>
</span><span class='line'>  <span class="n">ste</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>    <span class="n">EntityManagerFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="n">Persistence</span><span class="o">.</span><span class="na">createEntityManagerFactory</span><span class="o">(</span><span class="s">&quot;transactions-optional&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">EntityManager</span> <span class="n">entityManager</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">createEntityManager</span><span class="o">();</span>
</span><span class='line'>    <span class="n">entityManager</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">().</span><span class="na">begin</span><span class="o">();</span>
</span><span class='line'>    <span class="n">entityManager</span><span class="o">.</span><span class="na">persist</span><span class="o">(</span><span class="n">ste</span><span class="o">);</span>
</span><span class='line'>    <span class="n">entityManager</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">().</span><span class="na">commit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@GET</span>
</span><span class='line'><span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_HTML</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/retrieve&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Template</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;/foo.ftl&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">retrieve</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>  
</span><span class='line'>    <span class="n">EntityManagerFactory</span> <span class="n">factory</span> <span class="o">=</span> <span class="n">Persistence</span><span class="o">.</span><span class="na">createEntityManagerFactory</span><span class="o">(</span><span class="s">&quot;transactions-optional&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">EntityManager</span> <span class="n">entityManager</span> <span class="o">=</span> <span class="n">factory</span><span class="o">.</span><span class="na">createEntityManager</span><span class="o">();</span>
</span><span class='line'>    <span class="n">entityManager</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">().</span><span class="na">begin</span><span class="o">();</span>
</span><span class='line'>    <span class="n">Query</span> <span class="n">q</span> <span class="o">=</span> <span class="n">entityManager</span><span class="o">.</span><span class="na">createQuery</span><span class="o">(</span><span class="s">&quot;select t from &quot;</span> <span class="o">+</span> <span class="n">SimpleTestEntity</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getSimpleName</span><span class="o">()</span> <span class="o">+</span> <span class="s">&quot; t&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">List</span><span class="o">&lt;?&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="na">getResultList</span><span class="o">();</span>
</span><span class='line'>    <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">,</span> <span class="s">&quot;Number of Entries&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;bar&quot;</span><span class="o">,</span> <span class="s">&quot;The number of database entries is: &quot;</span> <span class="o">+</span> <span class="n">list</span><span class="o">.</span><span class="na">size</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">entityManager</span><span class="o">.</span><span class="na">getTransaction</span><span class="o">().</span><span class="na">commit</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Before everything will work nicely, we also need to create a <code>persistence.xml</code> file. This file goes in your <code>src/main/resources</code> directory, in a subdirectory named <code>META-INF</code>.</p>

<figure class='code'><figcaption><span> (persistence.xml)</span> <a href='http://akshayrangnekar.github.io/downloads/code/5/persistence.xml'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
</span><span class='line'><span class="nt">&lt;persistence</span> <span class="na">xmlns=</span><span class="s">&quot;http://java.sun.com/xml/ns/persistence&quot;</span>
</span><span class='line'>             <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>             <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://java.sun.com/xml/ns/persistence</span>
</span><span class='line'><span class="s">        http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd&quot;</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;persistence-unit</span> <span class="na">name=</span><span class="s">&quot;transactions-optional&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;provider&gt;</span>org.datanucleus.api.jpa.PersistenceProviderImpl<span class="nt">&lt;/provider&gt;</span>
</span><span class='line'>        <span class="nt">&lt;class&gt;</span>com.listerly.entities.SimpleTestEntity<span class="nt">&lt;/class&gt;</span>
</span><span class='line'>        <span class="nt">&lt;exclude-unlisted-classes&gt;</span>true<span class="nt">&lt;/exclude-unlisted-classes&gt;</span>
</span><span class='line'>        <span class="nt">&lt;properties&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;javax.persistence.query.timeout&quot;</span> <span class="na">value=</span><span class="s">&quot;5000&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;datanucleus.appengine.datastoreReadConsistency&quot;</span> <span class="na">value=</span><span class="s">&quot;STRONG&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;datanucleus.appengine.datastoreEnableXGTransactions&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;datanucleus.datastoreWriteTimeout&quot;</span> <span class="na">value=</span><span class="s">&quot;5000&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;datanucleus.NontransactionalRead&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;datanucleus.NontransactionalWrite&quot;</span> <span class="na">value=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>            <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;datanucleus.ConnectionURL&quot;</span> <span class="na">value=</span><span class="s">&quot;appengine&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/properties&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/persistence-unit&gt;</span>
</span><span class='line'><span class="nt">&lt;/persistence&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now if we run the <code>/Hey/persist</code> method a couple of times, we should be adding entities to our datastore:</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/5/persist.png"></p>

<p>And to be sure, load the <code>/Hey/retrieve</code> URL every few times and make sure you get the expected number:</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/5/retrieveNumber.png"></p>

<p>Deploy to appengine using <code>mvn appengine:update</code> and make sure that everything works the same with the real datastore.</p>

<p>That should all be good. Now lets use the built in datastore viewer to make sure that our objects look right. For the real datastore you can visit <code>appengine.google.com</code> and click &ldquo;Datastore Viewer&rdquo; from the left hand navigation bar. For the devserver, you should be able to visit <code>http://localhost:8080/_ah/admin/</code> to do the same thing. Unfortunately, if you try it now you&rsquo;ll get a 404 when you try to access it. The reason? Jersey thinks it should know how to respond to that URL, and it doesn&rsquo;t. This is only a problem on the devserver, but it&rsquo;s something that we should fix anyway. Let&rsquo;s tell Jersey that it isn&rsquo;t responsible for URLs that start with <code>/_ah</code>.</p>

<p>First we create our own Filter, that subclasses the Jersey filter (unfortunately named <code>ServletContainer</code> because it can be used in multiple ways):</p>

<figure class='code'><figcaption><span> (JerseyFilter.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/5/JerseyFilter.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">jersey</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.glassfish.jersey.servlet.ServletContainer</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.FilterChain</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * Used to filter out GAE reserved URLs</span>
</span><span class='line'><span class="cm"> * See: https://developers.google.com/appengine/docs/java/config/appconfig</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">&quot;serial&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JerseyFilter</span> <span class="kd">extends</span> <span class="n">ServletContainer</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">doFilter</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">res</span><span class="o">,</span> <span class="n">FilterChain</span> <span class="n">chain</span><span class="o">)</span>
</span><span class='line'>            <span class="kd">throws</span> <span class="n">IOException</span><span class="o">,</span> <span class="n">ServletException</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">String</span> <span class="n">path</span> <span class="o">=</span> <span class="n">req</span><span class="o">.</span><span class="na">getServletPath</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">path</span><span class="o">.</span><span class="na">startsWith</span><span class="o">(</span><span class="s">&quot;/_ah/&quot;</span><span class="o">)</span> <span class="o">||</span> <span class="n">path</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="s">&quot;/form&quot;</span><span class="o">))</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">chain</span><span class="o">.</span><span class="na">doFilter</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">res</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
</span><span class='line'>            <span class="kd">super</span><span class="o">.</span><span class="na">doFilter</span><span class="o">(</span><span class="n">req</span><span class="o">,</span> <span class="n">res</span><span class="o">,</span> <span class="n">chain</span><span class="o">);</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then in our <code>web.xml</code> we use our new class as the <code>filter-class</code> instead of <code>ServletContainer</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;filter-class&gt;</span>com.listerly.config.jersey.JerseyFilter<span class="nt">&lt;/filter-class&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now load up the two datastore viewers and everything should look as you wanted.</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/5/datastoreViewerLocal.png"></p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/5/datastoreViewerAppengine.png"></p>

<h2>Making  JPA easy</h2>

<p>Part 5B of this guide was going to be around making JPA easier to use &ndash; showing how to create abstract DAOs and concrete implementations for your persistent objects; showing how to make the EntityManager injectable; showing how you could use a filter to start and commit the transaction. However after trying a couple of different approaches out, it became clear that everyone is going to want something slightly different here. That my approach is pretty much guaranteed not to be your approach. So instead, I&rsquo;ve decided to stop the tutorial here.</p>

<h2>Final words</h2>

<p>The final source code for this tutorial is available from github here <a href="https://github.com/akshayrangnekar/gaemavenjerseyguice">https://github.com/akshayrangnekar/gaemavenjerseyguice</a> &ndash; please drop me a line on twitter (@akshayr) if you run into any problems, or find something that I&rsquo;ve done wrong.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Up and Running on AppEngine With Maven, Jersey and Guice - Part 4]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/"/>
    <updated>2014-03-18T15:42:52+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4</id>
    <content type="html"><![CDATA[<p>This is part four of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>

<p><a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> got us working with Jersey and Guice. Part 4 will make Jersey more useful by adding JSON and freemarker templates.</p>

<!-- more -->


<p>While our Jersey POJOs are nicely returning String messages at the moment, that&rsquo;s really not particularly useful in the real world. Most apps that I build are going to return one of three things &ndash; static files (which are already easily handled), HTML, or JSON. For HTML, I&rsquo;ve chosen to use Freemarker templates, which Jersey supports JSON as long as you give it serialization libraries.</p>

<h2>Getting JSON working</h2>

<p>Getting JSON working is actually fairly simple. First, lets make sure that we&rsquo;re importing the Jackson library which works has a JAXRS provider that Jersey uses:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>jackson-annotations<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.2.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>jackson-core<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.2.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.core<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>jackson-databind<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.2.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.fasterxml.jackson.jaxrs<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>jackson-jaxrs-json-provider<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.2.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependency&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, we simply create a new method in our Resource:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@GET</span>
</span><span class='line'><span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">APPLICATION_JSON</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/json&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Object</span> <span class="nf">json</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">SimpleReturnObject</span> <span class="n">ret</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleReturnObject</span><span class="o">();</span>
</span><span class='line'>  
</span><span class='line'>  <span class="n">ret</span><span class="o">.</span><span class="na">setFruit</span><span class="o">(</span><span class="s">&quot;Apple&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">ret</span><span class="o">.</span><span class="na">setHome</span><span class="o">(</span><span class="s">&quot;Hong Kong&quot;</span><span class="o">);</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">return</span> <span class="n">ret</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>@Produces</code> annotation is enough to tell Jersey to use Jackson to serialize the data. We can then return any Object and the JSON representation will be sent down. Here&rsquo;s my very simple return object:</p>

<figure class='code'><figcaption><span> (SimpleReturnObject.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/4/SimpleReturnObject.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">api</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleReturnObject</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">fruit</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">home</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getFruit</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">fruit</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setFruit</span><span class="o">(</span><span class="n">String</span> <span class="n">fruit</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">fruit</span> <span class="o">=</span> <span class="n">fruit</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">getHome</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">home</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setHome</span><span class="o">(</span><span class="n">String</span> <span class="n">home</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">this</span><span class="o">.</span><span class="na">home</span> <span class="o">=</span> <span class="n">home</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we access the <code>/Hey/json</code> path, we get exactly what we would want. This works for as simple or complex as you want. If Jackson can handle them (and it can handle most things), you can return them.</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/4/heyJson.png"></p>

<h2>Getting Freemarker working</h2>

<p>Phew. After the miserale nightmare involved in getting Jersey working, it&rsquo;s nice that JSON was so easy. Since we&rsquo;ve already included some of the Freemarker libraries in the POM in Part 3, hopefully Freemarker will be too.</p>

<p>The first thing I noticed when trying to get Freemarker working was a compile error when trying to define a <code>Map&lt;String, Object&gt;</code>. Clearly I had forgotten to do some housekeeping in my POM so we were using an ancient version of Java. Add the compiler configuration to your POM to compile to Java 1.7 (Java 7). AppEngine is happy with classes compiled against that target version.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>org.apache.maven.plugins<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>maven-compiler-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>3.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;configuration&gt;</span>
</span><span class='line'>    <span class="nt">&lt;source&gt;</span>1.7<span class="nt">&lt;/source&gt;</span>
</span><span class='line'>    <span class="nt">&lt;target&gt;</span>1.7<span class="nt">&lt;/target&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/configuration&gt;</span>
</span><span class='line'><span class="nt">&lt;/plugin&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, as I mentioned in Part 2, I like to keep my templates in their own <code>src</code> directory. You don&rsquo;t have to do this &ndash; you can put them in <code>src/main/resources</code> if you like, but I don&rsquo;t like to mix my properties files and persistence.xml (which will come in Part 5) with templates which are very different types of files. So I simply tell Maven that I have a second resource directory, in <code>src/main/templates</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;resources&gt;</span>
</span><span class='line'>  <span class="nt">&lt;resource&gt;</span>
</span><span class='line'>    <span class="nt">&lt;directory&gt;</span>/Users/akshay/Dev/Listerly/listerly/src/main/resources<span class="nt">&lt;/directory&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/resource&gt;</span>
</span><span class='line'>  <span class="nt">&lt;resource&gt;</span>
</span><span class='line'>    <span class="nt">&lt;directory&gt;</span>/Users/akshay/Dev/Listerly/listerly/src/main/templates<span class="nt">&lt;/directory&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/resource&gt;</span>
</span><span class='line'><span class="nt">&lt;/resources&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, we need to create a class that will load our templates from the ServletContext or Classpath. Here&rsquo;s a simple implementation:</p>

<figure class='code'><figcaption><span> (TemplateObjectFactory.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/4/TemplateObjectFactory.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">jersey</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Inject</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.common.collect.Lists</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">freemarker.cache.ClassTemplateLoader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">freemarker.cache.MultiTemplateLoader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">freemarker.cache.TemplateLoader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">freemarker.cache.WebappTemplateLoader</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">freemarker.template.Configuration</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TemplateObjectFactory</span> <span class="kd">extends</span> <span class="n">Configuration</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Inject</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">ServletContext</span> <span class="n">servletContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">TemplateObjectFactory</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="c1">// Create different loaders.</span>
</span><span class='line'>        <span class="kd">final</span> <span class="n">List</span><span class="o">&lt;</span><span class="n">TemplateLoader</span><span class="o">&gt;</span> <span class="n">loaders</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">newArrayList</span><span class="o">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="o">(</span><span class="n">servletContext</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">loaders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">WebappTemplateLoader</span><span class="o">(</span><span class="n">servletContext</span><span class="o">));</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>        <span class="n">loaders</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">ClassTemplateLoader</span><span class="o">(</span><span class="k">this</span><span class="o">.</span><span class="na">getClass</span><span class="o">(),</span> <span class="s">&quot;/&quot;</span><span class="o">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">setTemplateLoader</span><span class="o">(</span><span class="k">new</span> <span class="n">MultiTemplateLoader</span><span class="o">(</span><span class="n">loaders</span><span class="o">.</span><span class="na">toArray</span><span class="o">(</span><span class="k">new</span> <span class="n">TemplateLoader</span><span class="o">[</span><span class="n">loaders</span><span class="o">.</span><span class="na">size</span><span class="o">()])));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, we need to configure Jersey to use this new class. In our JerseyConfiguration class constructor we set a parameter called <code>jersey.config.server.mvc.factory.freemarker</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@Inject</span>
</span><span class='line'><span class="kd">public</span> <span class="nf">JerseyConfiguration</span><span class="o">(</span><span class="n">ServiceLocator</span> <span class="n">serviceLocator</span><span class="o">,</span> <span class="n">ServletContext</span> <span class="n">servletContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;Creating JerseyConfiguration&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">packages</span><span class="o">(</span><span class="s">&quot;com.listerly.resources&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">property</span><span class="o">(</span><span class="s">&quot;jersey.config.server.mvc.factory.freemarker&quot;</span><span class="o">,</span> <span class="n">TemplateObjectFactory</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">register</span><span class="o">(</span><span class="n">FreemarkerMvcFeature</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">GuiceBridge</span><span class="o">.</span><span class="na">getGuiceBridge</span><span class="o">().</span><span class="na">initializeGuiceBridge</span><span class="o">(</span><span class="n">serviceLocator</span><span class="o">);</span>
</span><span class='line'>    <span class="n">GuiceIntoHK2Bridge</span> <span class="n">guiceBridge</span> <span class="o">=</span> <span class="n">serviceLocator</span><span class="o">.</span><span class="na">getService</span><span class="o">(</span><span class="n">GuiceIntoHK2Bridge</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>    <span class="n">guiceBridge</span><span class="o">.</span><span class="na">bridgeGuiceInjector</span><span class="o">((</span><span class="n">Injector</span><span class="o">)</span> <span class="n">servletContext</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="n">Injector</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()));</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We should be all set. Let&rsquo;s create another method in our Resource. This one returns HTML, and notice how we specify the template using the <code>@Template</code> annotation. Notice also that the return type from this method is a Map of Strings to Objects. These are the objects that will then be available in our Freemarker template. For simplicity, I&rsquo;ve just added two Strings to my Map. The first is called <code>foo</code> and the second <code>bar</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="nd">@GET</span>
</span><span class='line'><span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_HTML</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/template&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Template</span><span class="o">(</span><span class="n">name</span><span class="o">=</span><span class="s">&quot;/foo.ftl&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">template</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;&gt;();</span>
</span><span class='line'>  <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;foo&quot;</span><span class="o">,</span> <span class="s">&quot;Akshay&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;bar&quot;</span><span class="o">,</span> <span class="s">&quot;Yo Yo Whatsup?&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">map</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we create the <code>foo.ftl</code> template. Notice how easy it is to use the <code>foo</code> and <code>bar</code> parameters we <em>&ldquo;passed in&rdquo;</em> from our Resource.</p>

<figure class='code'><figcaption><span>foo.ftl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;&gt;</span>
</span><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>      <span class="nt">&lt;title&gt;</span>Hello ${foo}<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>      You wanted to say ${bar}
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Launch the devserver and load this url (<code>/Hey/template</code>) in your browser, and you should see exactly what you would want.</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/4/heyTemplate.png"></p>

<p>Obviously there&rsquo;s a ton more you can do with Freemarker. The parameters in the map can be Collections objects and you can use Freemarkers logical constructs to loop or check for truth/ existence among other things. But those you can pick up quite easily from the <a href="http://freemarker.org/docs/index.html">Freemarker Manual</a>.</p>

<p>That&rsquo;s it for Part 4. <a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/">Part 5</a> will do the final piece (of this tutorial) of getting persistence configured using JPA.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Up and Running on AppEngine With Maven, Jersey and Guice - Part 3]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/"/>
    <updated>2014-03-18T12:23:37+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3</id>
    <content type="html"><![CDATA[<p>This is part three of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>

<p><a href="http://akshayrangnekar.github.io/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> got us to the point of having a working web application running locally and deployed on AppEngine. Part 3 will get Guice &amp; Jersey up and running.</p>

<!-- more -->


<h2>Guice up</h2>

<p>After the relative nightmare of some of the other things we&rsquo;ve done in earlier parts, Guice is remarkably easy to get working. Some of it is due to good documentation, but mostly it&rsquo;s just a great framework that&rsquo;s very easy to use.</p>

<p>The first step is to include the appropriate dependencies in our <code>pom.xml</code>. Here&rsquo;s the modified pom.xml that includes Guice and the Guice-Servlet packages. Here&rsquo;s the reworked file. See lines 24-33 for changes:</p>

<figure class='code'><figcaption><span> (pom.xml)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/pom.xml'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.listerly<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>listerly-server<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Listerly Main Server<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;url&gt;</span>http://www.listerly.com<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>com.google.appengine<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>appengine-api-1.0-sdk<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>1.9.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>servlet-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.5<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.google.inject.extensions<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>guice-servlet<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>3.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>com.google.inject<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>guice<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>3.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>  <span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.eclipse.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>jetty-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>9.1.3.v20140225<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>com.google.appengine<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>appengine-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>1.8.7<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/build&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next, we setup our Guice modules. First, we extend <code>ServletModule</code> to help serve our HelloWorldServlet:</p>

<figure class='code'><figcaption><span> (ListerlyServletModule.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/ListerlyServletModule.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">guice</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.inject.servlet.ServletModule</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.listerly.HelloWorldServlet</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ListerlyServletModule</span> <span class="kd">extends</span> <span class="n">ServletModule</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">configureServlets</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">serve</span><span class="o">(</span><span class="s">&quot;/hi&quot;</span><span class="o">).</span><span class="na">with</span><span class="o">(</span><span class="n">HelloWorldServlet</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we extend <code>GuiceServletContextListener</code> to tell Guice about our new <code>ServletModule</code>:</p>

<figure class='code'><figcaption><span> (ListerlyGuiceServletContextListener.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/ListerlyGuiceServletContextListener.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">guice</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.inject.Guice</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.inject.Injector</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.inject.servlet.GuiceServletContextListener</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ListerlyGuiceServletContextListener</span> <span class="kd">extends</span>
</span><span class='line'>      <span class="n">GuiceServletContextListener</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="n">Injector</span> <span class="nf">getInjector</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">Guice</span><span class="o">.</span><span class="na">createInjector</span><span class="o">(</span><span class="k">new</span> <span class="n">ListerlyServletModule</span><span class="o">());</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, we have to load Guice and our ServletContentListener in the web.xml. Notice we now take out our Servlet definition.</p>

<figure class='code'><figcaption><span> (web.xml)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/web.xml'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;web-app</span> <span class="na">version=</span><span class="s">&quot;2.5&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee&quot;</span>
</span><span class='line'><span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'><span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;filter&gt;</span>
</span><span class='line'>   <span class="nt">&lt;filter-name&gt;</span>guiceFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;filter-class&gt;</span>com.google.inject.servlet.GuiceFilter<span class="nt">&lt;/filter-class&gt;</span>
</span><span class='line'> <span class="nt">&lt;/filter&gt;</span>
</span><span class='line'>
</span><span class='line'> <span class="nt">&lt;filter-mapping&gt;</span>
</span><span class='line'>   <span class="nt">&lt;filter-name&gt;</span>guiceFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>   <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'> <span class="nt">&lt;/filter-mapping&gt;</span>
</span><span class='line'>
</span><span class='line'> <span class="nt">&lt;listener&gt;</span>
</span><span class='line'>   <span class="nt">&lt;listener-class&gt;</span>com.listerly.config.guice.ListerlyGuiceServletContextListener<span class="nt">&lt;/listener-class&gt;</span>
</span><span class='line'> <span class="nt">&lt;/listener&gt;</span>
</span><span class='line'><span class="nt">&lt;/web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Make a quick change to HelloWorldServlet to prove that you&rsquo;re actually hitting the new Servlet (I&rsquo;ve now got <code>Hello, handrolled, guiced AppEngine!</code> as my message). Then run the devserver and hit the server. You should be looking good:</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/3/guiced.png"></p>

<p>Great, Guice is clearly serving our Servlet, but let&rsquo;s make absolutely sure by injecting a class. I&rsquo;ve created a class called <code>TestClass</code>. I&rsquo;m marking it as a <code>@Singleton</code> to ensure that Guice only creates it once:</p>

<figure class='code'><figcaption><span> (TestClass.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/TestClass.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Inject</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Singleton</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Singleton</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">TestClass</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Inject</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Date</span> <span class="n">date</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">TestClass</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="n">Date</span> <span class="nf">getDate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">date</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then in my HelloWorldServlet I inject the <code>TestClass</code> object, and print out the date it is loaded with:</p>

<figure class='code'><figcaption><span> (HelloWorldServlet.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/HelloWorldServlet.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Inject</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Singleton</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">&quot;serial&quot;</span><span class="o">)</span>
</span><span class='line'><span class="nd">@Singleton</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorldServlet</span> <span class="kd">extends</span> <span class="n">HttpServlet</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Inject</span>
</span><span class='line'>  <span class="n">TestClass</span> <span class="n">theClass</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">ServletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;text/plain&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello, handrolled, guiced AppEngine!&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">SimpleDateFormat</span> <span class="n">sdf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;HH:mm:ss.SSS&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Date is: &quot;</span> <span class="o">+</span> <span class="n">sdf</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">theClass</span><span class="o">.</span><span class="na">getDate</span><span class="o">()));</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Reload the page a few times. Things are behaving as you would expect: you get the time at which you first loaded the page. Hopefully Jersey will be that easy!</p>

<h2>Jersey? Sure.</h2>

<p>There are a bunch of really <a href="http://blog.palominolabs.com/2011/08/15/a-simple-java-web-stack-with-guice-jetty-jersey-and-jackson/">good</a> <a href="https://sites.google.com/a/athaydes.com/renato-athaydes//posts/jersey_guice_rest_api">articles</a> on how to use Jersey with Guice. Unfortunately they&rsquo;re all based on Jersey 1.X and Jersey 2.0 is now out. Jersey 2.0 seems to be a different story judging by <a href="https://java.net/jira/browse/HK2-39">this</a>, <a href="https://java.net/jira/browse/HK2-121">this</a>, <a href="https://java.net/jira/browse/HK2-39">this</a> and <a href="https://hk2.java.net/guice-bridge/index.html">this</a>.</p>

<p>It seems like Jersey&rsquo;s inclusion of the HK2 dependency injection framework means lots of problems with getting Guice up and running. There are three options to proceed: (1) Revert back to better understood Jersey 1.X library, (2) Switch from Guice to HK2, or (3) Try to get something going with the help of a couple of <a href="https://github.com/aluedeke/jersey2-guice-example">working</a> <a href="https://github.com/piersy/jersey2-guice-example-with-test">samples</a>.</p>

<p>I decided to push through and try #3. I&rsquo;m a big fan of Guice and don&rsquo;t think HK2 is as mature so option 2 was out. Option 1 is tempting, but seemed like the fallback option since I figure at some stage Jersey 1.X is going to be too outdated to continue with so better to eat the pain now rather than after I have 100s of services.</p>

<p>The following instructions get things working. I&rsquo;m not sure they&rsquo;re the perfect (or best) way to do things, but after a day of struggling I&rsquo;m going to settle for what I have. Things do at least seem to be working.</p>

<p>First, lets start with the dependencies. Here&rsquo;s my final working <code>pom.xml</code>:</p>

<figure class='code'><figcaption><span> (pom.xml)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/b/pom.xml'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.listerly<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>listerly-server<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Listerly Main Server<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;url&gt;</span>http://www.listerly.com<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;properties&gt;</span>
</span><span class='line'>      <span class="nt">&lt;appengine.sdk.version&gt;</span>1.9.0<span class="nt">&lt;/appengine.sdk.version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;jersey.version&gt;</span>2.5.1<span class="nt">&lt;/jersey.version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;guice.version&gt;</span>3.0<span class="nt">&lt;/guice.version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet.api.version&gt;</span>2.5<span class="nt">&lt;/servlet.api.version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/properties&gt;</span>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>com.google.appengine<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>appengine-api-1.0-sdk<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${appengine.sdk.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>servlet-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${servlet.api.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>com.google.inject.extensions<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>guice-servlet<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${guice.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>com.google.inject<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>guice<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${guice.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>org.glassfish.jersey.core<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>jersey-server<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${jersey.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>org.glassfish.jersey.containers<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>jersey-container-servlet<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${jersey.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>org.glassfish.jersey.ext<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>jersey-mvc-jsp<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>${jersey.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.glassfish.jersey.ext<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>jersey-mvc-freemarker<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>${jersey.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;scope&gt;</span>compile<span class="nt">&lt;/scope&gt;</span>
</span><span class='line'>        <span class="nt">&lt;exclusions&gt;</span>
</span><span class='line'>          <span class="nt">&lt;exclusion&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>org.freemarker<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>freemarker<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/exclusion&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/exclusions&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>org.glassfish.hk2<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>guice-bridge<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>2.2.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>org.freemarker<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>freemarker-gae<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>2.3.20<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;build&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>          <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>              <span class="nt">&lt;groupId&gt;</span>org.eclipse.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>              <span class="nt">&lt;artifactId&gt;</span>jetty-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>              <span class="nt">&lt;version&gt;</span>9.1.3.v20140225<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>          <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>              <span class="nt">&lt;groupId&gt;</span>com.google.appengine<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>              <span class="nt">&lt;artifactId&gt;</span>appengine-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>              <span class="nt">&lt;version&gt;</span>${appengine.sdk.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>          <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/build&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Notice the new dependencies for Jersey, Freemarker (my template language of choice with Jersey) and the HK2-Guice bridge.</p>

<p>Next we have to change our <code>web.xml</code> to use Jersey:</p>

<figure class='code'><figcaption><span> (web.xml)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/b/web.xml'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;web-app</span> <span class="na">version=</span><span class="s">&quot;2.5&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee&quot;</span>
</span><span class='line'><span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'><span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;listener&gt;</span>
</span><span class='line'>    <span class="nt">&lt;listener-class&gt;</span>com.listerly.config.guice.ListerlyGuiceServletContextListener<span class="nt">&lt;/listener-class&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/listener&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;filter&gt;</span>
</span><span class='line'>     <span class="nt">&lt;filter-name&gt;</span>guiceFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>     <span class="nt">&lt;filter-class&gt;</span>com.google.inject.servlet.GuiceFilter<span class="nt">&lt;/filter-class&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/filter&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;filter-mapping&gt;</span>
</span><span class='line'>    <span class="nt">&lt;filter-name&gt;</span>guiceFilter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/filter-mapping&gt;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nt">&lt;filter&gt;</span>
</span><span class='line'>      <span class="nt">&lt;filter-name&gt;</span>jersey-filter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;filter-class&gt;</span>org.glassfish.jersey.servlet.ServletContainer<span class="nt">&lt;/filter-class&gt;</span>
</span><span class='line'>      <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-name&gt;</span>javax.ws.rs.Application<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-value&gt;</span>com.listerly.config.jersey.JerseyConfiguration<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>      <span class="nt">&lt;init-param&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-name&gt;</span>jersey.config.server.provider.classnames<span class="nt">&lt;/param-name&gt;</span>
</span><span class='line'>          <span class="nt">&lt;param-value&gt;</span>org.glassfish.jersey.server.mvc.freemarker.FreemarkerMvcFeature<span class="nt">&lt;/param-value&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/init-param&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/filter&gt;</span>
</span><span class='line'>  <span class="nt">&lt;filter-mapping&gt;</span>
</span><span class='line'>      <span class="nt">&lt;filter-name&gt;</span>jersey-filter<span class="nt">&lt;/filter-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url-pattern&gt;</span>/*<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/filter-mapping&gt;</span> 
</span><span class='line'><span class="nt">&lt;/web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>This now has a filter defined for Jersey (lines 19-30), which is configured with (a) our Application (more on that in a second) and (b) the Freemarker mumbo-jumbo. The filter, like the Guice filter, is applied to all URLs.</p>

<p>The next file to go through is the &ldquo;Application&rdquo; for Jersey, which defines how Jersey is set up:</p>

<figure class='code'><figcaption><span> (JerseyConfiguration.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/b/JerseyConfiguration.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">config</span><span class="o">.</span><span class="na">jersey</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">static</span> <span class="n">java</span><span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">logging</span><span class="o">.</span><span class="na">Logger</span><span class="o">.</span><span class="na">getLogger</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.logging.Logger</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Inject</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.ServletContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.glassfish.hk2.api.ServiceLocator</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.glassfish.jersey.server.ResourceConfig</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.glassfish.jersey.server.mvc.freemarker.FreemarkerMvcFeature</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.jvnet.hk2.guice.bridge.api.GuiceBridge</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">org.jvnet.hk2.guice.bridge.api.GuiceIntoHK2Bridge</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.inject.Injector</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">JerseyConfiguration</span> <span class="kd">extends</span> <span class="n">ResourceConfig</span> <span class="o">{</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kd">final</span> <span class="n">Logger</span> <span class="n">log</span> <span class="o">=</span> <span class="n">getLogger</span><span class="o">(</span><span class="n">getClass</span><span class="o">().</span><span class="na">getName</span><span class="o">());</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Inject</span>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">JerseyConfiguration</span><span class="o">(</span><span class="n">ServiceLocator</span> <span class="n">serviceLocator</span><span class="o">,</span> <span class="n">ServletContext</span> <span class="n">servletContext</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">info</span><span class="o">(</span><span class="s">&quot;Creating JerseyConfiguration&quot;</span><span class="o">);</span>
</span><span class='line'>        <span class="n">packages</span><span class="o">(</span><span class="s">&quot;com.listerly.resources&quot;</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">register</span><span class="o">(</span><span class="n">FreemarkerMvcFeature</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">GuiceBridge</span><span class="o">.</span><span class="na">getGuiceBridge</span><span class="o">().</span><span class="na">initializeGuiceBridge</span><span class="o">(</span><span class="n">serviceLocator</span><span class="o">);</span>
</span><span class='line'>        <span class="n">GuiceIntoHK2Bridge</span> <span class="n">guiceBridge</span> <span class="o">=</span> <span class="n">serviceLocator</span><span class="o">.</span><span class="na">getService</span><span class="o">(</span><span class="n">GuiceIntoHK2Bridge</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'>        <span class="n">guiceBridge</span><span class="o">.</span><span class="na">bridgeGuiceInjector</span><span class="o">((</span><span class="n">Injector</span><span class="o">)</span> <span class="n">servletContext</span><span class="o">.</span><span class="na">getAttribute</span><span class="o">(</span><span class="n">Injector</span><span class="o">.</span><span class="na">class</span><span class="o">.</span><span class="na">getName</span><span class="o">()));</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Three important parts to note here: (1) Line 24 tells Jersey which package will contain our Resources &ndash; the POJOs that will respond to requests. (2) Line 26 tells Jersey we will be using Freemarker. (3) Lines 28-30 set up the HK2-Guice bridge.</p>

<p>Next, lets create a simple POJO to respond to requests:</p>

<figure class='code'><figcaption><span> (HeyResource.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/b/HeyResource.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">resources</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.GET</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Path</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Produces</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.core.MediaType</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/Hey&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HeyResource</span> <span class="o">{</span>
</span><span class='line'>  <span class="nd">@GET</span>
</span><span class='line'>  <span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_PLAIN</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="s">&quot;Hey there&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lets fire up the devserver and load <code>http://localhost:8080/Hey</code></p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/3/hey.png"></p>

<p>That all looks good. But let&rsquo;s make absolutely sure injection is working correctly.</p>

<p>Lets add a second injectable class to begin. Notice that this one is RequestScoped, as opposed to our previous one which was a Singleton:</p>

<figure class='code'><figcaption><span> (SecondTest.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/c/SecondTest.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Inject</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.google.inject.servlet.RequestScoped</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@RequestScoped</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SecondTest</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Inject</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">Date</span> <span class="n">date</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">SecondTest</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="n">Date</span> <span class="nf">getDate</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">date</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can now add a second method and inject a couple of objects into our class:</p>

<figure class='code'><figcaption><span> (HeyResource.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/3/c/HeyResource.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">.</span><span class="na">resources</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.GET</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Path</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.Produces</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.QueryParam</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.ws.rs.core.MediaType</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.inject.Inject</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.listerly.SecondTest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.listerly.TestClass</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/Hey&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HeyResource</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@Inject</span> <span class="n">TestClass</span> <span class="n">first</span><span class="o">;</span>
</span><span class='line'>  <span class="nd">@Inject</span> <span class="n">SecondTest</span> <span class="n">second</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@GET</span>
</span><span class='line'>  <span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_PLAIN</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">get</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="o">(</span><span class="s">&quot;Hey there&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nd">@GET</span>
</span><span class='line'>  <span class="nd">@Produces</span><span class="o">(</span><span class="n">MediaType</span><span class="o">.</span><span class="na">TEXT_PLAIN</span><span class="o">)</span>
</span><span class='line'>  <span class="nd">@Path</span><span class="o">(</span><span class="s">&quot;/foo&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">foo</span><span class="o">(</span><span class="nd">@QueryParam</span><span class="o">(</span><span class="s">&quot;test&quot;</span><span class="o">)</span> <span class="n">String</span> <span class="n">test</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">SimpleDateFormat</span> <span class="n">sdf</span> <span class="o">=</span> <span class="k">new</span> <span class="n">SimpleDateFormat</span><span class="o">(</span><span class="s">&quot;HH:mm:ss.SSS&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">StringBuilder</span> <span class="n">builder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;Hi there. You entered &quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">test</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;The first date is:&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">sdf</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">first</span><span class="o">.</span><span class="na">getDate</span><span class="o">())).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">builder</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;The second date is:&quot;</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="n">sdf</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">second</span><span class="o">.</span><span class="na">getDate</span><span class="o">())).</span><span class="na">append</span><span class="o">(</span><span class="s">&quot;\n&quot;</span><span class="o">);</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">return</span> <span class="n">builder</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Run the server, and everything looks good:</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/3/heyFoo.png"></p>

<p>Push everything to AppServer and make sure everything is fine. We&rsquo;ll be using more of Jersey and Guice in the next couple of steps as we get started on templates and persistence. <a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> will build on today, getting Jersey set up with JSON and Freemarker.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Up and Running on AppEngine With Maven, Jersey and Guice - Part 2]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/"/>
    <updated>2014-03-14T10:52:12+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2</id>
    <content type="html"><![CDATA[<p>This is part two of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>

<p>Part 2 gets us to the point of having a working web application running locally and deployed on AppEngine. If you haven&rsquo;t got maven or your working directory set up yet, start on <a href="http://akshayrangnekar.github.io/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a>.</p>

<!-- more -->


<h2>Don&rsquo;t follow the Google docs</h2>

<p>This is one not to follow along, but helps explain why this tutorial is needed. To begin, I decided to try following the <a href="">AppEngine docs on user maven</a>.</p>

<p>Let&rsquo;s try their command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:listerly$ mvn archetype:generate \
</span><span class='line'>&gt;  -DarchetypeGroupId=com.google.appengine.archetypes \
</span><span class='line'>&gt;  -DarchetypeArtifactId=appengine-skeleton-archetype \
</span><span class='line'>&gt;  -DarchetypeVersion=1.9.0 \
</span><span class='line'>&gt;  -DgroupId=com.listerly.server \
</span><span class='line'>&gt;  -DartifactId=server \
</span><span class='line'>&gt;  -Dversion=0.1 \
</span><span class='line'>&gt;  -Dpackage=com.listerly</span></code></pre></td></tr></table></div></figure>


<p>I saw lots of nice maven messages about downloading everything under the sun, and then a hostile failure message.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[INFO] Archetype repository missing. Using the one from [com.google.appengine.archetypes:appengine-skeleton-archetype:1.8.7] found in catalog remote
</span><span class='line'>Downloading: http://repo.maven.apache.org/maven2/com/google/appengine/archetypes/appengine-skeleton-archetype/1.9.0/appengine-skeleton-archetype-1.9.0.jar
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] BUILD FAILURE
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] Total time: 13.591 s
</span><span class='line'>[INFO] Finished at: 2014-03-14T11:39:14+00:00
</span><span class='line'>[INFO] Final Memory: 13M/246M
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[ERROR] Failed to execute goal org.apache.maven.plugins:maven-archetype-plugin:2.2:generate (default-cli) on project standalone-pom: The desired archetype does not exist (com.google.appengine.archetypes:appengine-skeleton-archetype:1.9.0) -&gt; [Help 1]</span></code></pre></td></tr></table></div></figure>


<p>Thanks very much for that. That doc was updated (when I loaded it) on March 7 2014, so it&rsquo;s 7 days old. And doesn&rsquo;t work. Too new to be out of date, too old to have teething problems.</p>

<p>A <a href="http://search.maven.org/#search%7Cga%7C1%7Cappengine">quick search of Maven Central</a> reveals the likely issue &ndash; the latest version of this archetype that&rsquo;s been published is 1.8.7. Looks like someone&rsquo;s been forgetting to push the archetypes to the Maven Central repo for versions 1.8.8, 1.8.9 and 1.9.0. Two options to proceed: either start using the previous archetype and update. Or start from a cleaner archetype and add in the AppEngine functionality. I&rsquo;m going to proceed with both options: you can pick and choose the one you prefer.</p>

<h2>Starting from the AppEngine skeleton archetype</h2>

<p>Lets first create a branch to work from:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:listerly$ git checkout -b feature_gaeSkeletonArchetype
</span><span class='line'>Switched to a new branch 'feature_gaeSkeletonArchetype'
</span><span class='line'>mbp:listerly$ cat README.md 
</span><span class='line'>listerly
</span><span class='line'>========
</span><span class='line'>mbp:listerly$ echo "Branch for appengine skeleton archetype" &gt; branch.txt
</span><span class='line'>mbp:listerly$ git add .
</span><span class='line'>mbp:listerly$ git commit -m "Branch message added."
</span><span class='line'>[feature_gaeSkeletonArchetype 1ca1c52] Branch message added.
</span><span class='line'> 1 file changed, 1 insertion(+)
</span><span class='line'> create mode 100644 branch.txt
</span><span class='line'>mbp:listerly$ git push -u origin feature_gaeSkeletonArchetype
</span><span class='line'>Counting objects: 4, done.
</span><span class='line'>Delta compression using up to 8 threads.
</span><span class='line'>Compressing objects: 100% (2/2), done.
</span><span class='line'>Writing objects: 100% (3/3), 325 bytes | 0 bytes/s, done.
</span><span class='line'>Total 3 (delta 0), reused 0 (delta 0)
</span><span class='line'>To https://github.com/akshayrangnekar/listerly.git
</span><span class='line'> * [new branch]      feature_gaeSkeletonArchetype -&gt; feature_gaeSkeletonArchetype
</span><span class='line'>Branch feature_gaeSkeletonArchetype set up to track remote branch feature_gaeSkeletonArchetype from origin.</span></code></pre></td></tr></table></div></figure>


<p>Now we try re-running the maven archetype:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:listerly$ mvn archetype:generate  -DarchetypeGroupId=com.google.appengine.archetypes  -DarchetypeArtifactId=appengine-skeleton-archetype  -DarchetypeVersion=1.8.7  -DgroupId=com.listerly.server  -DartifactId=server  -Dversion=0.1  -Dpackage=com.listerly
</span><span class='line'>[INFO] Scanning for projects...
</span><span class='line'>[INFO] 
</span><span class='line'>[INFO] Using the builder org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder with a thread count of 1
</span><span class='line'>[LINES REMOVED]
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] BUILD SUCCESS
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] Total time: 6.159 s
</span><span class='line'>[INFO] Finished at: 2014-03-14T13:14:45+00:00
</span><span class='line'>[INFO] Final Memory: 14M/246M
</span><span class='line'>[INFO] ------------------------------------------------------------------------</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s a lot better. Lets see what we have created for us. Using a handy little command I found <a href="https://coderwall.com/p/owb6eg">here</a>, modified to get rid of gitcrud to make this viewable</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:listerly$ find . -print | grep -v '.git' | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
</span><span class='line'>.
</span><span class='line'>|____branch.txt
</span><span class='line'>|____README.md
</span><span class='line'>|____server
</span><span class='line'>| |____pom.xml
</span><span class='line'>| |____README.md
</span><span class='line'>| |____server-ear
</span><span class='line'>| | |____pom.xml
</span><span class='line'>| | |____src
</span><span class='line'>| | | |____main
</span><span class='line'>| | | | |____application
</span><span class='line'>| | | | | |____META-INF
</span><span class='line'>| | | | | | |____appengine-application.xml
</span><span class='line'>| | | | | | |____application.xml
</span><span class='line'>| | | | | | |____MANIFEST.MF
</span><span class='line'>| |____server-war
</span><span class='line'>| | |____pom.xml
</span><span class='line'>| | |____src
</span><span class='line'>| | | |____main
</span><span class='line'>| | | | |____java
</span><span class='line'>| | | | |____webapp
</span><span class='line'>| | | | | |____WEB-INF
</span><span class='line'>| | | | | | |____appengine-web.xml
</span><span class='line'>| | | | | | |____logging.properties
</span><span class='line'>| | | | | | |____web.xml
</span><span class='line'>| | | |____test
</span><span class='line'>| | | | |____java</span></code></pre></td></tr></table></div></figure>


<p>Ok &ndash; let&rsquo;s try running this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:listerly$ cd server
</span><span class='line'>mbp:server$ mvn appengine:devserver
</span><span class='line'>[INFO] Scanning for projects...
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] Reactor Build Order:
</span><span class='line'>[INFO] 
</span><span class='line'>[INFO] server
</span><span class='line'>[INFO] server-war
</span><span class='line'>[INFO] server-ear
</span><span class='line'>[REMOVED LINES]
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] Reactor Summary:
</span><span class='line'>[INFO] 
</span><span class='line'>[INFO] server ............................................ FAILURE [ 16.241 s]
</span><span class='line'>[INFO] server-war ........................................ SKIPPED
</span><span class='line'>[INFO] server-ear ........................................ SKIPPED
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] BUILD FAILURE
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] Total time: 17.469 s
</span><span class='line'>[INFO] Finished at: 2014-03-14T13:26:54+00:00
</span><span class='line'>[INFO] Final Memory: 9M/246M
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[ERROR] Failed to execute goal com.google.appengine:appengine-maven-plugin:1.8.7:devserver (default-cli) on project server: The application directory does not exist : /Users/akshay/Dev/Listerly/listerly/server/target/server-0.1 -&gt; [Help 1]</span></code></pre></td></tr></table></div></figure>


<p>Not nice. Ok, let&rsquo;s try again with some help from the appengine docs (though not following them to the letter since they are wrong about the directory to run from):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:server akshay$ mvn clean install
</span><span class='line'>[REMOVED LOTS OF LINES]
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] BUILD SUCCESS
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>[INFO] Total time: 17.990 s
</span><span class='line'>[INFO] Finished at: 2014-03-14T13:36:48+00:00
</span><span class='line'>[INFO] Final Memory: 11M/246M
</span><span class='line'>[INFO] ------------------------------------------------------------------------
</span><span class='line'>mbp:server akshay$ mvn -pl server-ear appengine:devserver
</span><span class='line'>[INFO] Scanning for projects...
</span><span class='line'>[REMOVED LOTS OF LINES]
</span><span class='line'>[INFO] INFO: The admin console is running at http://localhost:8080/_ah/admin
</span><span class='line'>[INFO] Mar 14, 2014 1:40:02 PM com.google.appengine.tools.development.DevAppServerImpl doStart
</span><span class='line'>[INFO] INFO: Dev App Server is now running</span></code></pre></td></tr></table></div></figure>


<p>That looks good.</p>

<p>If we load up the admin console at <code>http://localhost:8080/_ah/admin</code> it seems right:
<img src="http://akshayrangnekar.github.io/images/postimages/2/dev-appengine-console1.png"></p>

<p>There is of course nothing there. So let&rsquo;s create a very simple Servlet. Here&rsquo;s my incredibly basic HelloWorldServlet:</p>

<figure class='code'><figcaption><span> (HelloWorldServlet.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/1/HelloWorldServlet.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.annotation.WebServlet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@WebServlet</span><span class="o">(</span><span class="s">&quot;/Hello&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorldServlet</span> <span class="kd">extends</span> <span class="n">HttpServlet</span> <span class="o">{</span>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span>
</span><span class='line'>      <span class="kd">throws</span> <span class="n">ServletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;text/plain&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello AppEngine!&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>But if we try running it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:server akshay$</span> mvn install
</span><span class='line'><span class="go">[INFO] Scanning for projects...</span>
</span><span class='line'><span class="go">...</span>
</span><span class='line'><span class="go">[INFO] -------------------------------------------------------------</span>
</span><span class='line'><span class="go">[ERROR] COMPILATION ERROR : </span>
</span><span class='line'><span class="go">[INFO] -------------------------------------------------------------</span>
</span><span class='line'><span class="go">[ERROR] /Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[6,31] error: package javax.servlet.annotation does not exist</span>
</span><span class='line'><span class="go">[ERROR] /Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[11,1] error: cannot find symbol</span>
</span><span class='line'><span class="go">[ERROR]   symbol: class WebServlet</span>
</span><span class='line'><span class="go">/Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[6,31] error: package javax.servlet.annotation does not exist</span>
</span><span class='line'><span class="go">[ERROR] /Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[11,1] error: cannot find symbol</span>
</span><span class='line'><span class="go">[INFO] 4 errors </span>
</span></code></pre></td></tr></table></div></figure>


<p>Ass. So clearly the archetype doesn&rsquo;t use the latest version of the Servlet API. Interestingly, I cannot find anything easily available in Google&rsquo;s docs about what version of the Servlet API they support. Let&rsquo;s try defining the servlet in the web.xml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>    <span class="nt">&lt;servlet-name&gt;</span>HelloWorldServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;servlet-class&gt;</span>com.listerly.HelloWorldServlet<span class="nt">&lt;/servlet-class&gt;</span>
</span><span class='line'><span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;servlet-mapping&gt;</span>
</span><span class='line'>    <span class="nt">&lt;servlet-name&gt;</span>HelloWorldServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;url-pattern&gt;</span>/hi<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'><span class="nt">&lt;/servlet-mapping&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>and rerunning:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>mbp:server akshay$ mvn install
</span><span class='line'>mbp:server akshay$ mvn -pl server-ear appengine:devserver
</span></code></pre></td></tr></table></div></figure>


<p>and this time we get something better:
<img src="http://akshayrangnekar.github.io/images/postimages/2/dev-appengine-try2.png"></p>

<p>Awesome. We now have a servlet running on our local dev server. Looks like we can&rsquo;t use the WebServlet annotation with the devserver though. Lets try pushing this app to appengine. First, there are a tweak to the configuration file. In <code>appengine-web.xml</code> set the application to the id of the project you created on the AppEngine console:</p>

<figure class='code'><figcaption><span>server-war/src/main/webapp/WEB-INF/appengine-web.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;appengine-web-app</span> <span class="na">xmlns=</span><span class="s">&quot;http://appengine.google.com/ns/1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;application&gt;</span>listerly-dev<span class="nt">&lt;/application&gt;</span>
</span><span class='line'>    <span class="nt">&lt;version&gt;</span>${appengine.app.version}<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;threadsafe&gt;</span>true<span class="nt">&lt;/threadsafe&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;system-properties&gt;</span>
</span><span class='line'>        <span class="nt">&lt;property</span> <span class="na">name=</span><span class="s">&quot;java.util.logging.config.file&quot;</span> <span class="na">value=</span><span class="s">&quot;WEB-INF/logging.properties&quot;</span><span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/system-properties&gt;</span>
</span><span class='line'><span class="nt">&lt;/appengine-web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>and in the <code>appengine-application.xml</code> do the same thing:</p>

<figure class='code'><figcaption><span>server-ear/src/main/application/META-INF/appengine-application.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;appengine-application</span> <span class="na">xmlns=</span><span class="s">&quot;http://appengine.google.com/ns/1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;application&gt;</span>listerly-dev<span class="nt">&lt;/application&gt;</span>
</span><span class='line'><span class="nt">&lt;/appengine-application&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then run the <code>update</code> tasks <code>mvn -pl server-ear appengine:update</code>. If all is well, you should first see a browser window pop up asking you for authentication:
<img src="http://akshayrangnekar.github.io/images/postimages/2/dev-appengine-auth1.png"></p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/2/dev-appengine-auth2.png"></p>

<p>Enter that code when you get the prompt <code>Please enter code:</code>. If all is well you should see a <code>BUILD SUCCESS</code> message at the end of the compilation and deployment step (note: this takes a couple of minutes);</p>

<p>Load the page from your appspot URL <code>http://[your-application-id].appspot.com/hi</code> and you should see your Hello AppEngine page, running on Google AppEngine. That&rsquo;s success for this part.</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/2/helloworld-appengine1.png"></p>

<p>Lets commit everything and then switch back to the master to try the handrolled way.</p>

<figure class='code'><figcaption><span>server-ear/src/main/application/META-INF/appengine-application.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>mbp:~/Dev/Listerly/listerly$ git add .
</span><span class='line'>[NON-ERROR OUTPUT HIDDEN]
</span><span class='line'>mbp:~/Dev/Listerly/listerly$ git commit -m &quot;Working HelloWorld with Google archetype&quot;
</span><span class='line'>[NON-ERROR OUTPUT HIDDEN]
</span><span class='line'>mbp:~/Dev/Listerly/listerly$ git push
</span><span class='line'>[NON-ERROR OUTPUT HIDDEN]
</span><span class='line'>mbp:~/Dev/Listerly/listerly$ git checkout master
</span><span class='line'>[NON-ERROR OUTPUT HIDDEN]
</span><span class='line'>mbp:~/Dev/Listerly/listerly$ git pull
</span><span class='line'>Already up-to-date.
</span><span class='line'>mbp:~/Dev/Listerly/listerly$ ls
</span><span class='line'>README.md server
</span></code></pre></td></tr></table></div></figure>


<h2>Starting from scratch</h2>

<p>I have to admit, this is my preferred way of starting because I like to have complete control over the project layout, the directory structure etc.</p>

<p>Let&rsquo;s start with what my ideal directory structure is:</p>

<ul>
<li>[root directory] &ndash; Primarily contains build files

<ul>
<li><em>src</em>

<ul>
<li><em>main</em>

<ul>
<li><em>java</em> &ndash; The main directory for source code</li>
<li><em>resources</em> &ndash; Other items that have to go into the jar (logging config, application config)</li>
<li><em>webapp</em> &ndash; Resources (css, images, js)</li>
<li><em>templates</em> &ndash; Freemarker templates for pages</li>
</ul>
</li>
<li><em>test</em> &ndash; Testing resources (will be defined later)</li>
</ul>
</li>
<li><em>build</em> &ndash; temporary directory, ignored by git, for artifacts</li>
</ul>
</li>
</ul>


<p>Lets start by creating that directory structure (leave out the build directory &ndash; should be created automatically). Then we&rsquo;ll make a basic Maven build file (named <code>pom.xml</code> in our root directory)</p>

<figure class='code'><figcaption><span>server-ear/src/main/application/META-INF/appengine-application.xml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.listerly<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>listerly-server<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Listerly Main Server<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;url&gt;</span>http://www.listerly.com<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>servlet-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.5<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we add our basic servlet and a web.xml:</p>

<p>In <code>src/main/java/com/listerly/</code></p>

<figure class='code'><figcaption><span> (HelloWorldServlet.java)</span> <a href='http://akshayrangnekar.github.io/downloads/code/1/b/HelloWorldServlet.java'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">package</span> <span class="n">com</span><span class="o">.</span><span class="na">listerly</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.ServletException</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServlet</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletRequest</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">javax.servlet.http.HttpServletResponse</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">&quot;serial&quot;</span><span class="o">)</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">HelloWorldServlet</span> <span class="kd">extends</span> <span class="n">HttpServlet</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">doGet</span><span class="o">(</span><span class="n">HttpServletRequest</span> <span class="n">req</span><span class="o">,</span> <span class="n">HttpServletResponse</span> <span class="n">resp</span><span class="o">)</span>
</span><span class='line'>          <span class="kd">throws</span> <span class="n">ServletException</span><span class="o">,</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;text/plain&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">resp</span><span class="o">.</span><span class="na">getWriter</span><span class="o">().</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;Hello, my AppEngine&quot;</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>In <code>src/main/webapp/WEB-INF</code></p>

<figure class='code'><figcaption><span> (web.xml)</span> <a href='http://akshayrangnekar.github.io/downloads/code/1/b/web.xml'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;web-app</span> <span class="na">version=</span><span class="s">&quot;2.5&quot;</span> <span class="na">xmlns=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee&quot;</span>
</span><span class='line'><span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'><span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;welcome-file-list&gt;</span>
</span><span class='line'>      <span class="nt">&lt;welcome-file&gt;</span>index.html<span class="nt">&lt;/welcome-file&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/welcome-file-list&gt;</span>
</span><span class='line'>  <span class="nt">&lt;servlet&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>HelloWorldServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-class&gt;</span>com.listerly.HelloWorldServlet<span class="nt">&lt;/servlet-class&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;servlet-mapping&gt;</span>
</span><span class='line'>      <span class="nt">&lt;servlet-name&gt;</span>HelloWorldServlet<span class="nt">&lt;/servlet-name&gt;</span>
</span><span class='line'>      <span class="nt">&lt;url-pattern&gt;</span>/hi<span class="nt">&lt;/url-pattern&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/servlet-mapping&gt;</span>
</span><span class='line'><span class="nt">&lt;/web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lets try building our war file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:~/Dev/Listerly/listerly$</span> mvn package
</span><span class='line'><span class="go">[BLAH BLAH BLAH...]</span>
</span><span class='line'><span class="go">[INFO] ------------------------------------------------------------------------</span>
</span><span class='line'><span class="go">[INFO] BUILD SUCCESS</span>
</span><span class='line'><span class="go">[INFO] ------------------------------------------------------------------------</span>
</span></code></pre></td></tr></table></div></figure>


<p>Good so far. But there&rsquo;s not much we can do with this just yet. Let&rsquo;s first start with trying to run our war on a web server independently of AppEngine.</p>

<p>Lets add the Jetty plugin to our <code>pom.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>  <span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.eclipse.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>jetty-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>9.1.3.v20140225<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/build&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now try running the <code>mvn jetty:run</code> task</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:~/Dev/Listerly/listerly$</span> mvn package
</span><span class='line'><span class="go">[BLAH BLAH BLAH...]</span>
</span><span class='line'><span class="gp">mbp:~/Dev/Listerly/listerly$</span> mvn jetty:run
</span><span class='line'><span class="go">[BLAH BLAH BLAH...]</span>
</span><span class='line'><span class="go">[INFO] Started Jetty Server</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you try accessing your servlet at <code>localhost:8080/hi</code> you should see a positive result:
<img src="http://akshayrangnekar.github.io/images/postimages/2/helloworld-jetty.png"></p>

<p>Ok, lets move on to integrating appengine.</p>

<p>Before we start, I&rsquo;m going to change my servlet a tiny bit just to be able to differentiate and make sure this is the version we&rsquo;re seeing. Change the appropriate line to <code>resp.getWriter().println("Hello, handrolled AppEngine!");</code></p>

<p>Next, we need to create the <code>appengine-web.xml</code> (in <code>src/main/webapp/WEB-INF/</code>) that tells AppEngine what project and version</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;appengine-web-app</span> <span class="na">xmlns=</span><span class="s">&quot;http://appengine.google.com/ns/1.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;application&gt;</span>listerly-dev<span class="nt">&lt;/application&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;threadsafe&gt;</span>true<span class="nt">&lt;/threadsafe&gt;</span>
</span><span class='line'><span class="nt">&lt;/appengine-web-app&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then we need to add a couple of items to our <code>pom.xml</code></p>

<figure class='code'><figcaption><span>pom.xml - see lines 14-18 and 32-36</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;project</span> <span class="na">xmlns=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="na">xmlns:xsi=</span><span class="s">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
</span><span class='line'>  <span class="na">xsi:schemaLocation=</span><span class="s">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;modelVersion&gt;</span>4.0.0<span class="nt">&lt;/modelVersion&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;groupId&gt;</span>com.listerly<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;artifactId&gt;</span>listerly-server<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>  <span class="nt">&lt;version&gt;</span>0.1<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>  <span class="nt">&lt;packaging&gt;</span>war<span class="nt">&lt;/packaging&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>Listerly Main Server<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;url&gt;</span>http://www.listerly.com<span class="nt">&lt;/url&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;dependencies&gt;</span>
</span><span class='line'>      <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>          <span class="nt">&lt;groupId&gt;</span>com.google.appengine<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;artifactId&gt;</span>appengine-api-1.0-sdk<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>          <span class="nt">&lt;version&gt;</span>1.9.0<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>    <span class="nt">&lt;dependency&gt;</span>
</span><span class='line'>      <span class="nt">&lt;groupId&gt;</span>javax.servlet<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;artifactId&gt;</span>servlet-api<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>      <span class="nt">&lt;version&gt;</span>2.5<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/dependency&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/dependencies&gt;</span>
</span><span class='line'>  <span class="nt">&lt;build&gt;</span>
</span><span class='line'>    <span class="nt">&lt;plugins&gt;</span>
</span><span class='line'>      <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;groupId&gt;</span>org.eclipse.jetty<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;artifactId&gt;</span>jetty-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>        <span class="nt">&lt;version&gt;</span>9.1.3.v20140225<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>        <span class="nt">&lt;plugin&gt;</span>
</span><span class='line'>            <span class="nt">&lt;groupId&gt;</span>com.google.appengine<span class="nt">&lt;/groupId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;artifactId&gt;</span>appengine-maven-plugin<span class="nt">&lt;/artifactId&gt;</span>
</span><span class='line'>            <span class="nt">&lt;version&gt;</span>1.8.7<span class="nt">&lt;/version&gt;</span>
</span><span class='line'>        <span class="nt">&lt;/plugin&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/plugins&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/build&gt;</span>
</span><span class='line'><span class="nt">&lt;/project&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now if we run <code>mvn appengine:devserver</code> and visit <code>http://localhost:8080/hi</code> we get something that looks good:</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/2/helloworld-appengine1.png"></p>

<p>Lets try pushing it to the Google servers. Run <code>mvn appengine:update</code> and if all goes well (it should!), open a browser to <code>http://[app-id].appspot.com/hi</code>. Uh oh. Doesn&rsquo;t say &ldquo;handrolled&rdquo; for me. Looks like it&rsquo;s still running the old version. Fortunately, this is to be expected because AppEngine allows you to upload multiple versions of your app, but only one of them is the &ldquo;default version&rdquo;. Lets make this version default. Visit <code>appengine.google.com</code>. Login, and then click on your application. In the left navigation bar you should see &ldquo;versions&rdquo;. Click there, and you&rsquo;ll see that you have two versions deployed: <code>1-war</code> that was created by the AppEngine archetype, and <code>1</code>, which is the version we just created. Select 1, and click make default. Now if you reload your other browser window, you should see &ldquo;Hello, handrolled AppEngine!&rdquo;. That&rsquo;s success for Part 2.</p>

<p>You can choose which approach you prefer. I like the ability to have full control over my project structure so for the rest of this tutorial I&rsquo;m going to go with the second approach (which the more attentive may have guessed by the fact that this has all been done on the master branch though I claim that was accidental). Add everything into git (if you&rsquo;re going with this approach &ndash; otherwise discard everything and merge the other branch into master) and we&rsquo;ll be ready to go with <a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Up and Running on AppEngine With Maven, Jersey and Guice - Part 1]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/"/>
    <updated>2014-03-13T17:20:31+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice</id>
    <content type="html"><![CDATA[<p>After 10 years away from proper coding, I&rsquo;m building a new application. I&rsquo;ll talk more about Listerly and some of my design choices at a later time, but this post should help document the process so if anyone else wants this type of a setup it&rsquo;s easy to get going.</p>

<p>This application has many moving pieces, and to make my life easier I&rsquo;m going to have some pretty awesome tools do most of the heavy lifting for me. In no particular order, the key pieces that I&rsquo;ll be using include Google AppEngine (PAAS), maven (build), git/github (source control), Jersey (RESTful services), Guice (dependency injection), Freemarker (templates), Jackson (JSON) and JPA (persistence).</p>

<ul>
<li><a href="http://akshayrangnekar.github.io/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a> gets you set up with maven and a blank repository on github</li>
<li><a href="http://akshayrangnekar.github.io/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> gets you to the point of having a working web application running locally and deployed on AppEngine.</li>
<li><a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> adds Jersey and Guice to the mix.</li>
<li><a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> makes Jersey useful by demonstrating how to use Freemarker and Jackson to return HTML and JSON respectively.</li>
<li><a href="http://akshayrangnekar.github.io/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/">Part 5</a> will set up persistence to the Google DataStore using JPA.</li>
</ul>


<!-- more -->


<h2>Create AppEngine Project</h2>

<p>Very simple. Go to <a href="http://appengine.google.com">appengine.google.com</a>. Login, then click &ldquo;Create Application&rdquo;:
<img src="http://akshayrangnekar.github.io/images/postimages/appengine1.png"></p>

<p>Find a nice identifier is available, and give your application a descriptive name. For the moment, I&rsquo;ve set with the default authentication options, that allows any Google user to authenticate to your app (for the areas that you enable authentication):
<img src="http://akshayrangnekar.github.io/images/postimages/appengine2.png"></p>

<p>Hopefully that should be all you need to do. Tell Google to go ahead and you should have a blank project ready to go:
<img src="http://akshayrangnekar.github.io/images/postimages/appengine3.png"></p>

<h2>Install Maven</h2>

<p>First, download Maven from the Apache download site:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:~ akshay$ cd Dev/
</span><span class='line'>mbp:Dev akshay$ mkdir lib
</span><span class='line'>mbp:Dev akshay$ cd lib/
</span><span class='line'>mbp:lib akshay$ curl -O http://apache.mirror.anlx.net/maven/maven-3/3.2.1/binaries/apache-maven-3.2.1-bin.tar.gz
</span><span class='line'>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
</span><span class='line'>                                 Dload  Upload   Total   Spent    Left  Speed
</span><span class='line'>100 6765k  100 6765k    0     0  1757k      0  0:00:03  0:00:03 --:--:-- 1756k
</span><span class='line'>mbp:lib akshay$ </span></code></pre></td></tr></table></div></figure>


<p>Then unzip the file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mbp:lib akshay$ ls
</span><span class='line'>apache-maven-3.2.1-bin.tar.gz
</span><span class='line'>mbp:lib akshay$ tar -xvzf apache-maven-3.2.1-bin.tar.gz </span></code></pre></td></tr></table></div></figure>


<p>Set some environment variables:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">M2_HOME</span><span class="o">=</span>/Users/akshay/Dev/lib/apache-maven-3.2.1/
</span><span class='line'><span class="nb">export </span><span class="nv">M2</span><span class="o">=</span><span class="nv">$M2_HOME</span>/bin
</span><span class='line'><span class="nb">export </span><span class="nv">MAVEN_OPTS</span><span class="o">=</span><span class="s2">&quot;-Xms256m -Xmx512m&quot;</span>
</span><span class='line'><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$M2</span>:<span class="nv">$PATH</span>
</span><span class='line'><span class="nb">export </span><span class="nv">JAVA_HOME</span><span class="o">=</span>/Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home
</span></code></pre></td></tr></table></div></figure>


<p>Check that we&rsquo;re good:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:lib akshay$</span> mvn -version
</span><span class='line'><span class="go">Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T17:37:52+00:00)</span>
</span><span class='line'><span class="go">Maven home: /Users/akshay/Dev/lib/apache-maven-3.2.1</span>
</span><span class='line'><span class="go">Java version: 1.7.0_51, vendor: Oracle Corporation</span>
</span><span class='line'><span class="go">Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre</span>
</span><span class='line'><span class="go">Default locale: en_US, platform encoding: UTF-8</span>
</span><span class='line'><span class="go">OS name: &quot;mac os x&quot;, version: &quot;10.9.2&quot;, arch: &quot;x86_64&quot;, family: &quot;mac&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Create repository</h2>

<p>Go to GitHub and create a new private repository
<img src="http://akshayrangnekar.github.io/images/postimages/github-newrepo1.png"></p>

<p>Note I&rsquo;ve asked it to create a README for me so I can clone. Personal preference &ndash; I prefer to <code>clone</code> only rather than <code>init</code>.</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/github-newrepo2.png"></p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/github-newrepo3.png"></p>

<p>Then clone to your local development directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:Dev akshay$</span> mkdir Listerly
</span><span class='line'><span class="gp">mbp:Dev akshay$</span> <span class="nb">cd </span>Listerly/
</span><span class='line'><span class="gp">mbp:Listerly akshay$</span> ls
</span><span class='line'><span class="gp">mbp:Listerly akshay$</span> git clone https://github.com/akshayrangnekar/listerly.git
</span><span class='line'><span class="go">Cloning into &#39;listerly&#39;...</span>
</span><span class='line'><span class="go">remote: Counting objects: 3, done.</span>
</span><span class='line'><span class="go">remote: Total 3 (delta 0), reused 0 (delta 0)</span>
</span><span class='line'><span class="go">Unpacking objects: 100% (3/3), done.</span>
</span><span class='line'><span class="go">Checking connectivity... done.</span>
</span><span class='line'><span class="gp">mbp:Listerly akshay$</span> <span class="nb">cd </span>listerly
</span><span class='line'><span class="gp">mbp:listerly akshay$</span> ls
</span><span class='line'><span class="go">README.md</span>
</span><span class='line'><span class="gp">mbp:listerly akshay$</span>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s it for Part 1. In <a href="http://akshayrangnekar.github.io/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> we&rsquo;ll create a Maven project for AppEngine and a simple dummy servlet.</p>

<p><a href="http://akshayrangnekar.github.io/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Continue &ndash;></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up Octopress]]></title>
    <link href="http://akshayrangnekar.github.io/blog/2014/03/13/setting-up-octopress/"/>
    <updated>2014-03-13T13:22:41+00:00</updated>
    <id>http://akshayrangnekar.github.io/blog/2014/03/13/setting-up-octopress</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://www.gravatar.com/avatar/712764174a1641db425b971456e63015?r=x&s=700" width="150" height="150" title="me" alt="me"> I&rsquo;ve been looking for a nice system to use to create blog posts as I get back in to development. I&rsquo;ve seen a couple of very ncie blogs that use <a href="http://octopress.org/">Octopress</a>, so I decided to give it a try.</p>

<p>I did the setup on a my fairly new MacBook Pro, running OS X Mavericks. Was fairly easy, even with my incredibly rusty knowledge of Ruby but there were a couple of gotchas that took a little bit of <a href="http://stackoverflow.com/">Stack Overflowing</a> to figure out so I thought it may be worth writing this up as my first post using the system. With these notes, should take you less than five minutes to install and be up and running.</p>

<!-- more -->


<h2>Installation</h2>

<p>Installation was <em>almost</em> as easy as the documentation suggested.</p>

<ul>
<li><p>I already had git installed from XCode. If you don&rsquo;t, it&rsquo;s fairly simple to install (just type git for instructions).</p></li>
<li><p>The version of ruby that ships with OSX is good enough to get Octopress up and running.</p></li>
<li><p>Getting Octopress was as simple as cloning a repo</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">git clone git://github.com/imathis/octopress.git octopress</span>
</span><span class='line'><span class="go">cd octopress</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Here&rsquo;s where it starts getting a little more complicated.</li>
</ul>


<p>Following the instructions, next step was to download prerequisites:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> bundle install
</span><span class='line'><span class="go">Fetching gem metadata from https://rubygems.org/.......</span>
</span><span class='line'><span class="go">Fetching additional metadata from https://rubygems.org/..</span>
</span><span class='line'>
</span><span class='line'><span class="go">Errno::EACCES: Permission denied - /Library/Ruby/Gems/2.0.0/build_info/rake-0.9.2.2.info</span>
</span><span class='line'><span class="go">An error occurred while installing rake (0.9.2.2), and Bundler cannot continue.</span>
</span><span class='line'><span class="go">Make sure that `gem install rake -v &#39;0.9.2.2&#39;` succeeds before bundling.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Uh oh. But this one is fairly simple to figure out &ndash; the OS X Gems system installs ruby gems into a superuser writable directory by default. Easy fix.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> sudo gem install bundler
</span><span class='line'><span class="go">Password:</span>
</span><span class='line'><span class="go">Fetching: bundler-1.5.3.gem (100%)</span>
</span><span class='line'><span class="go">Successfully installed bundler-1.5.3</span>
</span><span class='line'><span class="go">Parsing documentation for bundler-1.5.3</span>
</span><span class='line'><span class="go">Installing ri documentation for bundler-1.5.3</span>
</span><span class='line'><span class="go">1 gem installed</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well that was easy.</p>

<ul>
<li>Now we have to install the bundle</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> bundle install
</span><span class='line'><span class="go">Fetching gem metadata from https://rubygems.org/.......</span>
</span><span class='line'><span class="go">Fetching additional metadata from https://rubygems.org/..</span>
</span><span class='line'>
</span><span class='line'><span class="go">Errno::EACCES: Permission denied - /Library/Ruby/Gems/2.0.0/build_info/rake-0.9.2.2.info</span>
</span><span class='line'><span class="go">An error occurred while installing rake (0.9.2.2), and Bundler cannot continue.</span>
</span><span class='line'><span class="go">Make sure that `gem install rake -v &#39;0.9.2.2&#39;` succeeds before bundling.</span>
</span><span class='line'><span class="gp">mbp:octopress$</span> sudo gem install rake -v <span class="s1">&#39;0.9.2.2&#39;</span>
</span><span class='line'><span class="go">rake&#39;s executable &quot;rake&quot; conflicts with /usr/bin/rake</span>
</span><span class='line'><span class="go">Overwrite the executable? [yN]  N</span>
</span><span class='line'><span class="go">ERROR:  Error installing rake:</span>
</span><span class='line'><span class="go"> &quot;rake&quot; from rake conflicts with /usr/bin/rake</span>
</span><span class='line'><span class="gp">mbp:octopress$</span> rake -version
</span><span class='line'><span class="go">rake aborted!</span>
</span><span class='line'><span class="go">undefined local variable or method `rsion&#39; for #&lt;Rake::Application:0x007fc41c8782b8&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="go">(See full trace by running task with --trace)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Shit. The sudo workaround isn&rsquo;t going to cut it. And don&rsquo;t really want to keep doing sudo to get all this working. Better solution: fix gem install to happen locally.</p>

<ul>
<li>Set the gem install directory (for good measure, also do this in .profile)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> <span class="nb">export </span><span class="nv">GEM_HOME</span><span class="o">=</span>/Users/akshay/.gem/ruby/2.0.0/
</span><span class='line'><span class="gp">mbp:octopress$</span> <span class="nb">echo</span> <span class="nv">$GEM_HOME</span>
</span><span class='line'><span class="go">/Users/akshay/.gem/ruby/2.0.0/</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>And try again</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> bundle install
</span><span class='line'><span class="go">Fetching gem metadata from https://rubygems.org/.......</span>
</span><span class='line'><span class="go">Fetching additional metadata from https://rubygems.org/..</span>
</span><span class='line'><span class="go">Installing rake (0.9.2.2)</span>
</span><span class='line'>
</span><span class='line'><span class="go">Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.</span>
</span><span class='line'>
</span><span class='line'><span class="go">    /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby extconf.rb </span>
</span><span class='line'><span class="go">checking for main() in -lc... yes</span>
</span><span class='line'><span class="go">creating Makefile</span>
</span><span class='line'>
</span><span class='line'><span class="go">make &quot;DESTDIR=&quot;</span>
</span><span class='line'><span class="go">compiling redcloth_attributes.c</span>
</span><span class='line'><span class="go">compiling redcloth_inline.c</span>
</span><span class='line'><span class="go">compiling redcloth_scan.c</span>
</span><span class='line'><span class="go">linking shared-object redcloth_scan.bundle</span>
</span><span class='line'><span class="go">clang: error: unknown argument: &#39;-multiply_definedsuppress&#39; [-Wunused-command-line-argument-hard-error-in-future]</span>
</span><span class='line'><span class="go">clang: note: this will be a hard error (cannot be downgraded to a warning) in the future</span>
</span><span class='line'><span class="go">make: *** [redcloth_scan.bundle] Error 1</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="go">Gem files will remain installed in /Users/akshay/.gem/ruby/2.0.0/gems/RedCloth-4.2.9 for inspection.</span>
</span><span class='line'><span class="go">Results logged to /Users/akshay/.gem/ruby/2.0.0/gems/RedCloth-4.2.9/ext/redcloth_scan/gem_make.out</span>
</span><span class='line'><span class="go">An error occurred while installing RedCloth (4.2.9), and Bundler cannot</span>
</span><span class='line'><span class="go">continue.</span>
</span><span class='line'><span class="go">Make sure that `gem install RedCloth -v &#39;4.2.9&#39;` succeeds before bundling.</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Shit. Now this looks like it&rsquo;s going to take all day (it&rsquo;s not).</li>
</ul>


<p>Fortunately, some helpful soul had already answered this on <a href="http://stackoverflow.com/questions/22352838/ruby-gem-install-json-fails-on-mavericks-and-xcode-5-1-unknown-argument-mul">StackOverflow</a>. Again, a fairly simple solution. (Again, another line for my .profile)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> <span class="nb">export </span><span class="nv">ARCHFLAGS</span><span class="o">=</span>-Wno-error<span class="o">=</span>unused-command-line-argument-hard-error-in-future gem install json
</span><span class='line'><span class="gp">mbp:octopress$</span> gem install RedCloth -v <span class="s1">&#39;4.2.9&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="gp">mbp:octopress$</span> gem install RedCloth -v <span class="s1">&#39;4.2.9&#39;</span>
</span><span class='line'><span class="go">Building native extensions.  This could take a while...</span>
</span><span class='line'><span class="go">Successfully installed RedCloth-4.2.9</span>
</span><span class='line'><span class="go">Parsing documentation for RedCloth-4.2.9</span>
</span><span class='line'><span class="go">unable to convert &quot;\xCF&quot; from ASCII-8BIT to UTF-8 for ext/redcloth_scan/redcloth_attributes.o, skipping</span>
</span><span class='line'><span class="go">unable to convert &quot;\xCF&quot; from ASCII-8BIT to UTF-8 for ext/redcloth_scan/redcloth_inline.o, skipping</span>
</span><span class='line'><span class="go">unable to convert &quot;\xCF&quot; from ASCII-8BIT to UTF-8 for ext/redcloth_scan/redcloth_scan.bundle, skipping</span>
</span><span class='line'><span class="go">unable to convert &quot;\xCF&quot; from ASCII-8BIT to UTF-8 for ext/redcloth_scan/redcloth_scan.o, skipping</span>
</span><span class='line'><span class="go">unable to convert &quot;\xCF&quot; from ASCII-8BIT to UTF-8 for lib/redcloth_scan.bundle, skipping</span>
</span><span class='line'><span class="go">Installing ri documentation for RedCloth-4.2.9</span>
</span><span class='line'><span class="go">1 gem installed</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Well there are some warnings, but they&rsquo;re in the documentation and overall it looks better. Lets try the main dependencies installation again.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> bundle install
</span><span class='line'><span class="go">Fetching gem metadata from https://rubygems.org/.......</span>
</span><span class='line'><span class="go">Fetching additional metadata from https://rubygems.org/..</span>
</span><span class='line'><span class="go">Using rake (0.9.2.2)</span>
</span><span class='line'><span class="go">Using RedCloth (4.2.9)</span>
</span><span class='line'><span class="go">Installing chunky_png (1.2.5)</span>
</span><span class='line'><span class="go">Installing fast-stemmer (1.0.1)</span>
</span><span class='line'><span class="go">Installing classifier (1.3.3)</span>
</span><span class='line'><span class="go">Installing fssm (0.2.9)</span>
</span><span class='line'><span class="go">Installing sass (3.2.9)</span>
</span><span class='line'><span class="go">Installing compass (0.12.2)</span>
</span><span class='line'><span class="go">Installing directory_watcher (1.4.1)</span>
</span><span class='line'><span class="go">Installing haml (3.1.7)</span>
</span><span class='line'><span class="go">Installing kramdown (0.13.8)</span>
</span><span class='line'><span class="go">Installing liquid (2.3.0)</span>
</span><span class='line'><span class="go">Installing syntax (1.0.0)</span>
</span><span class='line'><span class="go">Installing maruku (0.6.1)</span>
</span><span class='line'><span class="go">Installing posix-spawn (0.3.6)</span>
</span><span class='line'><span class="go">Installing yajl-ruby (1.1.0)</span>
</span><span class='line'><span class="go">Installing pygments.rb (0.3.4)</span>
</span><span class='line'><span class="go">Installing jekyll (0.12.0)</span>
</span><span class='line'><span class="go">Installing rack (1.5.2)</span>
</span><span class='line'><span class="go">Installing rack-protection (1.5.0)</span>
</span><span class='line'><span class="go">Installing rb-fsevent (0.9.1)</span>
</span><span class='line'><span class="go">Installing rdiscount (2.0.7.3)</span>
</span><span class='line'><span class="go">Installing rubypants (0.2.0)</span>
</span><span class='line'><span class="go">Installing sass-globbing (1.0.0)</span>
</span><span class='line'><span class="go">Installing tilt (1.3.7)</span>
</span><span class='line'><span class="go">Installing sinatra (1.4.2)</span>
</span><span class='line'><span class="go">Installing stringex (1.4.0)</span>
</span><span class='line'><span class="go">Using bundler (1.5.3)</span>
</span><span class='line'><span class="go">Your bundle is complete!</span>
</span><span class='line'><span class="go">Use `bundle show [gemname]` to see where a bundled gem is installed.</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Looks good. Now to complete the install</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> rake install
</span><span class='line'><span class="gp">#</span><span class="c"># Copying classic theme into ./source and ./sass</span>
</span><span class='line'><span class="go">mkdir -p source</span>
</span><span class='line'><span class="go">cp -r .themes/classic/source/. source</span>
</span><span class='line'><span class="go">mkdir -p sass</span>
</span><span class='line'><span class="go">cp -r .themes/classic/sass/. sass</span>
</span><span class='line'><span class="go">mkdir -p source/_posts</span>
</span><span class='line'><span class="go">mkdir -p public</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Awesome. That&rsquo;s the basic install done.</p>

<h2>Configuration</h2>

<p>I decided that the best thing for me was to do use this blog as my page for github. There are a bunch of <a href="http://octopress.org/docs/deploying/">other deployment options</a> if you don&rsquo;t want to do that.</p>

<p>First step is to create a new repo in github. It must be named <code>&lt;your username&gt;.github.io</code> (or more accurately, <code>&lt;your username&gt;/&lt;your username&gt;.github.io</code>). Screenshot below shows how mine was setup.</p>

<p><img src="http://akshayrangnekar.github.io/images/postimages/github-repo-create.png"></p>

<p>Then tell Octopress how to deploy to your github page.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> rake setup_github_pages
</span><span class='line'><span class="go">Enter the read/write url for your repository</span>
</span><span class='line'><span class="go">(For example, &#39;git@github.com:your_username/your_username.github.io.git)</span>
</span><span class='line'><span class="go">           or &#39;https://github.com/your_username/your_username.github.io&#39;)</span>
</span><span class='line'><span class="go">Repository url: https://github.com/akshayrangnekar/akshayrangnekar.github.io.git</span>
</span><span class='line'><span class="go">Added remote https://github.com/akshayrangnekar/akshayrangnekar.github.io.git as origin</span>
</span><span class='line'><span class="go">Set origin as default remote</span>
</span><span class='line'><span class="go">Master branch renamed to &#39;source&#39; for committing your blog source files</span>
</span><span class='line'><span class="go">rm -rf _deploy</span>
</span><span class='line'><span class="go">mkdir _deploy</span>
</span><span class='line'><span class="go">cd _deploy</span>
</span><span class='line'><span class="go">Initialized empty Git repository in /Users/akshay/Dev/Octopress/octopress/_deploy/.git/</span>
</span><span class='line'><span class="go">[master (root-commit) e8d4b07] Octopress init</span>
</span><span class='line'><span class="go"> 1 file changed, 1 insertion(+)</span>
</span><span class='line'><span class="go"> create mode 100644 index.html</span>
</span><span class='line'><span class="go">cd -</span>
</span><span class='line'>
</span><span class='line'><span class="go">---</span>
</span><span class='line'><span class="gp">#</span><span class="c"># Now you can deploy to https://github.com/akshayrangnekar/akshayrangnekar.github.io.git with `rake deploy` ##</span>
</span></code></pre></td></tr></table></div></figure>


<p>We&rsquo;re getting close to done. Set some configuration options in the <code>_config.yml</code> file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">#</span> ----------------------- <span class="c">#</span>
</span><span class='line'><span class="gp">#</span>      Main Configs       <span class="c">#</span>
</span><span class='line'><span class="gp">#</span> ----------------------- <span class="c">#</span>
</span><span class='line'>
</span><span class='line'><span class="go">url: http://akshayrangnekar.github.io</span>
</span><span class='line'><span class="go">title: Akshay&#39;s Programming Blog</span>
</span><span class='line'><span class="go">subtitle: Notes on Coding</span>
</span><span class='line'><span class="go">author: Akshay Rangnekar</span>
</span><span class='line'><span class="go">simple_search: https://www.google.com/search</span>
</span><span class='line'><span class="go">description:</span>
</span></code></pre></td></tr></table></div></figure>


<p>and further down</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">#</span> ----------------------- <span class="c">#</span>
</span><span class='line'><span class="gp">#</span>   3rd Party Settings    <span class="c">#</span>
</span><span class='line'><span class="gp">#</span> ----------------------- <span class="c">#</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span> Github repositories
</span><span class='line'><span class="go">github_user: akshayrangnekar</span>
</span><span class='line'><span class="go">github_repo_count: 1</span>
</span><span class='line'><span class="go">github_show_profile_link: true</span>
</span><span class='line'><span class="go">github_skip_forks: true</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span> Twitter
</span><span class='line'><span class="go">twitter_user: akshayr</span>
</span><span class='line'><span class="go">twitter_tweet_button: true</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span> Google +1
</span><span class='line'><span class="go">google_plus_one: false</span>
</span><span class='line'><span class="go">google_plus_one_size: medium</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span> Google Plus Profile
</span><span class='line'><span class="gp">#</span> Hidden: No visible button, just add author information to search results
</span><span class='line'><span class="go">googleplus_user: akshay.rangnekar@gmail.com</span>
</span><span class='line'><span class="go">googleplus_hidden: true</span>
</span></code></pre></td></tr></table></div></figure>


<p>And we&rsquo;re ready to deploy.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> rake generate
</span><span class='line'><span class="gp">#</span><span class="c"># Generating Site with Jekyll</span>
</span><span class='line'><span class="go">directory source/stylesheets/ </span>
</span><span class='line'><span class="go">   create source/stylesheets/screen.css </span>
</span><span class='line'><span class="go">Configuration from /Users/akshay/Dev/Octopress/octopress/_config.yml</span>
</span><span class='line'><span class="go">Building site: source -&gt; public</span>
</span><span class='line'><span class="go">Successfully generated site: source -&gt; public</span>
</span><span class='line'><span class="gp">mbp:octopress$</span> rake deploy
</span><span class='line'><span class="gp">#</span><span class="c"># Deploying branch to Github Pages </span>
</span><span class='line'><span class="gp">#</span><span class="c"># Pulling any updates from Github Pages </span>
</span><span class='line'><span class="go">cd _deploy</span>
</span><span class='line'><span class="go">There is no tracking information for the current branch.</span>
</span><span class='line'><span class="go">Please specify which branch you want to merge with.</span>
</span><span class='line'><span class="go">See git-pull(1) for details</span>
</span><span class='line'>
</span><span class='line'><span class="go">    git pull &lt;remote&gt; &lt;branch&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="go">If you wish to set tracking information for this branch you can do so with:</span>
</span><span class='line'>
</span><span class='line'><span class="go">    git branch --set-upstream-to=origin/&lt;branch&gt; master</span>
</span><span class='line'>
</span><span class='line'><span class="go">cd -</span>
</span><span class='line'><span class="go">rm -rf _deploy/index.html</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span><span class="c"># Copying public to _deploy</span>
</span><span class='line'><span class="go">cp -r public/. _deploy</span>
</span><span class='line'><span class="go">cd _deploy</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span><span class="c"># Committing: Site updated at 2014-03-13 12:04:21 UTC</span>
</span><span class='line'><span class="go">[master a87f356] Site updated at 2014-03-13 12:04:21 UTC</span>
</span><span class='line'><span class="go"> 61 files changed, 1118 insertions(+), 1 deletion(-)</span>
</span><span class='line'><span class="go"> &lt;LINES REMOVED&gt;</span>
</span><span class='line'><span class="gp">#</span><span class="c"># Pushing generated _deploy website</span>
</span><span class='line'><span class="go">Counting objects: 79, done.</span>
</span><span class='line'><span class="go">Delta compression using up to 8 threads.</span>
</span><span class='line'><span class="go">Compressing objects: 100% (72/72), done.</span>
</span><span class='line'><span class="go">Writing objects: 100% (79/79), 186.51 KiB | 0 bytes/s, done.</span>
</span><span class='line'><span class="go">Total 79 (delta 1), reused 0 (delta 0)</span>
</span><span class='line'><span class="go">To https://github.com/akshayrangnekar/akshayrangnekar.github.io.git</span>
</span><span class='line'><span class="go"> * [new branch]      master -&gt; master</span>
</span><span class='line'>
</span><span class='line'><span class="gp">#</span><span class="c"># Github Pages deploy complete</span>
</span><span class='line'><span class="go">cd -</span>
</span></code></pre></td></tr></table></div></figure>


<p>And we&rsquo;re done (almost). Just make sure you commit your code to the repo.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> git status
</span><span class='line'><span class="go">On branch source</span>
</span><span class='line'><span class="go">Your branch is based on &#39;origin/master&#39;, but the upstream is gone.</span>
</span><span class='line'><span class="go">  (use &quot;git branch --unset-upstream&quot; to fixup)</span>
</span><span class='line'>
</span><span class='line'><span class="go">Changes not staged for commit:</span>
</span><span class='line'><span class="go">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</span>
</span><span class='line'><span class="go">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</span>
</span><span class='line'>
</span><span class='line'><span class="go"> modified:   Rakefile</span>
</span><span class='line'><span class="go"> modified:   _config.yml</span>
</span><span class='line'>
</span><span class='line'><span class="go">Untracked files:</span>
</span><span class='line'><span class="go">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</span>
</span><span class='line'>
</span><span class='line'><span class="go"> sass/</span>
</span><span class='line'><span class="go"> source/</span>
</span><span class='line'>
</span><span class='line'><span class="go">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</span>
</span><span class='line'><span class="gp">mbp:octopress$</span> git add .
</span><span class='line'><span class="gp">mbp:octopress$</span> git commit -m <span class="s1">&#39;First commit&#39;</span>
</span><span class='line'><span class="go">[source 13f9d4a] First commit</span>
</span><span class='line'><span class="go"> 119 files changed, 2784 insertions(+), 3 deletions(-)</span>
</span><span class='line'><span class="go"> &lt;LINES REMOVED&gt;</span>
</span><span class='line'><span class="gp">mbp:octopress$</span> git push origin <span class="nb">source</span>
</span><span class='line'><span class="go">Counting objects: 4771, done.</span>
</span><span class='line'><span class="go">Delta compression using up to 8 threads.</span>
</span><span class='line'><span class="go">Compressing objects: 100% (2124/2124), done.</span>
</span><span class='line'><span class="go">Writing objects: 100% (4771/4771), 1.30 MiB | 136.00 KiB/s, done.</span>
</span><span class='line'><span class="go">Total 4771 (delta 2296), reused 4742 (delta 2270)</span>
</span><span class='line'><span class="go">To https://github.com/akshayrangnekar/akshayrangnekar.github.io.git</span>
</span><span class='line'><span class="go"> * [new branch]      source -&gt; source</span>
</span><span class='line'><span class="gp">mbp:octopress$</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now we&rsquo;re done. And ready to create our first post.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">mbp:octopress$</span> rake new_post<span class="o">[</span><span class="s2">&quot;Setting up Octopress&quot;</span><span class="o">]</span>
</span><span class='line'><span class="go">mkdir -p source/_posts</span>
</span><span class='line'><span class="go">Creating new post: source/_posts/2014-03-13-setting-up-octopress.markdown</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then start editing the file at <code>source/_posts/2014-03-13-setting-up-octopress.markdown</code>. If you need help on the syntax, the <a href="http://daringfireball.net/projects/markdown/syntax">Daring Fireball page</a> is a great place to go.</p>
]]></content>
  </entry>
  
</feed>
