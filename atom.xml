<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Development Notes]]></title>
  <subtitle><![CDATA[Akshay Rangnekar]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://akshayrangnekar.github.io/"/>
  <updated>2015-04-20T16:58:15.000Z</updated>
  <id>http://akshayrangnekar.github.io/</id>
  
  <author>
    <name><![CDATA[Akshay Rangnekar]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Getting Started with Gulp]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2015/04/19/getting-started-with-gulp/"/>
    <id>http://akshayrangnekar.github.io//blog/2015/04/19/getting-started-with-gulp/</id>
    <published>2015-04-19T12:25:49.000Z</published>
    <updated>2015-04-20T16:58:15.000Z</updated>
    <content type="html"><![CDATA[<p>I’ve used a variety of build tools through my career, from <code>make</code> to <code>ant</code> to <code>maven/maven2</code> to <code>gradle</code>, through <code>rake</code> and now <code>grunt</code> and <code>gulp</code>. People tend to be zealots about their particular tool of choice. I’m a lot less fussed. I value simplicity over almost everything else. I don’t value typing less at all - if a framework makes me type 30 more characters but it’s easier to understand what’s going on then it wins for me. I also value ability to do what I need now (or know I’ll need in the future) over what I may at some point in a distant future possibly value and want. </p>
<a id="more"></a>
<h1 id="Development_“Requirements”">Development “Requirements”</h1><p>I want my build system to do just a few things, but to do them well and simply.</p>
<ul>
<li>I want the system to manage dependencies - track them, download them and inject them. For front-end development this effectively means I want it to play nicely with bower </li>
<li>The system needs to support live reloading. If I save a file, I don’t want to have to go through a full stop-compile-restart cycle every time.</li>
<li>The system should process intermediate files - so convert from less/stylus/sass as needed</li>
<li>While developing, run basic a lint tool like jshint to help me not screw up</li>
</ul>
<p>There are additional tasks I’ll need to handle testing and deployment but those can come later. </p>
<h1 id="Install_Gulp">Install Gulp</h1><p>If you don’t have Gulp installed globally, install using npm.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/dev/cwrky$ sudo npm install -g gulp</span><br></pre></td></tr></table></figure>
<p>Run npm init to create local <code>package.json</code> file:</p>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/dev/cwrky$ npm init</span><br><span class="line">This utility will walk you through creating <span class="operator">a</span> package.json <span class="built_in">file</span>.</span><br><span class="line">It only covers <span class="operator">the</span> most common <span class="keyword">items</span>, <span class="operator">and</span> tries <span class="built_in">to</span> guess sane defaults.</span><br><span class="line"></span><br><span class="line">See `npm help json` <span class="keyword">for</span> definitive documentation <span class="command"><span class="keyword">on</span> <span class="title">these</span> <span class="title">fields</span></span></span><br><span class="line"><span class="operator">and</span> exactly what they <span class="built_in">do</span>.</span><br><span class="line"></span><br><span class="line">Use `npm install &lt;pkg&gt; <span class="comment">--save` afterwards to install a package and</span></span><br><span class="line">save <span class="keyword">it</span> <span class="keyword">as</span> <span class="operator">a</span> dependency <span class="operator">in</span> <span class="operator">the</span> package.json <span class="built_in">file</span>.</span><br><span class="line"></span><br><span class="line">Press ^C <span class="keyword">at</span> <span class="keyword">any</span> <span class="built_in">time</span> <span class="built_in">to</span> quit.</span><br><span class="line">name: (cwrky) </span><br><span class="line"><span class="built_in">version</span>: (<span class="number">1.0</span>.0) </span><br><span class="line">description: </span><br><span class="line">entry point: (index.js) </span><br><span class="line">test <span class="command"><span class="keyword">command</span>: </span></span><br><span class="line">git repository: (<span class="keyword">https</span>://github.com/akshayrangnekar/cwrky.git) </span><br><span class="line">keywords: </span><br><span class="line">author: </span><br><span class="line">license: (ISC) </span><br><span class="line">About <span class="built_in">to</span> <span class="built_in">write</span> <span class="built_in">to</span> /Users/akshay/Dev/cwrky/package.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"cwrky"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"repository"</span>: &#123;</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"https://github.com/akshayrangnekar/cwrky.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="string">"bugs"</span>: &#123;</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"https://github.com/akshayrangnekar/cwrky/issues"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"homepage"</span>: <span class="string">"https://github.com/akshayrangnekar/cwrky"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Is this ok? (yes) yes</span><br></pre></td></tr></table></figure>
<p>Install gulp locally<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/dev/cwrky</span><span class="variable">$ </span>npm install --save-dev gulp</span><br><span class="line">npm <span class="constant">WARN</span> package.json cwrky<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> <span class="constant">No</span> description</span><br><span class="line">npm <span class="constant">WARN</span> package.json cwrky<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> <span class="constant">No</span> <span class="constant">README</span> data</span><br><span class="line">gulp<span class="variable">@3</span>.<span class="number">8.11</span> node_modules/gulp</span><br><span class="line">├── pretty-hrtime<span class="variable">@0</span>.<span class="number">2.2</span></span><br><span class="line">├── interpret<span class="variable">@0</span>.<span class="number">3.10</span></span><br><span class="line">├── deprecated<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">1</span></span><br><span class="line">├── archy<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span></span><br><span class="line">├── minimist<span class="variable">@1</span>.<span class="number">1.1</span></span><br><span class="line">├── semver<span class="variable">@4</span>.<span class="number">3.3</span></span><br><span class="line">├── tildify<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> (user-home<span class="variable">@1</span>.<span class="number">1.1</span>)</span><br><span class="line">├── v8flags<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">5</span> (user-home<span class="variable">@1</span>.<span class="number">1.1</span>)</span><br><span class="line">├── orchestrator<span class="variable">@0</span>.<span class="number">3.7</span> (stream-consume<span class="variable">@0</span>.<span class="number">1.0</span>, sequencify<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">7</span>, <span class="keyword">end</span>-of-stream<span class="variable">@0</span>.<span class="number">1.5</span>)</span><br><span class="line">├── chalk<span class="variable">@0</span>.<span class="number">5.1</span> (ansi-styles<span class="variable">@1</span>.<span class="number">1.0</span>, escape-string-regexp<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">3</span>, supports-color<span class="variable">@0</span>.<span class="number">2.0</span>, has-ansi<span class="variable">@0</span>.<span class="number">1.0</span>, strip-ansi<span class="variable">@0</span>.<span class="number">3.0</span>)</span><br><span class="line">├── gulp-util<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">4</span> (array-differ<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, beeper<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, object-assign<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">0</span>, array-uniq<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">2</span>, lodash._reescape<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, lodash._reevaluate<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, lodash._reinterpolate<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, replace-ext<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">1</span>, vinyl<span class="variable">@0</span>.<span class="number">4.6</span>, chalk<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, lodash.template<span class="variable">@3</span>.<span class="number">5.0</span>, through2<span class="variable">@0</span>.<span class="number">6.5</span>, multipipe<span class="variable">@0</span>.<span class="number">1.2</span>, dateformat<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">11</span>)</span><br><span class="line">├── liftoff<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">3</span> (extend<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">0</span>, flagged-respawn<span class="variable">@0</span>.<span class="number">3.1</span>, resolve<span class="variable">@1</span>.<span class="number">1.6</span>, findup-sync<span class="variable">@0</span>.<span class="number">2.1</span>)</span><br><span class="line">└── vinyl-fs<span class="variable">@0</span>.<span class="number">3.13</span> (graceful-fs<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">6</span>, mkdirp<span class="variable">@0</span>.<span class="number">5.0</span>, defaults<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">2</span>, vinyl<span class="variable">@0</span>.<span class="number">4.6</span>, strip-bom<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, through2<span class="variable">@0</span>.<span class="number">6.5</span>, glob-stream<span class="variable">@3</span>.<span class="number">1.18</span>, glob-watcher<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">6</span>)</span><br><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/dev/cwrky</span>$</span><br></pre></td></tr></table></figure></p>
<h1 id="Prepare_directory_structure">Prepare directory structure</h1><p>Create initial directory structure<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/dev/cwrky$ mkdir -<span class="tag">p</span> src/scripts</span><br><span class="line">mbp:~/dev/cwrky$ mkdir -<span class="tag">p</span> src/styl</span><br><span class="line">mbp:~/dev/cwrky$ mkdir -<span class="tag">p</span> src/<span class="tag">html</span></span><br><span class="line">mbp:~/dev/cwrky$ mkdir -<span class="tag">p</span> src/vendor</span><br></pre></td></tr></table></figure></p>
<p>I keep each component separated while developing - this makes it easier to open specific folders in the best appropriate tool without them thinking that they should handle others. So for example I can easily use Coda for HTML, Sublime Text for Javascripts and TextMate for Stylus if I want. I also create a vendor directory - this will include HTML, CSS and Javascript. The reason for this is that I often use templates as a starting point. I want to keep them isolated, and in a place I don’t touch those files at all. It makes it easy to upgrade them in the future. </p>
<h1 id="Wire_up_stylus">Wire up stylus</h1><p>Create a very basic Stylus file like this, in <code>src/styl</code></p>

<p>Install gulp-stylus<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mbp:~<span class="regexp">/dev/cwrky</span>$ npm install --save-dev gulp-stylus</span><br><span class="line">npm WARN <span class="keyword">package</span>.json cwrky<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> No description</span><br><span class="line">npm WARN <span class="keyword">package</span>.json cwrky<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> No README data</span><br><span class="line">gulp-stylus<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">1</span> node_modules/gulp-stylus</span><br><span class="line">├── replace-ext<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">1</span></span><br><span class="line">├── vinyl-sourcemaps-apply<span class="variable">@0</span>.<span class="number">1.4</span> (source-<span class="keyword">map</span><span class="variable">@0</span>.<span class="number">1.43</span>)</span><br><span class="line">├── through2<span class="variable">@0</span>.<span class="number">6.5</span> (xtend<span class="variable">@4</span>.<span class="number">0</span>.<span class="number">0</span>, readable-stream<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">33</span>)</span><br><span class="line">├── gulp-util<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">4</span> (array-differ<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, beeper<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, object-assign<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">0</span>, array-uniq<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">2</span>, lodash._reescape<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, lodash._reinterpolate<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, lodash._reevaluate<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, minimist<span class="variable">@1</span>.<span class="number">1.1</span>, vinyl<span class="variable">@0</span>.<span class="number">4.6</span>, chalk<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, lodash.template<span class="variable">@3</span>.<span class="number">5.0</span>, dateformat<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">11</span>, multipipe<span class="variable">@0</span>.<span class="number">1.2</span>)</span><br><span class="line">├── stylus<span class="variable">@0</span>.<span class="number">50.0</span> (css-parse<span class="variable">@1</span>.<span class="number">7.0</span>, mkdirp<span class="variable">@0</span>.<span class="number">3.5</span>, debug<span class="variable">@2</span>.<span class="number">1.3</span>, source-<span class="keyword">map</span><span class="variable">@0</span>.<span class="number">1.43</span>, <span class="keyword">glob</span><span class="variable">@3</span>.<span class="number">2.11</span>, sax<span class="variable">@0</span>.<span class="number">5.8</span>)</span><br><span class="line">├── accord<span class="variable">@0</span>.<span class="number">15.2</span> (indx<span class="variable">@0</span>.<span class="number">2.3</span>, convert-source-<span class="keyword">map</span><span class="variable">@0</span>.<span class="number">4.1</span>, fobject<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">3</span>, <span class="keyword">when</span><span class="variable">@3</span>.<span class="number">7.2</span>, resolve<span class="variable">@1</span>.<span class="number">1.6</span>, <span class="keyword">glob</span><span class="variable">@4</span>.<span class="number">5.3</span>, uglify-js<span class="variable">@2</span>.<span class="number">4.20</span>)</span><br><span class="line">└── lodash<span class="variable">@3</span>.<span class="number">7.0</span></span><br></pre></td></tr></table></figure></p>
<p>Define a very basic <code>styl</code> task in <code>gulpfile.js</code><br><figure class="highlight js"><figcaption><span>gulpfile.js</span><a href="/downloads/code/gulp/01/gulpfile.js">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Include gulp</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> stylus = <span class="built_in">require</span>(<span class="string">'gulp-stylus'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'styl'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/styl/main.styl'</span>)</span><br><span class="line">    .pipe(stylus())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'app/css'</span>))</span><br><span class="line">});</span><br></pre></td></tr></table></figure></p>
<p>To combine multiple inputs, install and wire up gulp-concat<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mbp:~<span class="regexp">/dev/cwrky</span>$ npm install --save-dev gulp-concat</span><br><span class="line">npm WARN <span class="keyword">package</span>.json cwrky<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> No description</span><br><span class="line">npm WARN <span class="keyword">package</span>.json cwrky<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span> No README data</span><br><span class="line">gulp-concat<span class="variable">@2</span>.<span class="number">5.2</span> node_modules/gulp-concat</span><br><span class="line">├── through2<span class="variable">@0</span>.<span class="number">6.5</span> (xtend<span class="variable">@4</span>.<span class="number">0</span>.<span class="number">0</span>, readable-stream<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">33</span>)</span><br><span class="line">├── gulp-util<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">4</span> (array-differ<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, beeper<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, object-assign<span class="variable">@2</span>.<span class="number">0</span>.<span class="number">0</span>, array-uniq<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">2</span>, lodash._reinterpolate<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, lodash._reescape<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, lodash._reevaluate<span class="variable">@3</span>.<span class="number">0</span>.<span class="number">0</span>, replace-ext<span class="variable">@0</span>.<span class="number">0</span>.<span class="number">1</span>, minimist<span class="variable">@1</span>.<span class="number">1.1</span>, vinyl<span class="variable">@0</span>.<span class="number">4.6</span>, chalk<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">0</span>, lodash.template<span class="variable">@3</span>.<span class="number">5.0</span>, multipipe<span class="variable">@0</span>.<span class="number">1.2</span>, dateformat<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">11</span>)</span><br><span class="line">└── concat-with-sourcemaps<span class="variable">@1</span>.<span class="number">0</span>.<span class="number">2</span> (source-<span class="keyword">map</span><span class="variable">@0</span>.<span class="number">4.2</span>)</span><br></pre></td></tr></table></figure></p>
<p>In the gulpfile:<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var concat = require(<span class="symbol">'gulp</span>-concat');</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="symbol">'styls'</span>, <span class="keyword">function</span><span class="literal">()</span> &#123;</span><br><span class="line">  return gulp.src(<span class="symbol">'src</span>/styl/**/*.styl')</span><br><span class="line">    .pipe(stylus<span class="literal">()</span>)</span><br><span class="line">    .pipe(concat(<span class="symbol">'combined</span>.css'))</span><br><span class="line">    .pipe(gulp.dest(<span class="symbol">'app</span>/css'))</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="Clean_and_HTML">Clean and HTML</h1><p>We need some way to clean our build. Install vanilla node <code>del</code> using <code>npm install --save-dev del</code>, then wire up a clean task. For simplicity, added a simple task to copy html over, and a default task to run both html and styl.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">'del'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> config = &#123;</span><br><span class="line">	appPath: <span class="string">'./app'</span>,</span><br><span class="line">	bowerDir: <span class="string">'./bower_components'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'styl'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/styl/main.styl'</span>)</span><br><span class="line">    .pipe(stylus())</span><br><span class="line">    .pipe(gulp.dest(config.appPath + <span class="string">'/css'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'html'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/html/**/*.html'</span>)</span><br><span class="line">    .pipe(gulp.dest(config.appPath))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(cb)</span> </span>&#123;</span><br><span class="line">  del([</span><br><span class="line">    config.appPath + <span class="string">'/**'</span></span><br><span class="line">  ], cb);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>Now lets make sure our Stylus files are correctly inserted into the HTML: We’ll need <code>gulp-inject</code> for that.</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-inject</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'index'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> target = gulp.src(<span class="string">'src/html/**/*.html'</span>);</span><br><span class="line">  <span class="comment">// It's not necessary to read the files (will speed up things), we're only after their paths:</span></span><br><span class="line">  <span class="keyword">var</span> sources = gulp.src([<span class="string">'./app/**/*.js'</span>, <span class="string">'./app/**/*.css'</span>], &#123;read: <span class="literal">false</span>&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> target.pipe(inject(sources, &#123;ignorePath: <span class="string">'/app'</span>&#125;))</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'./app'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>Put placeholders in our index html file</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>My index<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- inject:css --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- project css files will go here... --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- endinject --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        Hello World!</span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Run <code>gulp index</code> and in the app directory the file becomes:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>My index<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- inject:css --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"/css/main.css"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- endinject --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        Hello World!</span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="External_dependencies_with_Bower">External dependencies with Bower</h1><p>Create bower file to track dependencies (install bower with <code>sudo npm install -g bower</code> if you don’t already have it).</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/dev/cwrky$ bower init</span><br><span class="line">? name: cwrky</span><br><span class="line">? version: <span class="number">0.0</span>.<span class="number">1</span></span><br><span class="line">? description: </span><br><span class="line">? main file: </span><br><span class="line">? what types of modules does this package expose? </span><br><span class="line">? keywords: </span><br><span class="line">? authors: akshayrangnekar</span><br><span class="line">? license: MIT</span><br><span class="line">? homepage: https://github.com/akshayrangnekar/cwrky</span><br><span class="line">? <span class="built_in">set</span> currently installed components as dependencies? Yes</span><br><span class="line">? add commonly ignored files to ignore list? Yes</span><br><span class="line">? would you like to mark this package as private <span class="built_in">which</span> prevents it from being accidentally published to the registry? Yes</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  name: <span class="string">'cwrky'</span>,</span><br><span class="line">  version: <span class="string">'0.0.1'</span>,</span><br><span class="line">  homepage: <span class="string">'https://github.com/akshayrangnekar/cwrky'</span>,</span><br><span class="line">  authors: [</span><br><span class="line">    <span class="string">'akshayrangnekar'</span></span><br><span class="line">  ],</span><br><span class="line">  license: <span class="string">'MIT'</span>,</span><br><span class="line">  ignore: [</span><br><span class="line">    <span class="string">'**/.*'</span>,</span><br><span class="line">    <span class="string">'node_modules'</span>,</span><br><span class="line">    <span class="string">'bower_components'</span>,</span><br><span class="line">    <span class="string">'test'</span>,</span><br><span class="line">    <span class="string">'tests'</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">? Looks good? Yes</span><br></pre></td></tr></table></figure>
<p>Lets install font-awesome using bower</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/dev/cwrky$ bower install fontawesome --save</span><br><span class="line">bower fontawesome<span class="comment">#*             cached git://github.com/FortAwesome/Font-Awesome.git#4.3.0</span></span><br><span class="line">bower fontawesome<span class="comment">#*           validate 4.3.0 against git://github.com/FortAwesome/Font-Awesome.git#*</span></span><br><span class="line">bower fontawesome<span class="comment">#~4.3.0       install fontawesome#4.3.0</span></span><br><span class="line"></span><br><span class="line">fontawesome<span class="comment">#4.3.0 bower_components/fontawesome</span></span><br><span class="line">mbp:~/dev/cwrky$</span><br></pre></td></tr></table></figure>
<p>And bootstrap, which will in turn require jQuery<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/dev/cwrky</span><span class="variable">$ </span>bower install bootstrap --save</span><br></pre></td></tr></table></figure></p>
<p>Run bower from gulp - install <code>gulp-bower</code> then:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bower = <span class="built_in">require</span>(<span class="string">'gulp-bower'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'bower'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> bower()</span><br><span class="line">       .pipe(gulp.dest(config.bowerDir));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>Now we need our bower components injected into the HTML file too. </p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/<span class="built_in">dev</span>/cwrky$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> main-bower-files</span><br></pre></td></tr></table></figure>
<p>And in our build task:<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'build'</span>, [<span class="string">'bower'</span>, <span class="string">'copy:styl'</span>, <span class="string">'copy:html'</span>], function () &#123;</span><br><span class="line">  var <span class="keyword">target</span> = gulp.src(config.appPath + <span class="string">'/index.html'</span>);</span><br><span class="line">  <span class="comment">// It's not necessary to read the files (will speed up things), we're only after their paths:</span></span><br><span class="line">  var sources = gulp.src([config.appPath + <span class="string">'/scripts/**/*.js'</span>, config.appPath + <span class="string">'/css/**/*.css'</span>], &#123;read: <span class="keyword">false</span>&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">target</span>.pipe(inject(sources, &#123;ignorePath: 'app', relative: <span class="keyword">true</span>&#125;))</span><br><span class="line">        .pipe(inject(gulp.src(bowerFiles(), &#123;read: <span class="keyword">false</span>&#125;), &#123;name: 'bower', relative: <span class="keyword">true</span>&#125;))</span><br><span class="line">        .pipe(gulp.dest(config.appPath));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="Scripts">Scripts</h1><p>We need to do the same for the scripts now. Since I’ll be using a lot of angular.js scripts, worth introducing a couple of modules we’ll need for angular now. Install <code>gulp-ng-annotate</code> and <code>gulp-angular-filesort</code>. </p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/<span class="built_in">dev</span>/cwrky$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-ng-annotate</span><br><span class="line">mbp:~/<span class="built_in">dev</span>/cwrky$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-angular-filesort</span><br></pre></td></tr></table></figure>
<p>The first module helps you undo the effects of a shortcut you’ve likely used in angular. If your services for example look like this:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">angular</span><br><span class="line">  .module(<span class="string">'angNewsApp'</span>).factory(<span class="string">'Auth'</span>, <span class="function"><span class="keyword">function</span><span class="params">(<span class="variable">$firebaseAuth</span>, <span class="variable">$firebaseObject</span>, FIREBASE_URL, <span class="variable">$rootScope</span>)</span> </span>&#123;</span><br></pre></td></tr></table></figure>
<p>gulp-ng-annotate will convert it to look like this:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">angular</span><br><span class="line">  .module(<span class="string">'angNewsApp'</span>).factory(<span class="string">'Auth'</span>, [<span class="string">"<span class="variable">$firebaseAuth</span>"</span>, <span class="string">"<span class="variable">$firebaseObject</span>"</span>, <span class="string">"FIREBASE_URL"</span>, <span class="string">"<span class="variable">$rootScope</span>"</span>, </span><br><span class="line">  	<span class="keyword">function</span>(<span class="variable">$firebaseAuth</span>, <span class="variable">$firebaseObject</span>, FIREBASE_URL, <span class="variable">$rootScope</span>) &#123;</span><br></pre></td></tr></table></figure>
<p>This is needed for minification later, as well as for (it appears empirically) for the filesort functionality.</p>
<p>The second module ensures that modules are imported in the correct order. To make it work correctly, don’t use a global for your module (e.g., <code>app</code> - but call <code>angular.module()</code> to acquire it).</p>
<p>Here’s the current gulpfile.js if you’re following along:</p>
<figure class="highlight"><figcaption><span>gulpfile.js.txt</span><a href="/downloads/code/gulp/02/gulpfile.js.txt">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// Include gulp&#10;var gulp = require(&#39;gulp&#39;);&#10;var stylus = require(&#39;gulp-stylus&#39;);&#10;var concat = require(&#39;gulp-concat&#39;);&#10;var inject = require(&#39;gulp-inject&#39;);&#10;var del = require(&#39;del&#39;);&#10;var bowerFiles = require(&#39;main-bower-files&#39;)&#10;    bower = require(&#39;gulp-bower&#39;);&#10;var angularFilesort = require(&#39;gulp-angular-filesort&#39;),&#10;    ngAnnotate = require(&#39;gulp-ng-annotate&#39;);&#10;&#10;&#10;var config = {&#10;&#8232;   appPath: &#39;./app&#39;,&#10;&#8232;   bowerDir: &#39;./bower_components&#39;&#8232;&#10;}&#10;&#10;gulp.task(&#39;copy:styl&#39;, function() {&#10;  return gulp.src(&#39;src/styl/main.styl&#39;)&#10;    .pipe(stylus())&#10;    .pipe(gulp.dest(config.appPath + &#39;/css&#39;))&#10;});&#10;&#10;gulp.task(&#39;copy:html&#39;, function() {&#10;  return gulp.src(&#39;src/html/**/*.html&#39;)&#10;    .pipe(gulp.dest(config.appPath))&#10;});&#10;&#10;gulp.task(&#39;copy:scripts&#39;, function() {&#10;  return gulp.src(&#39;src/scripts/**/*.js&#39;)&#10;    .pipe(ngAnnotate())&#10;    .pipe(gulp.dest(config.appPath + &#39;/scripts&#39;))&#10;});&#10;&#10;gulp.task(&#39;copy:bower&#39;, [&#39;bower&#39;], function() {&#10;  return gulp.src(config.bowerDir + &#39;/**/*.*&#39;)&#10;    .pipe(gulp.dest(config.appPath + &#39;/bower_components&#39;))&#10;});&#10;&#10;gulp.task(&#39;bower&#39;, function() {&#10;    return bower()&#10;&#8232;       .pipe(gulp.dest(config.bowerDir))&#8232;;&#10;});&#10;&#10;gulp.task(&#39;clean&#39;, function (cb) {&#10;  del([&#10;    config.appPath + &#39;/**&#39;&#10;  ], cb);&#10;});&#10;&#10;gulp.task(&#39;build&#39;, [&#39;copy:bower&#39;, &#39;copy:scripts&#39;, &#39;copy:styl&#39;, &#39;copy:html&#39;], function () {&#10;  var target = gulp.src(config.appPath + &#39;/index.html&#39;);&#10;  // It&#39;s not necessary to read the files (will speed up things), we&#39;re only after their paths:&#10;  var sources = gulp.src([config.appPath + &#39;/css/**/*.css&#39;], {read: false});&#10;&#10;  return target.pipe(inject(sources, {ignorePath: &#39;app&#39;, relative: true}))&#10;        .pipe(inject(gulp.src(bowerFiles(), {read: false}), {name: &#39;bower&#39;}))&#10;        .pipe(inject(gulp.src(config.appPath + &#39;/scripts/**/*.js&#39;) // gulp-angular-filesort depends on file contents, so don&#39;t use {read: false} here&#10;            .pipe(angularFilesort())))&#10;        .pipe(gulp.dest(config.appPath));&#10;});&#10;&#10;gulp.task(&#39;default&#39;, [&#39;build&#39;]);</span><br></pre></td></tr></table></figure>
<h1 id="JSHint">JSHint</h1><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/<span class="built_in">dev</span>/cwrky$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-jshint</span><br><span class="line">mbp:~/<span class="built_in">dev</span>/cwrky$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> jshint-stylish</span><br></pre></td></tr></table></figure>
<p>Create new lint task and make it a dependency for copying JS<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jshint = <span class="built_in">require</span>(<span class="string">'gulp-jshint'</span>);</span><br><span class="line"><span class="keyword">var</span> stylish = <span class="built_in">require</span>(<span class="string">'jshint-stylish'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'lint:js'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/scripts/**/*.js'</span>)</span><br><span class="line">    .pipe(jshint())</span><br><span class="line">    .pipe(jshint.reporter(stylish));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'copy:scripts'</span>, [<span class="string">'lint:js'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/scripts/**/*.js'</span>)</span><br><span class="line">    .pipe(ngAnnotate())</span><br><span class="line">    .pipe(gulp.dest(config.appPath + <span class="string">'/scripts'</span>))</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h1 id="Watch_for_changes">Watch for changes</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gulp.task(<span class="string">'watch'</span>, [<span class="string">'build'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    gulp.watch(<span class="string">'src/**/*.*'</span>, [<span class="string">'build'</span>]);</span><br><span class="line">    gulp.watch(config.bowerDir, [<span class="string">'build'</span>]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="Server">Server</h1><p>Install live reload functionality</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/<span class="built_in">dev</span>/cwrky$ npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-server-livereload</span><br></pre></td></tr></table></figure>
<p>Wrap up the gulpfile:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Include gulp</span></span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> stylus = <span class="built_in">require</span>(<span class="string">'gulp-stylus'</span>);</span><br><span class="line"><span class="keyword">var</span> concat = <span class="built_in">require</span>(<span class="string">'gulp-concat'</span>);</span><br><span class="line"><span class="keyword">var</span> inject = <span class="built_in">require</span>(<span class="string">'gulp-inject'</span>);</span><br><span class="line"><span class="keyword">var</span> del = <span class="built_in">require</span>(<span class="string">'del'</span>);</span><br><span class="line"><span class="keyword">var</span> bowerFiles = <span class="built_in">require</span>(<span class="string">'main-bower-files'</span>)</span><br><span class="line">    bower = <span class="built_in">require</span>(<span class="string">'gulp-bower'</span>);</span><br><span class="line"><span class="keyword">var</span> angularFilesort = <span class="built_in">require</span>(<span class="string">'gulp-angular-filesort'</span>),</span><br><span class="line">    ngAnnotate = <span class="built_in">require</span>(<span class="string">'gulp-ng-annotate'</span>);</span><br><span class="line"><span class="keyword">var</span> jshint = <span class="built_in">require</span>(<span class="string">'gulp-jshint'</span>);</span><br><span class="line"><span class="keyword">var</span> stylish = <span class="built_in">require</span>(<span class="string">'jshint-stylish'</span>);</span><br><span class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">'gulp-server-livereload'</span>);</span><br><span class="line"><span class="keyword">var</span> changed = <span class="built_in">require</span>(<span class="string">'gulp-changed'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> config = &#123;</span><br><span class="line">   appPath: <span class="string">'./app'</span>,</span><br><span class="line">   bowerDir: <span class="string">'./bower_components'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'copy:styl'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/styl/main.styl'</span>)</span><br><span class="line">    .pipe(stylus())</span><br><span class="line">    .pipe(gulp.dest(config.appPath + <span class="string">'/css'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'copy:html'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/html/**/*.html'</span>)</span><br><span class="line">    .pipe(gulp.dest(config.appPath))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'copy:scripts'</span>, [<span class="string">'lint:js'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/scripts/**/*.js'</span>)</span><br><span class="line">    .pipe(ngAnnotate())</span><br><span class="line">    .pipe(gulp.dest(config.appPath + <span class="string">'/scripts'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'copy:bower'</span>, [<span class="string">'bower'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(config.bowerDir + <span class="string">'/**/*.*'</span>)</span><br><span class="line">    .pipe(gulp.dest(config.appPath + <span class="string">'/bower_components'</span>))</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'lint:js'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src(<span class="string">'src/scripts/**/*.js'</span>)</span><br><span class="line">    .pipe(jshint())</span><br><span class="line">    .pipe(jshint.reporter(stylish));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'bower'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> bower()</span><br><span class="line">       .pipe(gulp.dest(config.bowerDir));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'clean'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(cb)</span> </span>&#123;</span><br><span class="line">  del([</span><br><span class="line">    config.appPath + <span class="string">'/**'</span></span><br><span class="line">  ], cb);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, [<span class="string">'build'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    gulp.watch(<span class="string">'src/**/*.*'</span>, [<span class="string">'build'</span>]);</span><br><span class="line">    gulp.watch(config.bowerDir, [<span class="string">'build'</span>]);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'server'</span>, [<span class="string">'build'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    gulp.watch(<span class="string">'src/**/*.*'</span>, [<span class="string">'build'</span>]);</span><br><span class="line">    gulp.watch(config.bowerDir, [<span class="string">'build'</span>]);</span><br><span class="line">    gulp.src(<span class="string">'app/'</span>, &#123; base: <span class="string">'app'</span> &#125;)</span><br><span class="line">        .pipe(server(&#123;</span><br><span class="line">            livereload: <span class="literal">true</span>,</span><br><span class="line">            directoryListing: <span class="literal">false</span>,</span><br><span class="line">            open: <span class="literal">true</span></span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'build'</span>, [<span class="string">'copy:bower'</span>, <span class="string">'copy:scripts'</span>, <span class="string">'copy:styl'</span>, <span class="string">'copy:html'</span>], <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> target = gulp.src(config.appPath + <span class="string">'/index.html'</span>);</span><br><span class="line">  <span class="comment">// It's not necessary to read the files (will speed up things), we're only after their paths:</span></span><br><span class="line">  <span class="keyword">var</span> sources = gulp.src([config.appPath + <span class="string">'/css/**/*.css'</span>], &#123;read: <span class="literal">false</span>&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> target.pipe(inject(sources, &#123;ignorePath: <span class="string">'app'</span>, relative: <span class="literal">true</span>&#125;))</span><br><span class="line">        .pipe(inject(gulp.src(bowerFiles(), &#123;read: <span class="literal">false</span>&#125;), &#123;name: <span class="string">'bower'</span>&#125;))</span><br><span class="line">        .pipe(inject(gulp.src(config.appPath + <span class="string">'/scripts/**/*.js'</span>) <span class="comment">// gulp-angular-filesort depends on file contents, so don't use &#123;read: false&#125; here</span></span><br><span class="line">            .pipe(angularFilesort()), &#123;ignorePath: <span class="string">'app'</span>, relative: <span class="literal">true</span>&#125;))</span><br><span class="line">        .pipe(gulp.dest(config.appPath));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'build'</span>]);</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>I’ve used a variety of build tools through my career, from <code>make</code> to <code>ant</code> to <code>maven/maven2</code> to <code>gradle</code>, through <code>rake</code> and now <code>grunt</code> and <code>gulp</code>. People tend to be zealots about their particular tool of choice. I’m a lot less fussed. I value simplicity over almost everything else. I don’t value typing less at all - if a framework makes me type 30 more characters but it’s easier to understand what’s going on then it wins for me. I also value ability to do what I need now (or know I’ll need in the future) over what I may at some point in a distant future possibly value and want. </p>]]>
    
    </summary>
    
      <category term="bower" scheme="http://akshayrangnekar.github.io/tags/bower/"/>
    
      <category term="gulp" scheme="http://akshayrangnekar.github.io/tags/gulp/"/>
    
      <category term="Full Stack" scheme="http://akshayrangnekar.github.io/categories/Full-Stack/"/>
    
      <category term="Gulp" scheme="http://akshayrangnekar.github.io/categories/Full-Stack/Gulp/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Moving to Hexo]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2015/04/19/moving-to-hexo/"/>
    <id>http://akshayrangnekar.github.io//blog/2015/04/19/moving-to-hexo/</id>
    <published>2015-04-19T07:55:57.000Z</published>
    <updated>2015-04-19T08:50:12.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Hexo">Hexo</h2><p>I’ve moved these pages to Hexo. Found it a lot more simple and easy to tweak than Octopress, for the same reason that I find Javascript/Node much easier to work with than Ruby. Old posts moved over incredibly easily.</p>
<h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Hexo">Hexo</h2><p>I’ve moved these pages to Hexo. Found it a lot more simple and easy to tweak than Octopress, for the same reason t]]>
    </summary>
    
      <category term="Hexo" scheme="http://akshayrangnekar.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Up and running on AppEngine with Maven, Jersey and Guice - Part 5]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/"/>
    <id>http://akshayrangnekar.github.io//blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/</id>
    <published>2014-03-18T18:23:59.000Z</published>
    <updated>2015-04-19T08:21:19.000Z</updated>
    <content type="html"><![CDATA[<p>This is part five of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> was around getting Jersey set up with JSON and Freemarker. This part works through getting Persistence working with JPA.<br><a id="more"></a></p>
<h2 id="Working_with_the_Datastore">Working with the Datastore</h2><p>The final part of this tutorial is getting data saved and retrieved from the AppEngine Datastore. There are a number of options for tools to help you do this including the Java Persistence API (JPA), Java Data Objects (JDO), Objectify or the Datastore’s Low-level API. For reasons of familiarity I’ve chosen to proceed with JPA. There are many discussions out there as to the best option, but the short summary is that it really is dependent on your application and application needs. This was again a fairly complex task to get right, and a big thank you to the author of <a href="http://www.loop81.com/2013/02/gae-google-app-engine-jpa2-maven-and.html" target="_blank" rel="external">this piece</a> which put me in the right direction. </p>
<p>To get started with JPA the first thing we need is a big bunch of dependencies.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.datanucleus<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>datanucleus-api-jpa<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>$&#123;datanucleus.jpa.version&#125;<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.datanucleus<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>datanucleus-core<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>$&#123;datanucleus.jpa.version&#125;<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine.orm<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>datanucleus-appengine<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.datanucleus<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>datanucleus-enhancer<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">exclusion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>javax.jdo<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jdo-api<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.0.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.geronimo.specs<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>geronimo-jpa_2.0_spec<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>5.1.0.Final<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>The one thing to note is note is that from the AppEngine ORM package, we’re excluding the built-in datanucleus enhancer. This is what takes your <code>@Entity</code> annotated classes and adds to them to make them databaseable. Instead we’re going to use the <code>maven-datanucleus-plugin</code> to do the enhancement.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.datanucleus<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-datanucleus-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>$&#123;datanucleus.jpa.version&#125;<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">api</span>&gt;</span>JPA<span class="tag">&lt;/<span class="title">api</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">mappingIncludes</span>&gt;</span>**/entities/*.class<span class="tag">&lt;/<span class="title">mappingIncludes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="title">verbose</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.datanucleus<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>datanucleus-core<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">version</span>&gt;</span>$&#123;datanucleus.jpa.version&#125;<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">executions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">execution</span>&gt;</span>   </span><br><span class="line">      <span class="tag">&lt;<span class="title">phase</span>&gt;</span>compile<span class="tag">&lt;/<span class="title">phase</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">goals</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">goal</span>&gt;</span>enhance<span class="tag">&lt;/<span class="title">goal</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">goals</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">execution</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>If you’re working with Eclipse and the m2eclipse plugin, this will work from the command line, but not eclipse. To proceed in Eclipse, configure the m2e plugin to allow execution of the datanucleus plugin.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.eclipse.m2e<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>lifecycle-mapping<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">lifecycleMappingMetadata</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">pluginExecutions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">pluginExecution</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;<span class="title">pluginExecutionFilter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.datanucleus<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-datanucleus-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">versionRange</span>&gt;</span>$&#123;datanucleus.jpa.version&#125;<span class="tag">&lt;/<span class="title">versionRange</span>&gt;</span></span><br><span class="line">              </span><br><span class="line">                <span class="tag">&lt;<span class="title">goals</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="title">goal</span>&gt;</span>enhance<span class="tag">&lt;/<span class="title">goal</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">goals</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="title">pluginExecutionFilter</span>&gt;</span></span><br><span class="line"></span><br><span class="line">              <span class="tag">&lt;<span class="title">action</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">execute</span> &gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="title">runOnIncremental</span>&gt;</span>false<span class="tag">&lt;/<span class="title">runOnIncremental</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="title">execute</span> &gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="title">action</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">pluginExecution</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="title">pluginExecutions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">lifecycleMappingMetadata</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">pluginManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Now if you run the <code>compile</code> goal, you should see log messages indicating that DataNucleus has run. Some of these may appear a little scary, since the logging levels from DataNucleus leave a little to be desired, but look for the message <code>DataNucleus Enhancer completed with success</code> and you should be good.</p>
<p>Now, let’s actually give DataNucleus something to do. Here’s my incredibly simple test entity. </p>
<figure class="highlight java"><figcaption><span>SimpleTestEntity.java</span><a href="/downloads/code/5/SimpleTestEntity.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.entities;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> javax.persistence.GenerationType.IDENTITY;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> javax.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleTestEntity</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Id</span></span><br><span class="line">    <span class="annotation">@GeneratedValue</span>(strategy = IDENTITY)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Date creationDate = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SimpleTestEntity</span><span class="params">()</span> </span>{</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> id;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>{</span><br><span class="line">		<span class="keyword">this</span>.id = id;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>{</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">getCreationDate</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> creationDate;</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Let’s create a new couple of methods in the Resource to exercise this entity - one to create it, and one to retrieve it from the datastore.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@GET</span></span><br><span class="line"><span class="annotation">@Produces</span>(MediaType.TEXT_HTML)</span><br><span class="line"><span class="annotation">@Path</span>(<span class="string">"/persist"</span>)</span><br><span class="line"><span class="annotation">@Template</span>(name=<span class="string">"/foo.ftl"</span>)</span><br><span class="line"><span class="keyword">public</span> Map&lt;String, Object&gt; persist(<span class="annotation">@QueryParam</span>(<span class="string">"name"</span>) String name, <span class="annotation">@QueryParam</span>(<span class="string">"message"</span>) String message) &#123;</span><br><span class="line">	Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">	map.put(<span class="string">"foo"</span>, name);</span><br><span class="line">	map.put(<span class="string">"bar"</span>, message);</span><br><span class="line">	SimpleTestEntity ste = <span class="keyword">new</span> SimpleTestEntity();</span><br><span class="line">	ste.setName(name);</span><br><span class="line">	</span><br><span class="line">    EntityManagerFactory factory = Persistence.createEntityManagerFactory(<span class="string">"transactions-optional"</span>);</span><br><span class="line">    EntityManager entityManager = factory.createEntityManager();</span><br><span class="line">    entityManager.getTransaction().begin();</span><br><span class="line">    entityManager.persist(ste);</span><br><span class="line">    entityManager.getTransaction().commit();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@GET</span></span><br><span class="line"><span class="annotation">@Produces</span>(MediaType.TEXT_HTML)</span><br><span class="line"><span class="annotation">@Path</span>(<span class="string">"/retrieve"</span>)</span><br><span class="line"><span class="annotation">@Template</span>(name=<span class="string">"/foo.ftl"</span>)</span><br><span class="line"><span class="keyword">public</span> Map&lt;String, Object&gt; retrieve() &#123;</span><br><span class="line">	Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">	</span><br><span class="line">    EntityManagerFactory factory = Persistence.createEntityManagerFactory(<span class="string">"transactions-optional"</span>);</span><br><span class="line">    EntityManager entityManager = factory.createEntityManager();</span><br><span class="line">    entityManager.getTransaction().begin();</span><br><span class="line">    Query q = entityManager.createQuery(<span class="string">"select t from "</span> + SimpleTestEntity.class.getSimpleName() + <span class="string">" t"</span>);</span><br><span class="line">    List&lt;?&gt; list = q.getResultList();</span><br><span class="line">    map.put(<span class="string">"foo"</span>, <span class="string">"Number of Entries"</span>);</span><br><span class="line">    map.put(<span class="string">"bar"</span>, <span class="string">"The number of database entries is: "</span> + list.size());</span><br><span class="line">    </span><br><span class="line">    entityManager.getTransaction().commit();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Before everything will work nicely, we also need to create a <code>persistence.xml</code> file. This file goes in your <code>src/main/resources</code> directory, in a subdirectory named <code>META-INF</code>.<br><figure class="highlight xml"><figcaption><span>persistence.xml</span><a href="/downloads/code/5/persistence.xml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">persistence</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/persistence"</span></span><br><span class="line">             <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">             <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/persistence</span><br><span class="line">        http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"</span> <span class="attribute">version</span>=<span class="value">"1.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">persistence-unit</span> <span class="attribute">name</span>=<span class="value">"transactions-optional"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">provider</span>&gt;</span>org.datanucleus.api.jpa.PersistenceProviderImpl<span class="tag">&lt;/<span class="title">provider</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">class</span>&gt;</span>com.listerly.entities.SimpleTestEntity<span class="tag">&lt;/<span class="title">class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">exclude-unlisted-classes</span>&gt;</span>true<span class="tag">&lt;/<span class="title">exclude-unlisted-classes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">properties</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"javax.persistence.query.timeout"</span> <span class="attribute">value</span>=<span class="value">"5000"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"datanucleus.appengine.datastoreReadConsistency"</span> <span class="attribute">value</span>=<span class="value">"STRONG"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"datanucleus.appengine.datastoreEnableXGTransactions"</span> <span class="attribute">value</span>=<span class="value">"true"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"datanucleus.datastoreWriteTimeout"</span> <span class="attribute">value</span>=<span class="value">"5000"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"datanucleus.NontransactionalRead"</span> <span class="attribute">value</span>=<span class="value">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"datanucleus.NontransactionalWrite"</span> <span class="attribute">value</span>=<span class="value">"false"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"datanucleus.ConnectionURL"</span> <span class="attribute">value</span>=<span class="value">"appengine"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">persistence-unit</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">persistence</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Now if we run the <code>/Hey/persist</code> method a couple of times, we should be adding entities to our datastore:</p>
<img src="/images/postimages/5/persist.png">    
<p>And to be sure, load the <code>/Hey/retrieve</code> URL every few times and make sure you get the expected number:</p>
<img src="/images/postimages/5/retrieveNumber.png">
<p>Deploy to appengine using <code>mvn appengine:update</code> and make sure that everything works the same with the real datastore.</p>
<p>That should all be good. Now lets use the built in datastore viewer to make sure that our objects look right. For the real datastore you can visit <code>appengine.google.com</code> and click “Datastore Viewer” from the left hand navigation bar. For the devserver, you should be able to visit <code>http://localhost:8080/_ah/admin/</code> to do the same thing. Unfortunately, if you try it now you’ll get a 404 when you try to access it. The reason? Jersey thinks it should know how to respond to that URL, and it doesn’t. This is only a problem on the devserver, but it’s something that we should fix anyway. Let’s tell Jersey that it isn’t responsible for URLs that start with <code>/_ah</code>.</p>
<p>First we create our own Filter, that subclasses the Jersey filter (unfortunately named <code>ServletContainer</code> because it can be used in multiple ways):</p>
<figure class="highlight java"><figcaption><span>JerseyFilter.java</span><a href="/downloads/code/5/JerseyFilter.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.config.jersey;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.glassfish.jersey.servlet.ServletContainer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="javadoc">/**</span><br><span class="line"> * Used to filter out GAE reserved URLs</span><br><span class="line"> * See: https://developers.google.com/appengine/docs/java/config/appconfig</span><br><span class="line"> */</span></span><br><span class="line"><span class="annotation">@SuppressWarnings</span>(<span class="string">"serial"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JerseyFilter</span> <span class="keyword">extends</span> <span class="title">ServletContainer</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(HttpServletRequest req, HttpServletResponse res, FilterChain chain)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException, ServletException </span>{</span><br><span class="line"></span><br><span class="line">        String path = req.getServletPath();</span><br><span class="line">        <span class="keyword">if</span> (path.startsWith(<span class="string">"/_ah/"</span>) || path.equals(<span class="string">"/form"</span>)) {</span><br><span class="line">            chain.doFilter(req, res);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">super</span>.doFilter(req, res, chain);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Then in our <code>web.xml</code> we use our new class as the <code>filter-class</code> instead of <code>ServletContainer</code>.</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>com.listerly.config.jersey.JerseyFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Now load up the two datastore viewers and everything should look as you wanted.</p>
<img src="/images/postimages/5/datastoreViewerLocal.png">    
<img src="/images/postimages/5/datastoreViewerAppengine.png">    
<h2 id="Making_JPA_easy">Making  JPA easy</h2><p>Part 5B of this guide was going to be around making JPA easier to use - showing how to create abstract DAOs and concrete implementations for your persistent objects; showing how to make the EntityManager injectable; showing how you could use a filter to start and commit the transaction. However after trying a couple of different approaches out, it became clear that everyone is going to want something slightly different here. That my approach is pretty much guaranteed not to be your approach. So instead, I’ve decided to stop the tutorial here.</p>
<h2 id="Final_words">Final words</h2><p>The final source code for this tutorial is available from github here <a href="https://github.com/akshayrangnekar/gaemavenjerseyguice" target="_blank" rel="external">https://github.com/akshayrangnekar/gaemavenjerseyguice</a> - please drop me a line on twitter (@akshayr) if you run into any problems, or find something that I’ve done wrong. </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This is part five of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> was around getting Jersey set up with JSON and Freemarker. This part works through getting Persistence working with JPA.<br>]]>
    
    </summary>
    
      <category term="AppEngine" scheme="http://akshayrangnekar.github.io/tags/AppEngine/"/>
    
      <category term="JPA" scheme="http://akshayrangnekar.github.io/tags/JPA/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Up and running on AppEngine with Maven, Jersey and Guice - Part 4]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/"/>
    <id>http://akshayrangnekar.github.io//blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/</id>
    <published>2014-03-18T15:42:52.000Z</published>
    <updated>2015-04-19T08:21:23.000Z</updated>
    <content type="html"><![CDATA[<p>This is part four of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> got us working with Jersey and Guice. Part 4 will make Jersey more useful by adding JSON and freemarker templates.<br><a id="more"></a><br>While our Jersey POJOs are nicely returning String messages at the moment, that’s really not particularly useful in the real world. Most apps that I build are going to return one of three things - static files (which are already easily handled), HTML, or JSON. For HTML, I’ve chosen to use Freemarker templates, which Jersey supports JSON as long as you give it serialization libraries.</p>
<h2 id="Getting_JSON_working">Getting JSON working</h2><p>Getting JSON working is actually fairly simple. First, lets make sure that we’re importing the Jackson library which works has a JAXRS provider that Jersey uses:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.fasterxml.jackson.jaxrs<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jackson-jaxrs-json-provider<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Then, we simply create a new method in our Resource:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@GET</span></span><br><span class="line"><span class="annotation">@Produces</span>(MediaType.APPLICATION_JSON)</span><br><span class="line"><span class="annotation">@Path</span>(<span class="string">"/json"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">json</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	SimpleReturnObject ret = <span class="keyword">new</span> SimpleReturnObject();</span><br><span class="line">	</span><br><span class="line">	ret.setFruit(<span class="string">"Apple"</span>);</span><br><span class="line">	ret.setHome(<span class="string">"Hong Kong"</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>The <code>@Produces</code> annotation is enough to tell Jersey to use Jackson to serialize the data. We can then return any Object and the JSON representation will be sent down. Here’s my very simple return object:<br><figure class="highlight java"><figcaption><span>SimpleReturnObject.java</span><a href="/downloads/code/4/SimpleReturnObject.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.api;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimpleReturnObject</span> </span>{</span><br><span class="line">	<span class="keyword">private</span> String fruit;</span><br><span class="line">	<span class="keyword">private</span> String home;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getFruit</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> fruit;</span><br><span class="line">	}</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFruit</span><span class="params">(String fruit)</span> </span>{</span><br><span class="line">		<span class="keyword">this</span>.fruit = fruit;</span><br><span class="line">	}</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getHome</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> home;</span><br><span class="line">	}</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHome</span><span class="params">(String home)</span> </span>{</span><br><span class="line">		<span class="keyword">this</span>.home = home;</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>When we access the <code>/Hey/json</code> path, we get exactly what we would want. This works for as simple or complex as you want. If Jackson can handle them (and it can handle most things), you can return them.</p>
<img src="/images/postimages/4/heyJson.png">    
<h2 id="Getting_Freemarker_working">Getting Freemarker working</h2><p>Phew. After the miserale nightmare involved in getting Jersey working, it’s nice that JSON was so easy. Since we’ve already included some of the Freemarker libraries in the POM in Part 3, hopefully Freemarker will be too.</p>
<p>The first thing I noticed when trying to get Freemarker working was a compile error when trying to define a <code>Map&lt;String, Object&gt;</code>. Clearly I had forgotten to do some housekeeping in my POM so we were using an ancient version of Java. Add the compiler configuration to your POM to compile to Java 1.7 (Java 7). AppEngine is happy with classes compiled against that target version.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="title">source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="title">target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Next, as I mentioned in Part 2, I like to keep my templates in their own <code>src</code> directory. You don’t have to do this - you can put them in <code>src/main/resources</code> if you like, but I don’t like to mix my properties files and persistence.xml (which will come in Part 5) with templates which are very different types of files. So I simply tell Maven that I have a second resource directory, in <code>src/main/templates</code>.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">resources</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">directory</span>&gt;</span>/Users/akshay/Dev/Listerly/listerly/src/main/resources<span class="tag">&lt;/<span class="title">directory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">resource</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">directory</span>&gt;</span>/Users/akshay/Dev/Listerly/listerly/src/main/templates<span class="tag">&lt;/<span class="title">directory</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Next, we need to create a class that will load our templates from the ServletContext or Classpath. Here’s a simple implementation:<br><figure class="highlight java"><figcaption><span>TemplateObjectFactory.java</span><a href="/downloads/code/4/TemplateObjectFactory.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.config.jersey;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Lists;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> freemarker.cache.ClassTemplateLoader;</span><br><span class="line"><span class="keyword">import</span> freemarker.cache.MultiTemplateLoader;</span><br><span class="line"><span class="keyword">import</span> freemarker.cache.TemplateLoader;</span><br><span class="line"><span class="keyword">import</span> freemarker.cache.WebappTemplateLoader;</span><br><span class="line"><span class="keyword">import</span> freemarker.template.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TemplateObjectFactory</span> <span class="keyword">extends</span> <span class="title">Configuration</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Inject</span></span><br><span class="line">    <span class="keyword">private</span> ServletContext servletContext;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TemplateObjectFactory</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="comment">// Create different loaders.</span></span><br><span class="line">        <span class="keyword">final</span> List&lt;TemplateLoader&gt; loaders = Lists.newArrayList();</span><br><span class="line">        <span class="keyword">if</span> (servletContext != <span class="keyword">null</span>) {</span><br><span class="line">            loaders.add(<span class="keyword">new</span> WebappTemplateLoader(servletContext));</span><br><span class="line">        }</span><br><span class="line">        loaders.add(<span class="keyword">new</span> ClassTemplateLoader(<span class="keyword">this</span>.getClass(), <span class="string">"/"</span>));</span><br><span class="line"></span><br><span class="line">        setTemplateLoader(<span class="keyword">new</span> MultiTemplateLoader(loaders.toArray(<span class="keyword">new</span> TemplateLoader[loaders.size()])));</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>Finally, we need to configure Jersey to use this new class. In our JerseyConfiguration class constructor we set a parameter called <code>jersey.config.server.mvc.factory.freemarker</code>:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Inject</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">JerseyConfiguration</span><span class="params">(ServiceLocator serviceLocator, ServletContext servletContext)</span> </span>&#123;</span><br><span class="line">	log.info(<span class="string">"Creating JerseyConfiguration"</span>);</span><br><span class="line">    packages(<span class="string">"com.listerly.resources"</span>);</span><br><span class="line">    property(<span class="string">"jersey.config.server.mvc.factory.freemarker"</span>, TemplateObjectFactory.class);</span><br><span class="line">    register(FreemarkerMvcFeature.class);</span><br><span class="line"></span><br><span class="line">    GuiceBridge.getGuiceBridge().initializeGuiceBridge(serviceLocator);</span><br><span class="line">    GuiceIntoHK2Bridge guiceBridge = serviceLocator.getService(GuiceIntoHK2Bridge.class);</span><br><span class="line">    guiceBridge.bridgeGuiceInjector((Injector) servletContext.getAttribute(Injector.class.getName()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>We should be all set. Let’s create another method in our Resource. This one returns HTML, and notice how we specify the template using the <code>@Template</code> annotation. Notice also that the return type from this method is a Map of Strings to Objects. These are the objects that will then be available in our Freemarker template. For simplicity, I’ve just added two Strings to my Map. The first is called <code>foo</code> and the second <code>bar</code>.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@GET</span></span><br><span class="line"><span class="annotation">@Produces</span>(MediaType.TEXT_HTML)</span><br><span class="line"><span class="annotation">@Path</span>(<span class="string">"/template"</span>)</span><br><span class="line"><span class="annotation">@Template</span>(name=<span class="string">"/foo.ftl"</span>)</span><br><span class="line"><span class="keyword">public</span> Map&lt;String, Object&gt; template() &#123;</span><br><span class="line">	Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">	map.put(<span class="string">"foo"</span>, <span class="string">"Akshay"</span>);</span><br><span class="line">	map.put(<span class="string">"bar"</span>, <span class="string">"Yo Yo Whatsup?"</span>);</span><br><span class="line">	<span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Now we create the <code>foo.ftl</code> template. Notice how easy it is to use the <code>foo</code> and <code>bar</code> parameters we <em>“passed in”</em> from our Resource.<br><figure class="highlight html"><figcaption><span>foo.ftl</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">title</span>&gt;</span>Hello $&#123;foo&#125;<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">		You wanted to say $&#123;bar&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Launch the devserver and load this url (<code>/Hey/template</code>) in your browser, and you should see exactly what you would want.</p>
<img src="/images/postimages/4/heyTemplate.png">    
<p>Obviously there’s a ton more you can do with Freemarker. The parameters in the map can be Collections objects and you can use Freemarkers logical constructs to loop or check for truth/ existence among other things. But those you can pick up quite easily from the <a href="http://freemarker.org/docs/index.html" target="_blank" rel="external">Freemarker Manual</a>.</p>
<p>That’s it for Part 4. <a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/">Part 5</a> will do the final piece (of this tutorial) of getting persistence configured using JPA.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This is part four of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> got us working with Jersey and Guice. Part 4 will make Jersey more useful by adding JSON and freemarker templates.<br>]]>
    
    </summary>
    
      <category term="AppEngine" scheme="http://akshayrangnekar.github.io/tags/AppEngine/"/>
    
      <category term="Freemarker" scheme="http://akshayrangnekar.github.io/tags/Freemarker/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/tags/Java/"/>
    
      <category term="Jersey" scheme="http://akshayrangnekar.github.io/tags/Jersey/"/>
    
      <category term="Maven" scheme="http://akshayrangnekar.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Up and running on AppEngine with Maven, Jersey and Guice - Part 3]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/"/>
    <id>http://akshayrangnekar.github.io//blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/</id>
    <published>2014-03-18T12:23:37.000Z</published>
    <updated>2015-04-19T08:21:27.000Z</updated>
    <content type="html"><![CDATA[<p>This is part three of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> got us to the point of having a working web application running locally and deployed on AppEngine. Part 3 will get Guice &amp; Jersey up and running. </p>
<a id="more"></a>
<h2 id="Guice_up">Guice up</h2><p>After the relative nightmare of some of the other things we’ve done in earlier parts, Guice is remarkably easy to get working. Some of it is due to good documentation, but mostly it’s just a great framework that’s very easy to use.</p>
<p>The first step is to include the appropriate dependencies in our <code>pom.xml</code>. Here’s the modified pom.xml that includes Guice and the Guice-Servlet packages. Here’s the reworked file. See lines 24-33 for changes:</p>
<figure class="highlight xml"><figcaption><span>pom.xml</span><a href="/downloads/code/3/pom.xml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">project</span> <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/POM/4.0.0"</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">  <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="title">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.listerly<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>listerly-server<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="title">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">name</span>&gt;</span>Listerly Main Server<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://www.listerly.com<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>appengine-api-1.0-sdk<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.9.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.inject.extensions<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>guice-servlet<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">version</span>&gt;</span>3.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.inject<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>guice<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">version</span>&gt;</span>3.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span>      </span><br><span class="line">  <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="title">version</span>&gt;</span>9.1.3.v20140225<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>appengine-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.8.7<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">build</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="title">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Next, we setup our Guice modules. First, we extend <code>ServletModule</code> to help serve our HelloWorldServlet:</p>
<figure class="highlight java"><figcaption><span>ListerlyServletModule.java</span><a href="/downloads/code/3/ListerlyServletModule.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.config.guice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.inject.servlet.ServletModule;</span><br><span class="line"><span class="keyword">import</span> com.listerly.HelloWorldServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListerlyServletModule</span> <span class="keyword">extends</span> <span class="title">ServletModule</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configureServlets</span><span class="params">()</span> </span>{</span><br><span class="line">	    serve(<span class="string">"/hi"</span>).with(HelloWorldServlet.class);</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Then we extend <code>GuiceServletContextListener</code> to tell Guice about our new <code>ServletModule</code>:</p>
<figure class="highlight java"><figcaption><span>ListerlyGuiceServletContextListener.java</span><a href="/downloads/code/3/ListerlyGuiceServletContextListener.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.config.guice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.inject.Guice;</span><br><span class="line"><span class="keyword">import</span> com.google.inject.Injector;</span><br><span class="line"><span class="keyword">import</span> com.google.inject.servlet.GuiceServletContextListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListerlyGuiceServletContextListener</span> <span class="keyword">extends</span></span><br><span class="line">		<span class="title">GuiceServletContextListener</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> Injector <span class="title">getInjector</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> Guice.createInjector(<span class="keyword">new</span> ListerlyServletModule());</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Finally, we have to load Guice and our ServletContentListener in the web.xml. Notice we now take out our Servlet definition.</p>
<figure class="highlight xml"><figcaption><span>web.xml</span><a href="/downloads/code/3/web.xml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">version</span>=<span class="value">"2.5"</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span></span><br><span class="line"><span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line"><span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>guiceFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>com.google.inject.servlet.GuiceFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>guiceFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="title">listener</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">listener-class</span>&gt;</span>com.listerly.config.guice.ListerlyGuiceServletContextListener<span class="tag">&lt;/<span class="title">listener-class</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Make a quick change to HelloWorldServlet to prove that you’re actually hitting the new Servlet (I’ve now got <code>Hello, handrolled, guiced AppEngine!</code> as my message). Then run the devserver and hit the server. You should be looking good:</p>
<img src="/images/postimages/3/guiced.png">    
<p>Great, Guice is clearly serving our Servlet, but let’s make absolutely sure by injecting a class. I’ve created a class called <code>TestClass</code>. I’m marking it as a <code>@Singleton</code> to ensure that Guice only creates it once:</p>
<figure class="highlight java"><figcaption><span>TestClass.java</span><a href="/downloads/code/3/TestClass.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject;</span><br><span class="line"><span class="keyword">import</span> javax.inject.Singleton;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Singleton</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestClass</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Inject</span></span><br><span class="line">	<span class="keyword">private</span> Date date;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">TestClass</span><span class="params">()</span> </span>{</span><br><span class="line">	}</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">getDate</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> date;</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Then in my HelloWorldServlet I inject the <code>TestClass</code> object, and print out the date it is loaded with:</p>
<figure class="highlight java"><figcaption><span>HelloWorldServlet.java</span><a href="/downloads/code/3/HelloWorldServlet.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject;</span><br><span class="line"><span class="keyword">import</span> javax.inject.Singleton;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@SuppressWarnings</span>(<span class="string">"serial"</span>)</span><br><span class="line"><span class="annotation">@Singleton</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Inject</span></span><br><span class="line">	TestClass theClass;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">			<span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line">		resp.setContentType(<span class="string">"text/plain"</span>);</span><br><span class="line">		resp.getWriter().println(<span class="string">"Hello, handrolled, guiced AppEngine!"</span>);</span><br><span class="line">		</span><br><span class="line">		SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss.SSS"</span>);</span><br><span class="line">		resp.getWriter().println(<span class="string">"Date is: "</span> + sdf.format(theClass.getDate()));</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Reload the page a few times. Things are behaving as you would expect: you get the time at which you first loaded the page. Hopefully Jersey will be that easy!</p>
<h2 id="Jersey?_Sure-">Jersey? Sure.</h2><p>There are a bunch of really <a href="http://blog.palominolabs.com/2011/08/15/a-simple-java-web-stack-with-guice-jetty-jersey-and-jackson/" target="_blank" rel="external">good</a> <a href="https://sites.google.com/a/athaydes.com/renato-athaydes//posts/jersey_guice_rest_api" target="_blank" rel="external">articles</a> on how to use Jersey with Guice. Unfortunately they’re all based on Jersey 1.X and Jersey 2.0 is now out. Jersey 2.0 seems to be a different story judging by <a href="https://java.net/jira/browse/HK2-39" target="_blank" rel="external">this</a>, <a href="https://java.net/jira/browse/HK2-121" target="_blank" rel="external">this</a>, <a href="https://java.net/jira/browse/HK2-39" target="_blank" rel="external">this</a> and <a href="https://hk2.java.net/guice-bridge/index.html" target="_blank" rel="external">this</a>. </p>
<p>It seems like Jersey’s inclusion of the HK2 dependency injection framework means lots of problems with getting Guice up and running. There are three options to proceed: (1) Revert back to better understood Jersey 1.X library, (2) Switch from Guice to HK2, or (3) Try to get something going with the help of a couple of <a href="https://github.com/aluedeke/jersey2-guice-example" target="_blank" rel="external">working</a> <a href="https://github.com/piersy/jersey2-guice-example-with-test" target="_blank" rel="external">samples</a>.</p>
<p>I decided to push through and try #3. I’m a big fan of Guice and don’t think HK2 is as mature so option 2 was out. Option 1 is tempting, but seemed like the fallback option since I figure at some stage Jersey 1.X is going to be too outdated to continue with so better to eat the pain now rather than after I have 100s of services. </p>
<p>The following instructions get things working. I’m not sure they’re the perfect (or best) way to do things, but after a day of struggling I’m going to settle for what I have. Things do at least seem to be working. </p>
<p>First, lets start with the dependencies. Here’s my final working <code>pom.xml</code>:</p>
<figure class="highlight xml"><figcaption><span>pom.xml</span><a href="/downloads/code/3/b/pom.xml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">project</span> <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/POM/4.0.0"</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">	<span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="title">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.listerly<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>listerly-server<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="title">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">name</span>&gt;</span>Listerly Main Server<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">url</span>&gt;</span>http://www.listerly.com<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">appengine.sdk.version</span>&gt;</span>1.9.0<span class="tag">&lt;/<span class="title">appengine.sdk.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">jersey.version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="title">jersey.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">guice.version</span>&gt;</span>3.0<span class="tag">&lt;/<span class="title">guice.version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">servlet.api.version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="title">servlet.api.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">properties</span>&gt;</span>  </span><br><span class="line">	<span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>appengine-api-1.0-sdk<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${appengine.sdk.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${servlet.api.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.inject.extensions<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>guice-servlet<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${guice.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.inject<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>guice<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${guice.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span>      </span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.glassfish.jersey.core<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jersey-server<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${jersey.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.glassfish.jersey.containers<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jersey-container-servlet<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${jersey.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.glassfish.jersey.ext<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jersey-mvc-jsp<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>${jersey.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.glassfish.jersey.ext<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jersey-mvc-freemarker<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="title">version</span>&gt;</span>${jersey.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="title">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="title">scope</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;<span class="title">exclusions</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="title">exclusion</span>&gt;</span>  </span><br><span class="line">	          <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	          <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;/<span class="title">exclusion</span>&gt;</span></span><br><span class="line">	      <span class="tag">&lt;/<span class="title">exclusions</span>&gt;</span> </span><br><span class="line">	    <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.glassfish.hk2<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>guice-bridge<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.2.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>freemarker-gae<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.3.20<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="title">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">version</span>&gt;</span>9.1.3.v20140225<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>appengine-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="title">version</span>&gt;</span>${appengine.sdk.version}<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">build</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="title">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Notice the new dependencies for Jersey, Freemarker (my template language of choice with Jersey) and the HK2-Guice bridge. </p>
<p>Next we have to change our <code>web.xml</code> to use Jersey:</p>
<figure class="highlight xml"><figcaption><span>web.xml</span><a href="/downloads/code/3/b/web.xml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">version</span>=<span class="value">"2.5"</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span></span><br><span class="line"><span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line"><span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">listener</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">listener-class</span>&gt;</span>com.listerly.config.guice.ListerlyGuiceServletContextListener<span class="tag">&lt;/<span class="title">listener-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>guiceFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">	   <span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>com.google.inject.servlet.GuiceFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>guiceFilter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	<span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>jersey-filter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>org.glassfish.jersey.servlet.ServletContainer<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">init-param</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="title">param-name</span>&gt;</span>javax.ws.rs.Application<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="title">param-value</span>&gt;</span>com.listerly.config.jersey.JerseyConfiguration<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="title">init-param</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">init-param</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="title">param-name</span>&gt;</span>jersey.config.server.provider.classnames<span class="tag">&lt;/<span class="title">param-name</span>&gt;</span></span><br><span class="line">	        <span class="tag">&lt;<span class="title">param-value</span>&gt;</span>org.glassfish.jersey.server.mvc.freemarker.FreemarkerMvcFeature<span class="tag">&lt;/<span class="title">param-value</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;/<span class="title">init-param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>jersey-filter<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span>	</span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>This now has a filter defined for Jersey (lines 19-30), which is configured with (a) our Application (more on that in a second) and (b) the Freemarker mumbo-jumbo. The filter, like the Guice filter, is applied to all URLs.</p>
<p>The next file to go through is the “Application” for Jersey, which defines how Jersey is set up:</p>
<figure class="highlight java"><figcaption><span>JerseyConfiguration.java</span><a href="/downloads/code/3/b/JerseyConfiguration.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.config.jersey;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.util.logging.Logger.getLogger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.logging.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.glassfish.hk2.api.ServiceLocator;</span><br><span class="line"><span class="keyword">import</span> org.glassfish.jersey.server.ResourceConfig;</span><br><span class="line"><span class="keyword">import</span> org.glassfish.jersey.server.mvc.freemarker.FreemarkerMvcFeature;</span><br><span class="line"><span class="keyword">import</span> org.jvnet.hk2.guice.bridge.api.GuiceBridge;</span><br><span class="line"><span class="keyword">import</span> org.jvnet.hk2.guice.bridge.api.GuiceIntoHK2Bridge;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.inject.Injector;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JerseyConfiguration</span> <span class="keyword">extends</span> <span class="title">ResourceConfig</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Logger log = getLogger(getClass().getName());</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Inject</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">JerseyConfiguration</span><span class="params">(ServiceLocator serviceLocator, ServletContext servletContext)</span> </span>{</span><br><span class="line">    	log.info(<span class="string">"Creating JerseyConfiguration"</span>);</span><br><span class="line">        packages(<span class="string">"com.listerly.resources"</span>);</span><br><span class="line"></span><br><span class="line">        register(FreemarkerMvcFeature.class);</span><br><span class="line"></span><br><span class="line">        GuiceBridge.getGuiceBridge().initializeGuiceBridge(serviceLocator);</span><br><span class="line">        GuiceIntoHK2Bridge guiceBridge = serviceLocator.getService(GuiceIntoHK2Bridge.class);</span><br><span class="line">        guiceBridge.bridgeGuiceInjector((Injector) servletContext.getAttribute(Injector.class.getName()));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Three important parts to note here: (1) Line 24 tells Jersey which package will contain our Resources - the POJOs that will respond to requests. (2) Line 26 tells Jersey we will be using Freemarker. (3) Lines 28-30 set up the HK2-Guice bridge. </p>
<p>Next, lets create a simple POJO to respond to requests:</p>
<figure class="highlight java"><figcaption><span>HeyResource.java</span><a href="/downloads/code/3/b/HeyResource.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.resources;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.MediaType;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Path</span>(<span class="string">"/Hey"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeyResource</span> </span>{</span><br><span class="line">	<span class="annotation">@GET</span></span><br><span class="line">	<span class="annotation">@Produces</span>(MediaType.TEXT_PLAIN)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> (<span class="string">"Hey there"</span>);</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Lets fire up the devserver and load <code>http://localhost:8080/Hey</code></p>
<img src="/images/postimages/3/hey.png">    
<p>That all looks good. But let’s make absolutely sure injection is working correctly. </p>
<p>Lets add a second injectable class to begin. Notice that this one is RequestScoped, as opposed to our previous one which was a Singleton:</p>
<figure class="highlight java"><figcaption><span>SecondTest.java</span><a href="/downloads/code/3/c/SecondTest.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.inject.servlet.RequestScoped;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@RequestScoped</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondTest</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Inject</span></span><br><span class="line">	<span class="keyword">private</span> Date date;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SecondTest</span><span class="params">()</span> </span>{</span><br><span class="line">	}</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Date <span class="title">getDate</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> date;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>We can now add a second method and inject a couple of objects into our class: </p>
<figure class="highlight java"><figcaption><span>HeyResource.java</span><a href="/downloads/code/3/c/HeyResource.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly.resources;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.GET;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Path;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.Produces;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.QueryParam;</span><br><span class="line"><span class="keyword">import</span> javax.ws.rs.core.MediaType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.inject.Inject;</span><br><span class="line"><span class="keyword">import</span> com.listerly.SecondTest;</span><br><span class="line"><span class="keyword">import</span> com.listerly.TestClass;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@Path</span>(<span class="string">"/Hey"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeyResource</span> </span>{</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Inject</span> TestClass first;</span><br><span class="line">	<span class="annotation">@Inject</span> SecondTest second;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@GET</span></span><br><span class="line">	<span class="annotation">@Produces</span>(MediaType.TEXT_PLAIN)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">()</span> </span>{</span><br><span class="line">		<span class="keyword">return</span> (<span class="string">"Hey there"</span>);</span><br><span class="line">	}</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@GET</span></span><br><span class="line">	<span class="annotation">@Produces</span>(MediaType.TEXT_PLAIN)</span><br><span class="line">	<span class="annotation">@Path</span>(<span class="string">"/foo"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">foo</span><span class="params">(@QueryParam(<span class="string">"test"</span>)</span> String test) </span>{</span><br><span class="line">		SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss.SSS"</span>);</span><br><span class="line">		StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">		builder.append(<span class="string">"Hi there. You entered "</span>).append(test).append(<span class="string">"\n"</span>);</span><br><span class="line">		builder.append(<span class="string">"The first date is:"</span>).append(sdf.format(first.getDate())).append(<span class="string">"\n"</span>);</span><br><span class="line">		builder.append(<span class="string">"The second date is:"</span>).append(sdf.format(second.getDate())).append(<span class="string">"\n"</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> builder.toString();</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<p>Run the server, and everything looks good:</p>
<img src="/images/postimages/3/heyFoo.png">
<p>Push everything to AppServer and make sure everything is fine. We’ll be using more of Jersey and Guice in the next couple of steps as we get started on templates and persistence. <a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> will build on today, getting Jersey set up with JSON and Freemarker.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This is part three of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> got us to the point of having a working web application running locally and deployed on AppEngine. Part 3 will get Guice &amp; Jersey up and running. </p>]]>
    
    </summary>
    
      <category term="AppEngine" scheme="http://akshayrangnekar.github.io/tags/AppEngine/"/>
    
      <category term="Guice" scheme="http://akshayrangnekar.github.io/tags/Guice/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/tags/Java/"/>
    
      <category term="Jersey" scheme="http://akshayrangnekar.github.io/tags/Jersey/"/>
    
      <category term="Maven" scheme="http://akshayrangnekar.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Up and running on AppEngine with Maven, Jersey and Guice - Part 2]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/"/>
    <id>http://akshayrangnekar.github.io//blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/</id>
    <published>2014-03-14T10:52:12.000Z</published>
    <updated>2015-04-19T08:26:03.000Z</updated>
    <content type="html"><![CDATA[<p>This is part two of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p>Part 2 gets us to the point of having a working web application running locally and deployed on AppEngine. If you haven’t got maven or your working directory set up yet, start on <a href="/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a>.<br><a id="more"></a></p>
<h2 id="Don’t_follow_the_Google_docs">Don’t follow the Google docs</h2><p>This is one not to follow along, but helps explain why this tutorial is needed. To begin, I decided to try following the <a href="">AppEngine docs on user maven</a>.</p>
<p>Let’s try their command:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mbp:listerly$ mvn archetype:generate \</span><br><span class="line"><span class="blockquote">&gt;  -DarchetypeGroupId=com.google.appengine.archetypes \</span></span><br><span class="line"><span class="blockquote">&gt;  -DarchetypeArtifactId=appengine-skeleton-archetype \</span></span><br><span class="line"><span class="blockquote">&gt;  -DarchetypeVersion=1.9.0 \</span></span><br><span class="line"><span class="blockquote">&gt;  -DgroupId=com.listerly.server \</span></span><br><span class="line"><span class="blockquote">&gt;  -DartifactId=server \</span></span><br><span class="line"><span class="blockquote">&gt;  -Dversion=0.1 \</span></span><br><span class="line"><span class="blockquote">&gt;  -Dpackage=com.listerly</span></span><br></pre></td></tr></table></figure></p>
<p>I saw lots of nice maven messages about downloading everything under the sun, and then a hostile failure message.<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">Archetype</span> <span class="tag">repository</span> <span class="tag">missing</span>. <span class="tag">Using</span> <span class="tag">the</span> <span class="tag">one</span> <span class="tag">from</span> <span class="attr_selector">[com.google.appengine.archetypes:appengine-skeleton-archetype:1.8.7]</span> <span class="tag">found</span> <span class="tag">in</span> <span class="tag">catalog</span> <span class="tag">remote</span></span><br><span class="line"><span class="tag">Downloading</span>: <span class="tag">http</span>:<span class="comment">//repo.maven.apache.org/maven2/com/google/appengine/archetypes/appengine-skeleton-archetype/1.9.0/appengine-skeleton-archetype-1.9.0.jar</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">BUILD</span> <span class="tag">FAILURE</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">Total</span> <span class="tag">time</span>: <span class="tag">13</span><span class="class">.591</span> <span class="tag">s</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">Finished</span> <span class="tag">at</span>: <span class="tag">2014-03-14T11</span><span class="pseudo">:39</span><span class="pseudo">:14</span>+<span class="tag">00</span><span class="pseudo">:00</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">Final</span> <span class="tag">Memory</span>: <span class="tag">13M</span>/<span class="tag">246M</span></span><br><span class="line"><span class="attr_selector">[INFO]</span> <span class="tag">------------------------------------------------------------------------</span></span><br><span class="line"><span class="attr_selector">[ERROR]</span> <span class="tag">Failed</span> <span class="tag">to</span> <span class="tag">execute</span> <span class="tag">goal</span> <span class="tag">org</span><span class="class">.apache</span><span class="class">.maven</span><span class="class">.plugins</span><span class="pseudo">:maven-archetype-plugin</span><span class="pseudo">:2</span><span class="class">.2</span><span class="pseudo">:generate</span> (default-cli) <span class="tag">on</span> <span class="tag">project</span> <span class="tag">standalone-pom</span>: <span class="tag">The</span> <span class="tag">desired</span> <span class="tag">archetype</span> <span class="tag">does</span> <span class="tag">not</span> <span class="tag">exist</span> (com.google.appengine.<span class="attribute">archetypes</span>:<span class="attribute">appengine-skeleton-archetype</span>:<span class="number">1.9</span>.<span class="number">0</span>) <span class="tag">-</span>&gt; <span class="attr_selector">[Help 1]</span></span><br></pre></td></tr></table></figure></p>
<p>Thanks very much for that. That doc was updated (when I loaded it) on March 7 2014, so it’s 7 days old. And doesn’t work. Too new to be out of date, too old to have teething problems. </p>
<p>A <a href="http://search.maven.org/#search%7Cga%7C1%7Cappengine" target="_blank" rel="external">quick search of Maven Central</a> reveals the likely issue - the latest version of this archetype that’s been published is 1.8.7. Looks like someone’s been forgetting to push the archetypes to the Maven Central repo for versions 1.8.8, 1.8.9 and 1.9.0. Two options to proceed: either start using the previous archetype and update. Or start from a cleaner archetype and add in the AppEngine functionality. I’m going to proceed with both options: you can pick and choose the one you prefer.</p>
<h2 id="Starting_from_the_AppEngine_skeleton_archetype">Starting from the AppEngine skeleton archetype</h2><p>Lets first create a branch to work from:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mbp:</span>listerly$ git checkout -b feature_gaeSkeletonArchetype</span><br><span class="line">Switched to a <span class="keyword">new</span> branch <span class="string">'feature_gaeSkeletonArchetype'</span></span><br><span class="line"><span class="string">mbp:</span>listerly$ cat README.md </span><br><span class="line">listerly</span><br><span class="line">========</span><br><span class="line"><span class="string">mbp:</span>listerly$ echo <span class="string">"Branch for appengine skeleton archetype"</span> &gt; branch.txt</span><br><span class="line"><span class="string">mbp:</span>listerly$ git add .</span><br><span class="line"><span class="string">mbp:</span>listerly$ git commit -m <span class="string">"Branch message added."</span></span><br><span class="line">[feature_gaeSkeletonArchetype <span class="number">1</span>ca1c52] Branch message added.</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">1</span> insertion(+)</span><br><span class="line"> create mode <span class="number">100644</span> branch.txt</span><br><span class="line"><span class="string">mbp:</span>listerly$ git push -u origin feature_gaeSkeletonArchetype</span><br><span class="line">Counting <span class="string">objects:</span> <span class="number">4</span>, done.</span><br><span class="line">Delta compression using up to <span class="number">8</span> threads.</span><br><span class="line">Compressing <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">Writing <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">3</span><span class="regexp">/3), 325 bytes | 0 bytes/</span>s, done.</span><br><span class="line">Total <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To <span class="string">https:</span><span class="comment">//github.com/akshayrangnekar/listerly.git</span></span><br><span class="line"> * [<span class="keyword">new</span> branch]      feature_gaeSkeletonArchetype -&gt; feature_gaeSkeletonArchetype</span><br><span class="line">Branch feature_gaeSkeletonArchetype set up to track remote branch feature_gaeSkeletonArchetype from origin.</span><br></pre></td></tr></table></figure></p>
<p>Now we try re-running the maven archetype:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mbp:listerly$ mvn archetype:generate  -DarchetypeGroupId=com<span class="class">.google</span><span class="class">.appengine</span><span class="class">.archetypes</span>  -DarchetypeArtifactId=appengine-skeleton-archetype  -DarchetypeVersion=<span class="number">1.8</span>.<span class="number">7</span>  -DgroupId=com<span class="class">.listerly</span><span class="class">.server</span>  -DartifactId=server  -Dversion=<span class="number">0.1</span>  -Dpackage=com<span class="class">.listerly</span></span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[INFO] </span><br><span class="line">[INFO] Using the builder org<span class="class">.apache</span><span class="class">.maven</span><span class="class">.lifecycle</span><span class="class">.internal</span><span class="class">.builder</span><span class="class">.singlethreaded</span><span class="class">.SingleThreadedBuilder</span> with <span class="tag">a</span> thread count of <span class="number">1</span></span><br><span class="line">[LINES REMOVED]</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Total <span class="tag">time</span>: <span class="number">6.159</span> s</span><br><span class="line">[INFO] Finished at: <span class="number">2014</span>-<span class="number">03</span>-<span class="number">14</span>T13:<span class="number">14</span>:<span class="number">45</span>+<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">[INFO] Final Memory: <span class="number">14</span>M/<span class="number">246</span>M</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p>
<p>That’s a lot better. Lets see what we have created for us. Using a handy little command I found <a href="https://coderwall.com/p/owb6eg" target="_blank" rel="external">here</a>, modified to get rid of gitcrud to make this viewable<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">mbp:listerly$ find . -print <span class="string">| grep -v '.git' | sed -e 's;[^/]*/;|____;g;s;____|; |;g'</span></span><br><span class="line">.</span><br><span class="line"><span class="string">|____branch.txt</span></span><br><span class="line"><span class="string">|____README.md</span></span><br><span class="line"><span class="string">|____server</span></span><br><span class="line"><span class="string">| |____pom.xml</span></span><br><span class="line"><span class="string">| |____README.md</span></span><br><span class="line"><span class="string">| |____server-ear</span></span><br><span class="line"><span class="string">| | |____pom.xml</span></span><br><span class="line"><span class="string">| | |____src</span></span><br><span class="line"><span class="string">| | | |____main</span></span><br><span class="line"><span class="string">| | | | |____application</span></span><br><span class="line"><span class="string">| | | | | |____META-INF</span></span><br><span class="line"><span class="string">| | | | | | |____appengine-application.xml</span></span><br><span class="line"><span class="string">| | | | | | |____application.xml</span></span><br><span class="line"><span class="string">| | | | | | |____MANIFEST.MF</span></span><br><span class="line"><span class="string">| |____server-war</span></span><br><span class="line"><span class="string">| | |____pom.xml</span></span><br><span class="line"><span class="string">| | |____src</span></span><br><span class="line"><span class="string">| | | |____main</span></span><br><span class="line"><span class="string">| | | | |____java</span></span><br><span class="line"><span class="string">| | | | |____webapp</span></span><br><span class="line"><span class="string">| | | | | |____WEB-INF</span></span><br><span class="line"><span class="string">| | | | | | |____appengine-web.xml</span></span><br><span class="line"><span class="string">| | | | | | |____logging.properties</span></span><br><span class="line"><span class="string">| | | | | | |____web.xml</span></span><br><span class="line"><span class="string">| | | |____test</span></span><br><span class="line"><span class="string">| | | | |____java</span></span><br></pre></td></tr></table></figure></p>
<p>Ok - let’s try running this:<br><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="atom">mbp</span>:<span class="atom">listerly</span>$ <span class="atom">cd</span> <span class="atom">server</span></span><br><span class="line"><span class="atom">mbp</span>:<span class="atom">server</span>$ <span class="atom">mvn</span> <span class="atom">appengine</span>:<span class="atom">devserver</span></span><br><span class="line">[<span class="name">INFO</span>] <span class="name">Scanning</span> <span class="atom">for</span> <span class="atom">projects</span>...</span><br><span class="line">[<span class="name">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="name">INFO</span>] <span class="name">Reactor</span> <span class="name">Build</span> <span class="name">Order</span>:</span><br><span class="line">[<span class="name">INFO</span>] </span><br><span class="line">[<span class="name">INFO</span>] <span class="atom">server</span></span><br><span class="line">[<span class="name">INFO</span>] <span class="atom">server</span>-<span class="atom">war</span></span><br><span class="line">[<span class="name">INFO</span>] <span class="atom">server</span>-<span class="atom">ear</span></span><br><span class="line">[<span class="name">REMOVED</span> <span class="name">LINES</span>]</span><br><span class="line">[<span class="name">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="name">INFO</span>] <span class="name">Reactor</span> <span class="name">Summary</span>:</span><br><span class="line">[<span class="name">INFO</span>] </span><br><span class="line">[<span class="name">INFO</span>] <span class="atom">server</span> ............................................ <span class="name">FAILURE</span> [ <span class="number">16.241</span> <span class="atom">s</span>]</span><br><span class="line">[<span class="name">INFO</span>] <span class="atom">server</span>-<span class="atom">war</span> ........................................ <span class="name">SKIPPED</span></span><br><span class="line">[<span class="name">INFO</span>] <span class="atom">server</span>-<span class="atom">ear</span> ........................................ <span class="name">SKIPPED</span></span><br><span class="line">[<span class="name">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="name">INFO</span>] <span class="name">BUILD</span> <span class="name">FAILURE</span></span><br><span class="line">[<span class="name">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="name">INFO</span>] <span class="name">Total</span> <span class="atom">time</span>: <span class="number">17.469</span> <span class="atom">s</span></span><br><span class="line">[<span class="name">INFO</span>] <span class="name">Finished</span> <span class="atom">at</span>: <span class="number">2014</span>-<span class="number">03</span>-<span class="number">14</span><span class="name">T13</span>:<span class="number">26</span>:<span class="number">54</span>+<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">[<span class="name">INFO</span>] <span class="name">Final</span> <span class="name">Memory</span>: <span class="number">9</span><span class="name">M</span>/<span class="number">246</span><span class="name">M</span></span><br><span class="line">[<span class="name">INFO</span>] ------------------------------------------------------------------------</span><br><span class="line">[<span class="name">ERROR</span>] <span class="name">Failed</span> <span class="atom">to</span> <span class="atom">execute</span> <span class="atom">goal</span> <span class="atom">com</span>.<span class="atom">google</span>.<span class="atom">appengine</span>:<span class="atom">appengine</span>-<span class="atom">maven</span>-<span class="atom">plugin</span>:<span class="number">1.8</span>.7:<span class="atom">devserver</span> (<span class="atom">default</span>-<span class="atom">cli</span>) <span class="atom">on</span> <span class="atom">project</span> <span class="atom">server</span>: <span class="name">The</span> <span class="atom">application</span> <span class="atom">directory</span> <span class="atom">does</span> <span class="atom">not</span> <span class="atom">exist</span> : /<span class="name">Users</span>/<span class="atom">akshay</span>/<span class="name">Dev</span>/<span class="name">Listerly</span>/<span class="atom">listerly</span>/<span class="atom">server</span>/<span class="atom">target</span>/<span class="atom">server</span>-<span class="number">0.1</span> -&gt; [<span class="name">Help</span> <span class="number">1</span>]</span><br></pre></td></tr></table></figure></p>
<p>Not nice. Ok, let’s try again with some help from the appengine docs (though not following them to the letter since they are wrong about the directory to run from):<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mbp:server akshay$ mvn clean <span class="operator"><span class="keyword">install</span></span><br><span class="line">[REMOVED LOTS <span class="keyword">OF</span> <span class="keyword">LINES</span>]</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">[INFO] Total <span class="keyword">time</span>: <span class="number">17.990</span> s</span><br><span class="line">[INFO] Finished <span class="keyword">at</span>: <span class="number">2014</span>-<span class="number">03</span>-<span class="number">14</span>T13:<span class="number">36</span>:<span class="number">48</span>+<span class="number">00</span>:<span class="number">00</span></span><br><span class="line">[INFO] Final Memory: <span class="number">11</span>M/<span class="number">246</span>M</span><br><span class="line">[INFO] <span class="comment">------------------------------------------------------------------------</span></span><br><span class="line">mbp:<span class="keyword">server</span> akshay$ mvn -pl <span class="keyword">server</span>-ear appengine:devserver</span><br><span class="line">[INFO] Scanning <span class="keyword">for</span> projects...</span><br><span class="line">[REMOVED LOTS <span class="keyword">OF</span> <span class="keyword">LINES</span>]</span><br><span class="line">[INFO] INFO: The admin console <span class="keyword">is</span> running <span class="keyword">at</span> http://localhost:<span class="number">8080</span>/_ah/admin</span><br><span class="line">[INFO] Mar <span class="number">14</span>, <span class="number">2014</span> <span class="number">1</span>:<span class="number">40</span>:<span class="number">02</span> PM com.google.appengine.tools.development.DevAppServerImpl doStart</span><br><span class="line">[INFO] INFO: Dev App <span class="keyword">Server</span> <span class="keyword">is</span> <span class="keyword">now</span> running</span></span><br></pre></td></tr></table></figure></p>
<p>That looks good. </p>
<p>If we load up the admin console at <code>http://localhost:8080/_ah/admin</code> it seems right:<br><img src="/images/postimages/2/dev-appengine-console1.png">    </p>
<p>There is of course nothing there. So let’s create a very simple Servlet. Here’s my incredibly basic HelloWorldServlet:<br><figure class="highlight java"><figcaption><span>HelloWorldServlet.java</span><a href="/downloads/code/1/HelloWorldServlet.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@WebServlet</span>(<span class="string">"/Hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> </span><br><span class="line">		<span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line">		resp.setContentType(<span class="string">"text/plain"</span>);</span><br><span class="line">		resp.getWriter().println(<span class="string">"Hello AppEngine!"</span>);</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>But if we try running it:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:server akshay$ mvn install&#10;[INFO] Scanning for projects...&#10;...&#10;[INFO] -------------------------------------------------------------&#10;[ERROR] COMPILATION ERROR : &#10;[INFO] -------------------------------------------------------------&#10;[ERROR] /Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[6,31] error: package javax.servlet.annotation does not exist&#10;[ERROR] /Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[11,1] error: cannot find symbol&#10;[ERROR]   symbol: class WebServlet&#10;/Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[6,31] error: package javax.servlet.annotation does not exist&#10;[ERROR] /Users/akshay/Dev/Listerly/listerly/server/server-war/src/main/java/com/listerly/HelloWorldServlet.java:[11,1] error: cannot find symbol&#10;[INFO] 4 errors</span><br></pre></td></tr></table></figure></p>
<p>Ass. So clearly the archetype doesn’t use the latest version of the Servlet API. Interestingly, I cannot find anything easily available in Google’s docs about what version of the Servlet API they support. Let’s try defining the servlet in the web.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>HelloWorldServlet<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">servlet-class</span>&gt;</span>com.listerly.HelloWorldServlet<span class="tag">&lt;/<span class="title">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>HelloWorldServlet<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/hi<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>and rerunning:<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mbp:<span class="keyword">server</span> akshay$ mvn install</span><br><span class="line">mbp:<span class="keyword">server</span> akshay$ mvn -pl <span class="keyword">server</span>-ear appengine:devserver</span><br></pre></td></tr></table></figure></p>
<p>and this time we get something better:<br><img src="/images/postimages/2/dev-appengine-try2.png">    </p>
<p>Awesome. We now have a servlet running on our local dev server. Looks like we can’t use the WebServlet annotation with the devserver though. Lets try pushing this app to appengine. First, there are a tweak to the configuration file. In <code>appengine-web.xml</code> set the application to the id of the project you created on the AppEngine console:</p>
<figure class="highlight xml"><figcaption><span>server-war/src/main/webapp/WEB-INF/appengine-web.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">appengine-web-app</span> <span class="attribute">xmlns</span>=<span class="value">"http://appengine.google.com/ns/1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span>&gt;</span>listerly-dev<span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">version</span>&gt;</span>$&#123;appengine.app.version&#125;<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">threadsafe</span>&gt;</span>true<span class="tag">&lt;/<span class="title">threadsafe</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">system-properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"java.util.logging.config.file"</span> <span class="attribute">value</span>=<span class="value">"WEB-INF/logging.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">system-properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">appengine-web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>and in the <code>appengine-application.xml</code> do the same thing:<br><figure class="highlight xml"><figcaption><span>server-ear/src/main/application/META-INF/appengine-application.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">appengine-application</span> <span class="attribute">xmlns</span>=<span class="value">"http://appengine.google.com/ns/1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">application</span>&gt;</span>listerly-dev<span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">appengine-application</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>And then run the <code>update</code> tasks <code>mvn -pl server-ear appengine:update</code>. If all is well, you should first see a browser window pop up asking you for authentication:<br><img src="/images/postimages/2/dev-appengine-auth1.png">    </p>
<img src="/images/postimages/2/dev-appengine-auth2.png">    
<p>Enter that code when you get the prompt <code>Please enter code:</code>. If all is well you should see a <code>BUILD SUCCESS</code> message at the end of the compilation and deployment step (note: this takes a couple of minutes);</p>
<p>Load the page from your appspot URL <code>http://[your-application-id].appspot.com/hi</code> and you should see your Hello AppEngine page, running on Google AppEngine. That’s success for this part. </p>
<img src="/images/postimages/2/helloworld-appengine1.png">    
<p>Lets commit everything and then switch back to the master to try the handrolled way.<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/Dev/</span><span class="constant">Listerly/</span>listerly<span class="variable">$ </span>git add .</span><br><span class="line">[<span class="constant">NON-ERROR OUTPUT HIDDEN]</span></span><br><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/Dev/</span><span class="constant">Listerly/</span>listerly<span class="variable">$ </span>git commit -m <span class="string">"Working HelloWorld with Google archetype"</span></span><br><span class="line">[<span class="constant">NON-ERROR OUTPUT HIDDEN]</span></span><br><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/Dev/</span><span class="constant">Listerly/</span>listerly<span class="variable">$ </span>git push</span><br><span class="line">[<span class="constant">NON-ERROR OUTPUT HIDDEN]</span></span><br><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/Dev/</span><span class="constant">Listerly/</span>listerly<span class="variable">$ </span>git checkout master</span><br><span class="line">[<span class="constant">NON-ERROR OUTPUT HIDDEN]</span></span><br><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/Dev/</span><span class="constant">Listerly/</span>listerly<span class="variable">$ </span>git pull</span><br><span class="line"><span class="constant">Already </span>up-to-date.</span><br><span class="line"><span class="symbol">mbp:</span>~<span class="regexp">/Dev/</span><span class="constant">Listerly/</span>listerly<span class="variable">$ </span>ls</span><br><span class="line"><span class="constant">README.</span>md	server</span><br></pre></td></tr></table></figure></p>
<h2 id="Starting_from_scratch">Starting from scratch</h2><p>I have to admit, this is my preferred way of starting because I like to have complete control over the project layout, the directory structure etc.</p>
<p>Let’s start with what my ideal directory structure is:</p>
<ul>
<li>[root directory] - Primarily contains build files<ul>
<li><em>src</em><ul>
<li><em>main</em><ul>
<li><em>java</em> - The main directory for source code</li>
<li><em>resources</em> - Other items that have to go into the jar (logging config, application config)</li>
<li><em>webapp</em> - Resources (css, images, js)</li>
<li><em>templates</em> - Freemarker templates for pages</li>
</ul>
</li>
<li><em>test</em> - Testing resources (will be defined later)</li>
</ul>
</li>
<li><em>build</em> - temporary directory, ignored by git, for artifacts</li>
</ul>
</li>
</ul>
<p>Lets start by creating that directory structure (leave out the build directory - should be created automatically). Then we’ll make a basic Maven build file (named <code>pom.xml</code> in our root directory)</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">project</span> <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/POM/4.0.0"</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">  <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="title">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.listerly<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>listerly-server<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="title">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">name</span>&gt;</span>Listerly Main Server<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://www.listerly.com<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Then we add our basic servlet and a web.xml:</p>
<p>In <code>src/main/java/com/listerly/</code><br><figure class="highlight java"><figcaption><span>HelloWorldServlet.java</span><a href="/downloads/code/1/b/HelloWorldServlet.java">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.listerly;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="annotation">@SuppressWarnings</span>(<span class="string">"serial"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>{</span><br><span class="line"></span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span></span><br><span class="line">			<span class="keyword">throws</span> ServletException, IOException </span>{</span><br><span class="line">		resp.setContentType(<span class="string">"text/plain"</span>);</span><br><span class="line">		resp.getWriter().println(<span class="string">"Hello, my AppEngine"</span>);</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>In <code>src/main/webapp/WEB-INF</code><br><figure class="highlight xml"><figcaption><span>web.xml</span><a href="/downloads/code/1/b/web.xml">view raw</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">version</span>=<span class="value">"2.5"</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span></span><br><span class="line"><span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line"><span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">welcome-file-list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="title">welcome-file</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">welcome-file-list</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">servlet</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>HelloWorldServlet<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">servlet-class</span>&gt;</span>com.listerly.HelloWorldServlet<span class="tag">&lt;/<span class="title">servlet-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="title">servlet-mapping</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">servlet-name</span>&gt;</span>HelloWorldServlet<span class="tag">&lt;/<span class="title">servlet-name</span>&gt;</span></span><br><span class="line">	    <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/hi<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Lets try building our war file:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/Dev/Listerly/listerly$ mvn package&#10;[BLAH BLAH BLAH...]&#10;[INFO] ------------------------------------------------------------------------&#10;[INFO] BUILD SUCCESS&#10;[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p>
<p>Good so far. But there’s not much we can do with this just yet. Let’s first start with trying to run our war on a web server independently of AppEngine. </p>
<p>Lets add the Jetty plugin to our <code>pom.xml</code>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>9.1.3.v20140225<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">plugin</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Now try running the <code>mvn jetty:run</code> task<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:~/Dev/Listerly/listerly$ mvn package&#10;[BLAH BLAH BLAH...]&#10;mbp:~/Dev/Listerly/listerly$ mvn jetty:run&#10;[BLAH BLAH BLAH...]&#10;[INFO] Started Jetty Server</span><br></pre></td></tr></table></figure></p>
<p>If you try accessing your servlet at <code>localhost:8080/hi</code> you should see a positive result:<br><img src="/images/postimages/2/helloworld-jetty.png">    </p>
<p>Ok, lets move on to integrating appengine. </p>
<p>Before we start, I’m going to change my servlet a tiny bit just to be able to differentiate and make sure this is the version we’re seeing. Change the appropriate line to <code>resp.getWriter().println(&quot;Hello, handrolled AppEngine!&quot;);</code></p>
<p>Next, we need to create the <code>appengine-web.xml</code> (in <code>src/main/webapp/WEB-INF/</code>) that tells AppEngine what project and version<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">appengine-web-app</span> <span class="attribute">xmlns</span>=<span class="value">"http://appengine.google.com/ns/1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">application</span>&gt;</span>listerly-dev<span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">threadsafe</span>&gt;</span>true<span class="tag">&lt;/<span class="title">threadsafe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">appengine-web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Then we need to add a couple of items to our <code>pom.xml</code><br><figure class="highlight xml"><figcaption><span>pom.xml - see lines 14-18 and 32-36</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">project</span> <span class="attribute">xmlns</span>=<span class="value">"http://maven.apache.org/POM/4.0.0"</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">  <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="title">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.listerly<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>listerly-server<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">version</span>&gt;</span>0.1<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="title">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">name</span>&gt;</span>Listerly Main Server<span class="tag">&lt;/<span class="title">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">url</span>&gt;</span>http://www.listerly.com<span class="tag">&lt;/<span class="title">url</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">dependencies</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>appengine-api-1.0-sdk<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.9.0<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;<span class="title">dependency</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">	  	<span class="tag">&lt;<span class="title">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">	  <span class="tag">&lt;/<span class="title">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">plugins</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="title">version</span>&gt;</span>9.1.3.v20140225<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">groupId</span>&gt;</span>com.google.appengine<span class="tag">&lt;/<span class="title">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">artifactId</span>&gt;</span>appengine-maven-plugin<span class="tag">&lt;/<span class="title">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">version</span>&gt;</span>1.8.7<span class="tag">&lt;/<span class="title">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">plugins</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">build</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="title">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Now if we run <code>mvn appengine:devserver</code> and visit <code>http://localhost:8080/hi</code> we get something that looks good:</p>
<img src="/images/postimages/2/helloworld-appengine1.png">    
<p>Lets try pushing it to the Google servers. Run <code>mvn appengine:update</code> and if all goes well (it should!), open a browser to <code>http://[app-id].appspot.com/hi</code>. Uh oh. Doesn’t say “handrolled” for me. Looks like it’s still running the old version. Fortunately, this is to be expected because AppEngine allows you to upload multiple versions of your app, but only one of them is the “default version”. Lets make this version default. Visit <code>appengine.google.com</code>. Login, and then click on your application. In the left navigation bar you should see “versions”. Click there, and you’ll see that you have two versions deployed: <code>1-war</code> that was created by the AppEngine archetype, and <code>1</code>, which is the version we just created. Select 1, and click make default. Now if you reload your other browser window, you should see “Hello, handrolled AppEngine!”. That’s success for Part 2.</p>
<p>You can choose which approach you prefer. I like the ability to have full control over my project structure so for the rest of this tutorial I’m going to go with the second approach (which the more attentive may have guessed by the fact that this has all been done on the master branch though I claim that was accidental). Add everything into git (if you’re going with this approach - otherwise discard everything and merge the other branch into master) and we’ll be ready to go with <a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a>.</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>This is part two of my post on getting a web application up and running on Google AppEngine with Maven, Jersey and Guice.</p>
<p>Part 2 gets us to the point of having a working web application running locally and deployed on AppEngine. If you haven’t got maven or your working directory set up yet, start on <a href="/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a>.<br>]]>
    
    </summary>
    
      <category term="AppEngine" scheme="http://akshayrangnekar.github.io/tags/AppEngine/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/tags/Java/"/>
    
      <category term="Maven" scheme="http://akshayrangnekar.github.io/tags/Maven/"/>
    
      <category term="git" scheme="http://akshayrangnekar.github.io/tags/git/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/categories/Java/"/>
    
      <category term="Server" scheme="http://akshayrangnekar.github.io/categories/Java/Server/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Up and running on AppEngine with Maven, Jersey and Guice - Part 1]]></title>
    <link href="http://akshayrangnekar.github.io//blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/"/>
    <id>http://akshayrangnekar.github.io//blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/</id>
    <published>2014-03-13T17:20:31.000Z</published>
    <updated>2015-04-19T08:26:20.000Z</updated>
    <content type="html"><![CDATA[<p>After 10 years away from proper coding, I’m building a new application. I’ll talk more about Listerly and some of my design choices at a later time, but this post should help document the process so if anyone else wants this type of a setup it’s easy to get going.</p>
<p>This application has many moving pieces, and to make my life easier I’m going to have some pretty awesome tools do most of the heavy lifting for me. In no particular order, the key pieces that I’ll be using include Google AppEngine (PAAS), maven (build), git/github (source control), Jersey (RESTful services), Guice (dependency injection), Freemarker (templates), Jackson (JSON) and JPA (persistence).</p>
<ul>
<li><a href="/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a> gets you set up with maven and a blank repository on github</li>
<li><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> gets you to the point of having a working web application running locally and deployed on AppEngine.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> adds Jersey and Guice to the mix.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> makes Jersey useful by demonstrating how to use Freemarker and Jackson to return HTML and JSON respectively.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/">Part 5</a> will set up persistence to the Google DataStore using JPA.</li>
</ul>
<a id="more"></a>
<h2 id="Create_AppEngine_Project">Create AppEngine Project</h2><p>Very simple. Go to <a href="http://appengine.google.com" target="_blank" rel="external">appengine.google.com</a>. Login, then click “Create Application”:<br><img src="/images/postimages/appengine1.png">    </p>
<p>Find a nice identifier is available, and give your application a descriptive name. For the moment, I’ve set with the default authentication options, that allows any Google user to authenticate to your app (for the areas that you enable authentication):<br><img src="/images/postimages/appengine2.png">    </p>
<p>Hopefully that should be all you need to do. Tell Google to go ahead and you should have a blank project ready to go:<br><img src="/images/postimages/appengine3.png">    </p>
<h2 id="Install_Maven">Install Maven</h2><p>First, download Maven from the Apache download site:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">mbp:</span>~ akshay<span class="variable">$ </span>cd <span class="constant">Dev/</span></span><br><span class="line"><span class="symbol">mbp:</span><span class="constant">Dev </span>akshay<span class="variable">$ </span>mkdir lib</span><br><span class="line"><span class="symbol">mbp:</span><span class="constant">Dev </span>akshay<span class="variable">$ </span>cd lib/</span><br><span class="line"><span class="symbol">mbp:</span>lib akshay<span class="variable">$ </span>curl -<span class="constant">O </span><span class="symbol">http:</span>/<span class="regexp">/apache.mirror.anlx.net/maven</span><span class="regexp">/maven-3/</span><span class="number">3.2</span>.<span class="number">1</span>/binaries/apache-maven-<span class="number">3.2</span>.<span class="number">1</span>-bin.tar.gz</span><br><span class="line">  % <span class="constant">Total </span>   % <span class="constant">Received </span>% <span class="constant">Xferd </span> <span class="constant">Average Speed </span>  <span class="constant">Time </span>   <span class="constant">Time </span>    <span class="constant">Time </span> <span class="constant">Current</span></span><br><span class="line">                                 <span class="constant">Dload </span> <span class="constant">Upload </span>  <span class="constant">Total </span>  <span class="constant">Spent </span>   <span class="constant">Left </span> <span class="constant">Speed</span></span><br><span class="line"><span class="number">100</span> <span class="number">6765</span>k  <span class="number">100</span> <span class="number">6765</span>k    <span class="number">0</span>     <span class="number">0</span>  <span class="number">1757</span>k      <span class="number">0</span>  <span class="number">0</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">03</span>  <span class="number">0</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">03</span> --<span class="symbol">:--</span><span class="symbol">:--</span> <span class="number">1756</span>k</span><br><span class="line"><span class="symbol">mbp:</span>lib akshay$</span><br></pre></td></tr></table></figure></p>
<p>Then unzip the file:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mbp:lib akshay$ ls</span><br><span class="line">apache-maven-<span class="number">3.2</span>.<span class="number">1</span>-bin<span class="class">.tar</span><span class="class">.gz</span></span><br><span class="line">mbp:lib akshay$ tar -xvzf apache-maven-<span class="number">3.2</span>.<span class="number">1</span>-bin<span class="class">.tar</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure></p>
<p>Set some environment variables:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> M2_HOME=/Users/akshay/Dev/lib/apache-maven-<span class="number">3.2</span>.<span class="number">1</span>/</span><br><span class="line"><span class="built_in">export</span> M2=<span class="variable">$M2_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> MAVEN_OPTS=<span class="string">"-Xms256m -Xmx512m"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$M2</span>:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.<span class="number">7.0</span>_51.jdk/Contents/Home</span><br></pre></td></tr></table></figure></p>
<p>Check that we’re good:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mbp:lib akshay$ mvn -version&#10;Apache Maven 3.2.1 (ea8b2b07643dbb1b84b6d16e1f08391b666bc1e9; 2014-02-14T17:37:52+00:00)&#10;Maven home: /Users/akshay/Dev/lib/apache-maven-3.2.1&#10;Java version: 1.7.0_51, vendor: Oracle Corporation&#10;Java home: /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/jre&#10;Default locale: en_US, platform encoding: UTF-8&#10;OS name: &#34;mac os x&#34;, version: &#34;10.9.2&#34;, arch: &#34;x86_64&#34;, family: &#34;mac&#34;</span><br></pre></td></tr></table></figure></p>
<h2 id="Create_repository">Create repository</h2><p>Go to GitHub and create a new private repository<br><img src="/images/postimages/github-newrepo1.png">    </p>
<p>Note I’ve asked it to create a README for me so I can clone. Personal preference - I prefer to <code>clone</code> only rather than <code>init</code>.</p>
<img src="/images/postimages/github-newrepo2.png">    
<img src="/images/postimages/github-newrepo3.png">    
<p>Then clone to your local development directory:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">mbp:</span>Dev akshay$ mkdir Listerly</span><br><span class="line"><span class="string">mbp:</span>Dev akshay$ cd Listerly/</span><br><span class="line"><span class="string">mbp:</span>Listerly akshay$ ls</span><br><span class="line"><span class="string">mbp:</span>Listerly akshay$ git clone <span class="string">https:</span><span class="comment">//github.com/akshayrangnekar/listerly.git</span></span><br><span class="line">Cloning into <span class="string">'listerly'</span>...</span><br><span class="line"><span class="string">remote:</span> Counting <span class="string">objects:</span> <span class="number">3</span>, done.</span><br><span class="line"><span class="string">remote:</span> Total <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">Unpacking <span class="string">objects:</span> <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), done.</span><br><span class="line">Checking connectivity... done.</span><br><span class="line"><span class="string">mbp:</span>Listerly akshay$ cd listerly</span><br><span class="line"><span class="string">mbp:</span>listerly akshay$ ls</span><br><span class="line">README.md</span><br><span class="line"><span class="string">mbp:</span>listerly akshay$</span><br></pre></td></tr></table></figure></p>
<p>That’s it for Part 1. In <a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> we’ll create a Maven project for AppEngine and a simple dummy servlet. </p>
<p><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Continue -&gt;</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>After 10 years away from proper coding, I’m building a new application. I’ll talk more about Listerly and some of my design choices at a later time, but this post should help document the process so if anyone else wants this type of a setup it’s easy to get going.</p>
<p>This application has many moving pieces, and to make my life easier I’m going to have some pretty awesome tools do most of the heavy lifting for me. In no particular order, the key pieces that I’ll be using include Google AppEngine (PAAS), maven (build), git/github (source control), Jersey (RESTful services), Guice (dependency injection), Freemarker (templates), Jackson (JSON) and JPA (persistence).</p>
<ul>
<li><a href="/blog/2014/03/13/up-and-running-on-appengine-with-maven-jersey-and-guice/">Part 1</a> gets you set up with maven and a blank repository on github</li>
<li><a href="/blog/2014/03/14/up-and-running-on-appengine-with-maven-jersey-and-guice-part-2/">Part 2</a> gets you to the point of having a working web application running locally and deployed on AppEngine.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-3/">Part 3</a> adds Jersey and Guice to the mix.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-4/">Part 4</a> makes Jersey useful by demonstrating how to use Freemarker and Jackson to return HTML and JSON respectively.</li>
<li><a href="/blog/2014/03/18/up-and-running-on-appengine-with-maven-jersey-and-guice-part-5/">Part 5</a> will set up persistence to the Google DataStore using JPA.</li>
</ul>]]>
    
    </summary>
    
      <category term="AppEngine" scheme="http://akshayrangnekar.github.io/tags/AppEngine/"/>
    
      <category term="Guice" scheme="http://akshayrangnekar.github.io/tags/Guice/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/tags/Java/"/>
    
      <category term="Jersey" scheme="http://akshayrangnekar.github.io/tags/Jersey/"/>
    
      <category term="Maven" scheme="http://akshayrangnekar.github.io/tags/Maven/"/>
    
      <category term="git" scheme="http://akshayrangnekar.github.io/tags/git/"/>
    
      <category term="github" scheme="http://akshayrangnekar.github.io/tags/github/"/>
    
      <category term="Java" scheme="http://akshayrangnekar.github.io/categories/Java/"/>
    
      <category term="AppEngine" scheme="http://akshayrangnekar.github.io/categories/Java/AppEngine/"/>
    
  </entry>
  
</feed>